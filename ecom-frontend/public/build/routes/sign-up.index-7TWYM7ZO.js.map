{
  "version": 3,
  "sources": ["../../../app/routes/sign-up.index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/sign-up.index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/sign-up.index.tsx\");\n  import.meta.hot.lastModified = \"1745508918462.9395\";\n}\n// REMIX HMR END\n\nimport { Form, Link, useActionData, useSearchParams } from '@remix-run/react';\nimport { json, redirect } from '@remix-run/server-runtime';\nimport { registerCustomerAccount } from '~/providers/account/account';\nimport { XCircleIcon } from '@heroicons/react/24/solid';\nimport { extractRegistrationFormValues, validateRegistrationForm } from '~/utils/registration-helper';\nimport { API_URL, DEMO_API_URL } from '~/constants';\nimport { useTranslation } from 'react-i18next';\nimport { getFixedT } from '~/i18next.server';\nexport async function action({\n  request\n}) {\n  if (API_URL === DEMO_API_URL) {\n    const t = await getFixedT(request);\n    return {\n      form: t('vendure.registrationError')\n    };\n  }\n  const body = await request.formData();\n  const fieldErrors = validateRegistrationForm(body);\n  if (Object.keys(fieldErrors).length !== 0) {\n    return fieldErrors;\n  }\n  const variables = extractRegistrationFormValues(body);\n  const result = await registerCustomerAccount({\n    request\n  }, variables);\n  if (result.__typename === 'Success') {\n    return redirect('/sign-up/success');\n  } else {\n    const formError = {\n      form: result.errorCode\n    };\n    return json(formError, {\n      status: 401\n    });\n  }\n}\nexport default function SignUpPage() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const formErrors = useActionData();\n  const {\n    t\n  } = useTranslation();\n  return <>\n      <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 className=\"mt-6 text-center text-3xl text-gray-900\">\n            {t('account.create')}\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            {t('common.or')}{' '}\n            <Link to=\"/sign-in\" className=\"font-medium text-primary-600 hover:text-primary-500\">\n              {t('account.login')}\n            </Link>\n          </p>\n        </div>\n\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <div className=\"bg-yellow-50 border border-yellow-400 text-yellow-800 rounded p-4 text-center text-sm\">\n              <p>{t('vendure.registrationMessage')}</p>\n            </div>\n            <Form className=\"space-y-6\" method=\"post\">\n              <input type=\"hidden\" name=\"redirectTo\" value={searchParams.get('redirectTo') ?? undefined} />\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                  {t('account.emailAddress')}\n                </label>\n                <div className=\"mt-1\">\n                  <input id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\" />\n                  {formErrors?.email && <div className=\"text-xs text-red-700\">\n                      {formErrors.email}\n                    </div>}\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700\">\n                  {t('account.firstName')}\n                </label>\n                <div className=\"mt-1\">\n                  <input id=\"firstName\" name=\"firstName\" type=\"text\" autoComplete=\"given-name\" className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\" />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700\">\n                  {t('account.lastName')}\n                </label>\n                <div className=\"mt-1\">\n                  <input id=\"lastName\" name=\"lastName\" type=\"text\" autoComplete=\"family-name\" className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\" />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                  {t('account.password')}\n                </label>\n                <div className=\"mt-1\">\n                  <input id=\"password\" name=\"password\" type=\"password\" autoComplete=\"current-password\" className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\" />\n                  {formErrors?.password && <div className=\"text-xs text-red-700\">\n                      {formErrors.password}\n                    </div>}\n                </div>\n              </div>\n              <div>\n                <label htmlFor=\"repeatPassword\" className=\"block text-sm font-medium text-gray-700\">\n                  {t('account.repeatPassword')}\n                </label>\n                <div className=\"mt-1\">\n                  <input id=\"repeatPassword\" name=\"repeatPassword\" type=\"password\" autoComplete=\"current-password\" className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\" />\n                  {formErrors?.repeatPassword && <div className=\"text-xs text-red-700\">\n                      {formErrors.repeatPassword}\n                    </div>}\n                </div>\n              </div>\n              {formErrors?.form && <div className=\"rounded-md bg-red-50 p-4\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                    </div>\n                    <div className=\"ml-3\">\n                      <h3 className=\"text-sm font-medium text-red-800\">\n                        {t('account.createError')}\n                      </h3>\n                      <p className=\"text-sm text-red-700 mt-2\">\n                        {formErrors.form}\n                      </p>\n                    </div>\n                  </div>\n                </div>}\n\n              <div>\n                <button type=\"submit\" className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\">\n                  {t('account.signUp')}\n                </button>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </>;\n}\n_s(SignUpPage, \"n029TOwPr5wHY1YTF6uA/dFOdbw=\", false, function () {\n  return [useSearchParams, useActionData, useTranslation];\n});\n_c = SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
