import { useState, useEffect, useLayoutEffect } from 'react';
import fastDeepEqual from 'fast-deep-equal';

// This is used to avoid the warning when doing SSR and using useLayoutEffect

var useSSRLayoutEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect;
/**
 * Receives an object or array, after each it update it will check if the value
 * is equal to the last one, in case they are it will keep returning the same
 * reference to the old value, if they are different it will update the stored
 * reference and return the new one
 */

function useConsistentValue(value, compare) {
  if (compare === void 0) {
    compare = fastDeepEqual;
  }

  var _React$useState = useState(value),
      consistentValue = _React$useState[0],
      setState = _React$useState[1];

  useSSRLayoutEffect(function () {
    if (compare(value, consistentValue)) return;
    setState(value);
  }, [value]);
  return consistentValue;
}

export default useConsistentValue;
//# sourceMappingURL=use-consistent-value.esm.js.map
