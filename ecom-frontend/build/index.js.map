{
  "version": 3,
  "sources": ["../public/locales/en.json", "../public/locales/es.json", "../public/locales/pt.json", "../public/locales/pt-BR.json", "../app/entry.server.tsx", "../node_modules/remix-i18next/browser/react.js", "../node_modules/remix-i18next/browser/server.js", "../node_modules/remix-i18next/browser/lib/get-client-locales.js", "../app/i18n.ts", "../app/i18next.server.ts", "../app/utils/platform-adapter.ts", "../app/languages.server.ts", "../app/root.tsx", "../app/components/header/Header.tsx", "../app/components/header/SearchBar.tsx", "../app/utils/use-root-loader.ts", "../app/utils/use-scrolling-up.ts", "../app/utils/class-names.ts", "../app/providers/collections/collections.ts", "../app/graphqlWrapper.ts", "../app/constants.ts", "../app/generated/graphql.ts", "../app/sessions.ts", "../app/providers/channel/channel.ts", "../app/components/cart/CartTray.tsx", "../app/components/cart/CartContents.tsx", "../app/components/products/Price.tsx", "../app/providers/customer/customer.ts", "../app/components/footer/Footer.tsx", "../app/utils/use-active-order.tsx", "../app/routes/checkout.confirmation.$orderCode.tsx", "../app/providers/orders/order.ts", "../app/components/cart/CartTotals.tsx", "../app/routes/account.addresses.$addressId.tsx", "../app/components/Button.tsx", "../app/components/modal/Modal.tsx", "../app/components/modal/modal-context.tsx", "../app/components/HighlightedButton.tsx", "../app/utils/use-toggle-state.tsx", "../node_modules/node_modules/lodash.get/index.js", "../node_modules/node_modules/remeda/dist/es/purry.js", "../node_modules/node_modules/remeda/dist/es/equals.js", "../node_modules/@remix-validated-form/with-zod/src/index.ts", "../node_modules/@remix-validated-form/set-get/src/stringToPathArray.ts", "../node_modules/@remix-validated-form/set-get/src/getPath.ts", "../app/components/account/CustomerAddressForm.tsx", "../app/components/Input.tsx", "../app/components/FormElement.tsx", "../app/components/Select.tsx", "../app/providers/account/account.ts", "../app/providers/checkout/checkout.ts", "../app/routes/verify-email-address-change.tsx", "../app/routes/account.addresses.new.tsx", "../app/routes/account.addresses.tsx", "../app/components/account/AddAddressCard.tsx", "../app/components/account/EditAddressCard.tsx", "../app/components/ErrorMessage.tsx", "../app/routes/collections.$slug.tsx", "../app/components/Breadcrumbs.tsx", "../app/components/collections/CollectionCard.tsx", "../app/components/facet-filter/facet-filter-tracker.ts", "../app/components/FiltersButton.tsx", "../app/components/facet-filter/FacetFilterControls.tsx", "../app/components/products/ProductCard.tsx", "../app/utils/pagination.ts", "../app/components/Pagination.tsx", "../app/components/products/NoResultsHint.tsx", "../app/components/products/FilterableProductGrid.tsx", "../app/providers/products/products.ts", "../app/utils/filtered-search-loader.ts", "../app/routes/account.password.tsx", "../app/components/SuccessMessage.tsx", "../app/utils/validation-helper.ts", "../app/routes/api.active-order.tsx", "../app/utils/validation.ts", "../app/routes/checkout.payment.tsx", "../app/components/checkout/stripe/StripePayments.tsx", "../app/components/checkout/stripe/CheckoutForm.tsx", "../app/components/checkout/DummyPayments.tsx", "../app/components/checkout/braintree/BraintreePayments.tsx", "../app/routes/account.history.tsx", "../app/components/account/OrderHistoryItem.tsx", "../app/components/account/OrderStateBadge.tsx", "../app/routes/checkout._index.tsx", "../app/components/account/AddressForm.tsx", "../app/components/checkout/ShippingMethodSelector.tsx", "../app/components/checkout/ShippingAddressSelector.tsx", "../app/routes/sign-up.success.tsx", "../app/routes/account._index.tsx", "../app/routes/products.$slug.tsx", "../app/components/Alert.tsx", "../app/components/products/StockLevelLabel.tsx", "../app/components/products/TopReviews.tsx", "../app/components/products/ScrollableContainer.tsx", "../app/routes/sign-up.index.tsx", "../app/utils/registration-helper.ts", "../app/routes/api.logout.ts", "../app/routes/checkout.tsx", "../app/routes/account.tsx", "../app/components/tabs/Tab.tsx", "../app/components/tabs/TabsContainer.tsx", "../app/routes/sign-in.tsx", "../app/routes/search.tsx", "../app/routes/verify.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["{\n  \"common\": {\n    \"or\": \"Or\",\n    \"readMore\": \"Read more:\",\n    \"tokenError\": \"Verification token was not provided!\",\n    \"shopByCategory\": \"Shop by Category\",\n    \"browseCategories\": \"Browse all categories\",\n    \"resultsFor\": \"Results for\",\n    \"allResults\": \"All results\",\n    \"defaultError\": \"Something went wrong.\",\n    \"unknowError\": \"An unknown error occurred\",\n    \"save\": \"Save\",\n    \"cancel\": \"Cancel\",\n    \"edit\": \"Edit\",\n    \"yes\": \"Yes\",\n    \"shipping\": \"Shipping\",\n    \"billing\": \"Billing\",\n    \"default\": \"Default\",\n    \"remove\": \"Remove\",\n    \"quantity\": \"Quantity\",\n    \"subtotal\": \"Subtotal\",\n    \"total\": \"Total\",\n    \"closePanel\": \"Close panel\",\n    \"closeMenu\": \"Close menu\",\n    \"perPage\": \"per Page\",\n    \"prev\": \"Prev.\",\n    \"next\": \"Next\",\n    \"filters\": \"Filters\",\n    \"select\": \"Select...\",\n    \"home\": \"Home\",\n    \"logoAlt\": \"Vendure logo\",\n    \"search\": \"Search\",\n    \"goHome\": \"Go home\"\n  },\n  \"address\": {\n    \"new\": \"New address\",\n    \"edit\": \"Edit address\",\n    \"company\": \"Company\",\n    \"streetLine1\": \"Address\",\n    \"streetLine2\": \"Apartment, suite, etc.\",\n    \"city\": \"City\",\n    \"country\": \"Country\",\n    \"selectCountry\": \"Select a country...\",\n    \"province\": \"State / Province\",\n    \"postalCode\": \"Postal code\",\n    \"phoneNumber\": \"Phone\",\n    \"idError\": \"Parameter 'id' is missing\",\n    \"deleteModal\": {\n      \"title\": \"Remove Address\",\n      \"confirmation\": \"Do you want to remove this address?\",\n      \"error\": \"Address could not be removed\"\n    }\n  },\n  \"account\": {\n    \"title\": \"Title\",\n    \"firstName\": \"First Name\",\n    \"lastName\": \"Last Name\",\n    \"fullName\": \"Full Name\",\n    \"phoneNumber\": \"Phone Nr.\",\n    \"errorMessage\": \"We ran into a problem updating your details!\",\n    \"verifyMessage\": \"Your account has been verified successfully. Redirecting in 5s...\",\n    \"verifyEmailMessage\": \"Your new E-Mail address has been verified successfully. Redirecting in 5s...\",\n    \"signInTitle\": \"Sign in to your account\",\n    \"signUp\": \"Sign Up\",\n    \"signIn\": \"Sign In\",\n    \"signOut\": \"Sign out\",\n    \"create\": \"Create a new account\",\n    \"createError\": \"We ran into a problem while creating your account!\",\n    \"login\": \"login to your existing account\",\n    \"myAccount\": \"My Account\",\n    \"welcomeBack\": \"Welcome back\",\n    \"details\": \"Account Details\",\n    \"purchaseHistory\": \"Purchase History\",\n    \"addresses\": \"Addresses\",\n    \"register\": \"register a new account\",\n    \"email\": \"E-mail\",\n    \"emailAddress\": \"Email address\",\n    \"password\": \"Password\",\n    \"repeatPassword\": \"Repeat Password\",\n    \"rememberMe\": \"Remember me\",\n    \"forgotPassword\": \"Forgot your password?\",\n    \"errorSignIn\": \"We ran into a problem signing you in!\",\n    \"createdMessage\": \"Your account has been created successfully! A verification link has been sent to your e-mail address.\",\n    \"currentPassword\": \"Current Password\",\n    \"newPassword\": \"New Password\",\n    \"confirmPassword\": \"Confirm Password\",\n    \"pwdSuccessHeading\": \"Success!\",\n    \"pwdSuccessMessage\": \"Your password has been updated.\",\n    \"pwdErrorMessage\": \"Your password has been updated.\",\n    \"savePassword\": \"Save Password\",\n    \"changePassword\": \"Change Password\",\n    \"changeEmailConfirmation\": \"awaiting confirmation\",\n    \"changeEmailButton\": \"awaiting confirmation\",\n    \"changeEmailModal\": {\n      \"title\": \"Change Email Address\",\n      \"heading\": \"We will send a verification email to your new email address.\",\n      \"currentEmail\": \"Your current email address: \",\n      \"new\": \"New Email Address\",\n      \"errorMessage\": \"We ran into a problem changing your E-Mail!\"\n    }\n  },\n  \"cart\": {\n    \"title\": \"Shopping cart\",\n    \"empty\": \"Your cart is empty\",\n    \"shippingMessage\": \"Shipping will be calculated at checkout.\",\n    \"checkout\": \"Checkout\"\n  },\n  \"checkout\": {\n    \"dummyPayment\": \"This is a dummy payment for demonstration purposes only\",\n    \"paymentErrorMessage\": \"There was an error processing the payment\",\n    \"payWith\": \"Pay with\",\n    \"deliveryMethod\": \"Delivery method\",\n    \"paymentProcessing\": \"Processing...\",\n    \"paymentLoading\": \"Loading options...\",\n    \"paymentMessage\": \"Note: your payment is still being processed. You will receive an email confirmation once the payment has completed.\",\n    \"pay\": \"Pay\",\n    \"progress\": \"Progress\",\n    \"orderNotFound\": \"No matching order found!\",\n    \"orderErrorTitle\": \"An error occured!\",\n    \"orderErrorMessage\": \"Unfortunately your payment could not be processed or this confirmation link has expired.\",\n    \"orderProcessing\": \"Please wait while we process your order...\",\n    \"orderSuccessMessage\": \"Your order has been received!\",\n    \"braintreeError\": \"Braintree error:\",\n    \"stripeError\": \"Stripe error:\",\n    \"detailsTitle\": \"Contact information\",\n    \"shippingTitle\": \"Shipping information\",\n    \"goToPayment\": \"Proceed to payment\",\n    \"steps\": {\n      \"shipping\": \"Shipping\",\n      \"payment\": \"Payment\",\n      \"confirmation\": \"Confirmation\"\n    }\n  },\n  \"order\": {\n    \"placedAt\": \"Date placed\",\n    \"totalSum\": \"Total sum\",\n    \"number\": \"Order number\",\n    \"actions\": \"Actions\",\n    \"actionsMessage\": \"Actions for this order (Not implemented)\",\n    \"expand\": \"Expand this order\",\n    \"notShipped\": \"Not shipped yet\",\n    \"trackAlert\": \"Here you'd need to Link your delivery service. Tracking code for this package is\",\n    \"trackPackage\": \"Track package\",\n    \"detailedOverview\": \"Detailed overview\",\n    \"summary\": \"Order summary\",\n    \"shippingAndHandling\": \"Shipping & handling:\",\n    \"totalWithoutTax\": \"Total before tax:\",\n    \"estimatedTax\": \"Estimated tax:\",\n    \"appliedCoupons\": \"Applied coupons:\",\n    \"total\": \"Total:\",\n    \"grandTotal\": \"Grand total:\",\n    \"historyEmpty\": \"Your future orders will appear here\",\n    \"historyEnd\": \"No more orders, end reached\",\n    \"items\": {\n      \"fulfilled\": \"items fulfilled\",\n      \"subtotal\": \"Item(s) Subtotal:\"\n    },\n    \"states\": {\n      \"Draft\": \"Draft\",\n      \"AddingItems\": \"Adding items\",\n      \"ArrangingPayment\": \"Awaiting payment\",\n      \"PaymentAuthorized\": \"Payment authorized\",\n      \"PaymentSettled\": \"Payment settled\",\n      \"PartiallyShipped\": \"Partially shipped\",\n      \"Shipped\": \"Shipped\",\n      \"PartiallyDelivered\": \"Partially delivered\",\n      \"Delivered\": \"Delivered\",\n      \"Modifying\": \"Modifying\",\n      \"ArrangingAdditionalPayment\": \"Awaiting payment\",\n      \"Cancelled\": \"Cancelled\",\n      \"Unknown\": \"Unknown\"\n    }\n  },\n  \"product\": {\n    \"showing\": \"Showing products\",\n    \"to\": \"to\",\n    \"noResults\": \"No results!\",\n    \"filterTip\": \"Try changing your filter settings.\",\n    \"inStock\": \"In stock\",\n    \"outOfStock\": \"Out of stock\",\n    \"lowStock\": \"Low stock\",\n    \"notFound\": \"Product not found!\",\n    \"notFoundInfo\": \"We couldn't find any product at that address!\",\n    \"collections\": \"Collections\",\n    \"collectionNotFound\": \"Collection not found\",\n    \"description\": \"Description\",\n    \"selectOption\": \"Select option\",\n    \"inCart\": \"in cart\",\n    \"addToCart\": \"Add to cart\",\n    \"addToFavorites\": \"Add to favorites\",\n    \"shippingAndReturns\": \"Shipping & Returns\",\n    \"shippingInfo\": \"Standard shipping: 3 - 5 working days. Express shipping: 1 - 3 working days.\",\n    \"shippingCostsInfo\": \"Shipping costs depend on delivery address and will be calculated during checkout.\",\n    \"returnsInfo\": \"Returns are subject to terms. Please see the RETURNS PAGE for further information.\",\n    \"recentReviews\": \"Recent reviews\",\n    \"recentRating\": \"out of 5 stars\"\n  },\n  \"footer\": {\n    \"title\": \"Footer\",\n    \"shop\": \"Shop\",\n    \"support\": \"Support\",\n    \"subscribeHeader\": \"Subscribe to our newsletter\",\n    \"subscribeIntro\": \"Be the first to know about exclusive offers & deals.\",\n    \"emailPlaceholder\": \"Enter your email\",\n    \"subscribe\": \"Subscribe\"\n  },\n  \"navigation\": {\n    \"support\": {\n      \"help\": \"Help\",\n      \"trackOrder\": \"Track order\",\n      \"shipping\": \"Shipping\",\n      \"returns\": \"Returns\"\n    },\n    \"company\": {\n      \"about\": \"About\",\n      \"blog\": \"Blog\",\n      \"responsibility\": \"Corporate responsibility\",\n      \"press\": \"Press\"\n    }\n  },\n  \"vendure\": {\n    \"title\": \"Welcome\",\n    \"intro\": \"Welcome to this project\",\n    \"link\": \"Lightning Fast Headless Commerce with Vendure\",\n    \"demoCredentials\": \"Demo credentials\",\n    \"exclusive\": \"Exclusive: Get your own\",\n    \"repoLinkLabel\": \"FREE storefront starter kit\",\n    \"registrationMessage\": \"Account registration is not supported by the demo Vendure instance. In order to use it, please connect the Remix storefront to your own local / production instance.\",\n    \"registrationError\": \"Registration can't be used with Vendure demo shop! Please connect your own instance.\"\n  }\n}\n", "{\n  \"common\": {\n    \"or\": \"O\",\n    \"readMore\": \"Leer m\u00E1s:\",\n    \"tokenError\": \"\u00A1No se proporcion\u00F3 el token de verificaci\u00F3n!\",\n    \"shopByCategory\": \"Compra por categor\u00EDa\",\n    \"browseCategories\": \"Explorar todas las categor\u00EDas\",\n    \"resultsFor\": \"resultados para\",\n    \"allResults\": \"Todos los resultados\",\n    \"defaultError\": \"Algo sali\u00F3 mal.\",\n    \"unknowError\": \"Un error desconocido ocurri\u00F3\",\n    \"save\": \"Ahorrar\",\n    \"cancel\": \"Cancelar\",\n    \"edit\": \"Editar\",\n    \"yes\": \"S\u00ED\",\n    \"shipping\": \"Env\u00EDo\",\n    \"billing\": \"Facturaci\u00F3n\",\n    \"default\": \"Por defecto\",\n    \"remove\": \"Eliminar\",\n    \"quantity\": \"Cantidad\",\n    \"subtotal\": \"Total parcial\",\n    \"total\": \"Total\",\n    \"closePanel\": \"Cerrar panel\",\n    \"closeMenu\": \"Cerrar men\u00FA\",\n    \"perPage\": \"por p\u00E1gina\",\n    \"prev\": \"Anterior.\",\n    \"next\": \"Pr\u00F3ximo\",\n    \"filters\": \"Filtros\",\n    \"select\": \"Seleccionar...\",\n    \"home\": \"Hogar\",\n    \"logoAlt\": \"logotipo de empresa\",\n    \"search\": \"Buscar\",\n    \"goHome\": \"Vete a casa\"\n  },\n  \"address\": {\n    \"new\": \"Nueva direccion\",\n    \"edit\": \"Editar direcci\u00F3n\",\n    \"company\": \"Compa\u00F1\u00EDa\",\n    \"streetLine1\": \"DIRECCI\u00D3N\",\n    \"streetLine2\": \"Apartamento, suite, etc.\",\n    \"city\": \"Ciudad\",\n    \"country\": \"Pa\u00EDs\",\n    \"selectCountry\": \"Seleccione un pa\u00EDs...\",\n    \"province\": \"Provincia del estado\",\n    \"postalCode\": \"C\u00F3digo Postal\",\n    \"phoneNumber\": \"Tel\u00E9fono\",\n    \"idError\": \"Falta el par\u00E1metro 'id'\",\n    \"deleteModal\": {\n      \"title\": \"Eliminar direcci\u00F3n\",\n      \"confirmation\": \"\u00BFQuieres eliminar esta direcci\u00F3n?\",\n      \"error\": \"No se pudo eliminar la direcci\u00F3n\"\n    }\n  },\n  \"account\": {\n    \"title\": \"T\u00EDtulo\",\n    \"firstName\": \"Nombre de pila\",\n    \"lastName\": \"Apellido\",\n    \"fullName\": \"Nombre completo\",\n    \"phoneNumber\": \"Nr tel\u00E9fono.\",\n    \"errorMessage\": \"\u00A1Tuvimos un problema al actualizar sus datos!\",\n    \"verifyMessage\": \"Su cuenta ha sido verificada exitosamente. \",\n    \"verifyEmailMessage\": \"Su nueva direcci\u00F3n de correo electr\u00F3nico se ha verificado correctamente. \",\n    \"signInTitle\": \"Iniciar sesi\u00F3n en su cuenta\",\n    \"signUp\": \"Inscribirse\",\n    \"signIn\": \"Iniciar sesi\u00F3n\",\n    \"signOut\": \"desconectar\",\n    \"create\": \"Crea una cuenta nueva\",\n    \"createError\": \"\u00A1Tuvimos un problema al crear tu cuenta!\",\n    \"login\": \"inicie sesi\u00F3n en su cuenta existente\",\n    \"myAccount\": \"Mi cuenta\",\n    \"welcomeBack\": \"Bienvenido de nuevo\",\n    \"details\": \"detalles de la cuenta\",\n    \"purchaseHistory\": \"Historial de compras\",\n    \"addresses\": \"Direcciones\",\n    \"register\": \"registre una nueva cuenta\",\n    \"email\": \"Correo electr\u00F3nico\",\n    \"emailAddress\": \"Direcci\u00F3n de correo electr\u00F3nico\",\n    \"password\": \"Contrase\u00F1a\",\n    \"repeatPassword\": \"Repita la contrase\u00F1a\",\n    \"rememberMe\": \"Acu\u00E9rdate de m\u00ED\",\n    \"forgotPassword\": \"\u00BFOlvidaste tu contrase\u00F1a?\",\n    \"errorSignIn\": \"\u00A1Tuvimos un problema al iniciar sesi\u00F3n!\",\n    \"createdMessage\": \"\u00A1Su cuenta ha sido creada con \u00E9xito! \",\n    \"currentPassword\": \"Contrase\u00F1a actual\",\n    \"newPassword\": \"Nueva contrase\u00F1a\",\n    \"confirmPassword\": \"confirmar Contrase\u00F1a\",\n    \"pwdSuccessHeading\": \"\u00A1\u00C9xito!\",\n    \"pwdSuccessMessage\": \"Su contrase\u00F1a ha sido actualizada.\",\n    \"pwdErrorMessage\": \"Su contrase\u00F1a ha sido actualizada.\",\n    \"savePassword\": \"Guardar contrase\u00F1a\",\n    \"changePassword\": \"Cambiar la contrase\u00F1a\",\n    \"changeEmailConfirmation\": \"pendiente de confirmaci\u00F3n\",\n    \"changeEmailButton\": \"pendiente de confirmaci\u00F3n\",\n    \"changeEmailModal\": {\n      \"title\": \"Cambiar direcci\u00F3n de correo electr\u00F3nico\",\n      \"heading\": \"Le enviaremos un correo electr\u00F3nico de verificaci\u00F3n a su nueva direcci\u00F3n de correo electr\u00F3nico.\",\n      \"currentEmail\": \"Su direcci\u00F3n de correo electr\u00F3nico actual: \",\n      \"new\": \"Nueva direcci\u00F3n de correo electr\u00F3nico\",\n      \"errorMessage\": \"\u00A1Tuvimos un problema al cambiar tu correo electr\u00F3nico!\"\n    }\n  },\n  \"cart\": {\n    \"title\": \"Carro de la compra\",\n    \"empty\": \"Tu carrito esta vac\u00EDo\",\n    \"shippingMessage\": \"El env\u00EDo se calcular\u00E1 al finalizar la compra.\",\n    \"checkout\": \"Verificar\"\n  },\n  \"checkout\": {\n    \"dummyPayment\": \"Este es un pago ficticio \u00FAnicamente con fines de demostraci\u00F3n.\",\n    \"paymentErrorMessage\": \"Hubo un error al procesar el pago.\",\n    \"payWith\": \"Pagar con\",\n    \"deliveryMethod\": \"M\u00E9todo de entrega\",\n    \"paymentProcessing\": \"Procesando...\",\n    \"paymentLoading\": \"Cargando opciones...\",\n    \"paymentMessage\": \"Nota: su pago a\u00FAn se est\u00E1 procesando. \",\n    \"pay\": \"Pagar\",\n    \"progress\": \"Progreso\",\n    \"orderNotFound\": \"\u00A1No se encontr\u00F3 ning\u00FAn pedido coincidente!\",\n    \"orderErrorTitle\": \"\u00A1Ocurri\u00F3 un error!\",\n    \"orderErrorMessage\": \"Lamentablemente su pago no pudo ser procesado o este enlace de confirmaci\u00F3n ha caducado.\",\n    \"orderProcessing\": \"Por favor espere mientras procesamos su orden...\",\n    \"orderSuccessMessage\": \"\u00A1Tu orden ha sido recibida!\",\n    \"braintreeError\": \"Error de Braintree:\",\n    \"stripeError\": \"Error de raya:\",\n    \"detailsTitle\": \"Informaci\u00F3n del contacto\",\n    \"shippingTitle\": \"Informaci\u00F3n de env\u00EDo\",\n    \"goToPayment\": \"Proceder al pago\",\n    \"steps\": {\n      \"shipping\": \"Env\u00EDo\",\n      \"payment\": \"Pago\",\n      \"confirmation\": \"Confirmaci\u00F3n\"\n    }\n  },\n  \"order\": {\n    \"placedAt\": \"Fecha de colocaci\u00F3n\",\n    \"totalSum\": \"Suma total\",\n    \"number\": \"N\u00FAmero de orden\",\n    \"actions\": \"Comportamiento\",\n    \"actionsMessage\": \"Acciones para esta orden (No implementada)\",\n    \"expand\": \"Ampliar este pedido\",\n    \"notShipped\": \"No enviado a\u00FAn\",\n    \"trackAlert\": \"Aqu\u00ED deber\u00E1 vincular su servicio de entrega. \",\n    \"trackPackage\": \"Paquete de seguimiento\",\n    \"detailedOverview\": \"Descripci\u00F3n detallada\",\n    \"summary\": \"Resumen del pedido\",\n    \"shippingAndHandling\": \"Env\u00EDo\",\n    \"totalWithoutTax\": \"Total antes de los impuestos:\",\n    \"estimatedTax\": \"Impuesto estimado:\",\n    \"appliedCoupons\": \"Cupones aplicados:\",\n    \"total\": \"Total:\",\n    \"grandTotal\": \"Gran total:\",\n    \"historyEmpty\": \"Tus futuros pedidos aparecer\u00E1n aqu\u00ED\",\n    \"historyEnd\": \"No m\u00E1s pedidos, final alcanzado\",\n    \"items\": {\n      \"fulfilled\": \"art\u00EDculos cumplidos\",\n      \"subtotal\": \"Subtotal del art\u00EDculo(s):\"\n    },\n    \"states\": {\n      \"Draft\": \"Borrador\",\n      \"AddingItems\": \"Agregar elementos\",\n      \"ArrangingPayment\": \"En espera de pago\",\n      \"PaymentAuthorized\": \"Pago autorizado\",\n      \"PaymentSettled\": \"Pago liquidado\",\n      \"PartiallyShipped\": \"Parcialmente Enviado\",\n      \"Shipped\": \"Enviado\",\n      \"PartiallyDelivered\": \"Parcialmente entregado\",\n      \"Delivered\": \"Entregado\",\n      \"Modifying\": \"Modificando\",\n      \"ArrangingAdditionalPayment\": \"En espera de pago\",\n      \"Cancelled\": \"Cancelado\",\n      \"Unknown\": \"Desconocido\"\n    }\n  },\n  \"product\": {\n    \"showing\": \"Mostrando productos\",\n    \"to\": \"a\",\n    \"noResults\": \"\u00A1No hay resultados!\",\n    \"filterTip\": \"Intente cambiar la configuraci\u00F3n de su filtro.\",\n    \"inStock\": \"En stock\",\n    \"outOfStock\": \"Agotado\",\n    \"lowStock\": \"Stock bajo\",\n    \"notFound\": \"\u00A1Producto no encontrado!\",\n    \"notFoundInfo\": \"\u00A1No pudimos encontrar ning\u00FAn producto en esa direcci\u00F3n!\",\n    \"collections\": \"Colecciones\",\n    \"collectionNotFound\": \"Colecci\u00F3n no encontrada\",\n    \"description\": \"Descripci\u00F3n\",\n    \"selectOption\": \"Seleccionar opci\u00F3n\",\n    \"inCart\": \"en el carrito\",\n    \"addToCart\": \"A\u00F1adir a la cesta\",\n    \"addToFavorites\": \"Agregar a los favoritos\",\n    \"shippingAndReturns\": \"Env\u00EDo\",\n    \"shippingInfo\": \"Env\u00EDo est\u00E1ndar: 3 - 5 d\u00EDas laborables. \",\n    \"shippingCostsInfo\": \"Los costos de env\u00EDo dependen de la direcci\u00F3n de entrega y se calcular\u00E1n durante el pago.\",\n    \"returnsInfo\": \"Las devoluciones est\u00E1n sujetas a t\u00E9rminos. \",\n    \"recentReviews\": \"Rese\u00F1as recientes\",\n    \"recentRating\": \"de 5 estrellas\"\n  },\n  \"footer\": {\n    \"title\": \"Pie de p\u00E1gina\",\n    \"shop\": \"Comercio\",\n    \"support\": \"Apoyo\",\n    \"subscribeHeader\": \"Suscr\u00EDbete a nuestro bolet\u00EDn\",\n    \"subscribeIntro\": \"S\u00E9 el primero en enterarte de ofertas exclusivas\",\n    \"emailPlaceholder\": \"Introduce tu correo electr\u00F3nico\",\n    \"subscribe\": \"Suscribir\"\n  },\n  \"navigation\": {\n    \"support\": {\n      \"help\": \"Ayuda\",\n      \"trackOrder\": \"Orden de pista\",\n      \"shipping\": \"Env\u00EDo\",\n      \"returns\": \"Devoluciones\"\n    },\n    \"company\": {\n      \"about\": \"Acerca de\",\n      \"blog\": \"Blog\",\n      \"responsibility\": \"Responsabilidad Corporativa\",\n      \"press\": \"Prensa\"\n    }\n  },\n  \"vendure\": {\n    \"title\": \"Iniciador de remezcla de Vendure\",\n    \"intro\": \"Un kit inicial de escaparate de comercio sin cabeza construido con\",\n    \"link\": \"Comercio sin cabeza a la velocidad del rayo con Vendure y Remix\",\n    \"demoCredentials\": \"Credenciales de demostraci\u00F3n\",\n    \"exclusive\": \"Exclusivo: consigue el tuyo\",\n    \"repoLinkLabel\": \"Kit de inicio de tienda GRATIS\",\n    \"registrationMessage\": \"La instancia de demostraci\u00F3n de Vendure no admite el registro de cuenta. \",\n    \"registrationError\": \"\u00A1El registro no se puede utilizar con la tienda de demostraci\u00F3n Vendure! \"\n  }\n}\n", "{\n  \"common\": {\n    \"or\": \"Ou\",\n    \"readMore\": \"Consulte Mais informa\u00E7\u00E3o:\",\n    \"tokenError\": \"O token de verifica\u00E7\u00E3o n\u00E3o foi fornecido!\",\n    \"shopByCategory\": \"Compre por categoria\",\n    \"browseCategories\": \"Navegue por todas as categorias\",\n    \"resultsFor\": \"Resultados para\",\n    \"allResults\": \"Todos os resultados\",\n    \"defaultError\": \"Algo deu errado.\",\n    \"unknowError\": \"Ocorreu um erro desconhecido\",\n    \"save\": \"Salvar\",\n    \"cancel\": \"Cancelar\",\n    \"edit\": \"Editar\",\n    \"yes\": \"Sim\",\n    \"shipping\": \"Envio\",\n    \"billing\": \"Cobran\u00E7a\",\n    \"default\": \"Padr\u00E3o\",\n    \"remove\": \"Remover\",\n    \"quantity\": \"Quantidade\",\n    \"subtotal\": \"Subtotal\",\n    \"total\": \"Total\",\n    \"closePanel\": \"Fechar painel\",\n    \"closeMenu\": \"Fechar menu\",\n    \"perPage\": \"por p\u00E1gina\",\n    \"prev\": \"Anterior.\",\n    \"next\": \"Pr\u00F3ximo\",\n    \"filters\": \"Filtros\",\n    \"select\": \"Selecione...\",\n    \"home\": \"Lar\",\n    \"logoAlt\": \"Logotipo da venda\",\n    \"search\": \"Procurar\",\n    \"goHome\": \"Ir para casa\"\n  },\n  \"address\": {\n    \"new\": \"Novo endere\u00E7o\",\n    \"edit\": \"Editar Endere\u00E7o\",\n    \"company\": \"Empresa\",\n    \"streetLine1\": \"Endere\u00E7o\",\n    \"streetLine2\": \"Apartamento, su\u00EDte, etc.\",\n    \"city\": \"Cidade\",\n    \"country\": \"Pa\u00EDs\",\n    \"selectCountry\": \"Selecione um pais...\",\n    \"province\": \"Estado/Prov\u00EDncia\",\n    \"postalCode\": \"C\u00F3digo postal\",\n    \"phoneNumber\": \"Telefone\",\n    \"idError\": \"O par\u00E2metro 'id' est\u00E1 faltando\",\n    \"deleteModal\": {\n      \"title\": \"Remover endere\u00E7o\",\n      \"confirmation\": \"Deseja remover este endere\u00E7o?\",\n      \"error\": \"N\u00E3o foi poss\u00EDvel remover o endere\u00E7o\"\n    }\n  },\n  \"account\": {\n    \"title\": \"T\u00EDtulo\",\n    \"firstName\": \"Primeiro nome\",\n    \"lastName\": \"Sobrenome\",\n    \"fullName\": \"Nome completo\",\n    \"phoneNumber\": \"N\u00FAmero de telefone.\",\n    \"errorMessage\": \"Tivemos um problema ao atualizar seus dados!\",\n    \"verifyMessage\": \"Sua conta foi verificada com sucesso. \",\n    \"verifyEmailMessage\": \"Seu novo endere\u00E7o de e-mail foi verificado com sucesso. \",\n    \"signInTitle\": \"Fa\u00E7a login em sua conta\",\n    \"signUp\": \"Inscrever-se\",\n    \"signIn\": \"Entrar\",\n    \"signOut\": \"sair\",\n    \"create\": \"Criar uma nova conta\",\n    \"createError\": \"Tivemos um problema ao criar sua conta!\",\n    \"login\": \"fa\u00E7a login em sua conta existente\",\n    \"myAccount\": \"Minha conta\",\n    \"welcomeBack\": \"bem vindo de volta\",\n    \"details\": \"Detalhes da conta\",\n    \"purchaseHistory\": \"Hist\u00F3rico de compras\",\n    \"addresses\": \"Endere\u00E7os\",\n    \"register\": \"registrar uma nova conta\",\n    \"email\": \"E-mail\",\n    \"emailAddress\": \"Endere\u00E7o de email\",\n    \"password\": \"Senha\",\n    \"repeatPassword\": \"Repita a senha\",\n    \"rememberMe\": \"Lembre de mim\",\n    \"forgotPassword\": \"Esqueceu sua senha?\",\n    \"errorSignIn\": \"Tivemos um problema ao fazer seu login!\",\n    \"createdMessage\": \"Sua conta foi criada com sucesso! \",\n    \"currentPassword\": \"Senha atual\",\n    \"newPassword\": \"Nova Senha\",\n    \"confirmPassword\": \"Confirme sua senha\",\n    \"pwdSuccessHeading\": \"Sucesso!\",\n    \"pwdSuccessMessage\": \"Sua senha foi atualizada.\",\n    \"pwdErrorMessage\": \"Sua senha foi atualizada.\",\n    \"savePassword\": \"Salvar senha\",\n    \"changePassword\": \"Alterar a senha\",\n    \"changeEmailConfirmation\": \"aguardando confirma\u00E7\u00E3o\",\n    \"changeEmailButton\": \"aguardando confirma\u00E7\u00E3o\",\n    \"changeEmailModal\": {\n      \"title\": \"Mude o endere\u00E7o de email\",\n      \"heading\": \"Enviaremos um e-mail de verifica\u00E7\u00E3o para seu novo endere\u00E7o de e-mail.\",\n      \"currentEmail\": \"Seu endere\u00E7o de e-mail atual: \",\n      \"new\": \"Novo Endere\u00E7o de Email\",\n      \"errorMessage\": \"Tivemos um problema ao alterar seu e-mail!\"\n    }\n  },\n  \"cart\": {\n    \"title\": \"Carrinho de compras\",\n    \"empty\": \"Seu carrinho est\u00E1 vazio\",\n    \"shippingMessage\": \"O frete ser\u00E1 calculado na finaliza\u00E7\u00E3o da compra.\",\n    \"checkout\": \"Confira\"\n  },\n  \"checkout\": {\n    \"dummyPayment\": \"Este \u00E9 um pagamento fict\u00EDcio apenas para fins de demonstra\u00E7\u00E3o\",\n    \"paymentErrorMessage\": \"Ocorreu um erro ao processar o pagamento\",\n    \"payWith\": \"Pagar com\",\n    \"deliveryMethod\": \"M\u00E9todo de Entrega\",\n    \"paymentProcessing\": \"Em processamento...\",\n    \"paymentLoading\": \"Carregando op\u00E7\u00F5es...\",\n    \"paymentMessage\": \"Observa\u00E7\u00E3o: seu pagamento ainda est\u00E1 sendo processado. \",\n    \"pay\": \"Pagar\",\n    \"progress\": \"Progresso\",\n    \"orderNotFound\": \"Nenhum pedido correspondente encontrado!\",\n    \"orderErrorTitle\": \"Um erro ocorreu!\",\n    \"orderErrorMessage\": \"Infelizmente, seu pagamento n\u00E3o p\u00F4de ser processado ou este link de confirma\u00E7\u00E3o expirou.\",\n    \"orderProcessing\": \"Aguarde enquanto processamos seu pedido...\",\n    \"orderSuccessMessage\": \"Seu pedido foi recebido!\",\n    \"braintreeError\": \"Erro cerebral:\",\n    \"stripeError\": \"Erro de faixa:\",\n    \"detailsTitle\": \"Informa\u00E7\u00F5es de contato\",\n    \"shippingTitle\": \"Informa\u00E7\u00E3o de envio\",\n    \"goToPayment\": \"Prossiga para o pagamento\",\n    \"steps\": {\n      \"shipping\": \"Envio\",\n      \"payment\": \"Pagamento\",\n      \"confirmation\": \"Confirma\u00E7\u00E3o\"\n    }\n  },\n  \"order\": {\n    \"placedAt\": \"Data colocada\",\n    \"totalSum\": \"Soma total\",\n    \"number\": \"N\u00FAmero do pedido\",\n    \"actions\": \"A\u00E7\u00F5es\",\n    \"actionsMessage\": \"A\u00E7\u00F5es para este pedido (n\u00E3o implementadas)\",\n    \"expand\": \"Expandir este pedido\",\n    \"notShipped\": \"Ainda n\u00E3o foi enviado\",\n    \"trackAlert\": \"Aqui voc\u00EA precisa vincular seu servi\u00E7o de entrega. \",\n    \"trackPackage\": \"Rastrear pacote\",\n    \"detailedOverview\": \"Vis\u00E3o geral detalhada\",\n    \"summary\": \"Resumo do pedido\",\n    \"shippingAndHandling\": \"Envio\",\n    \"totalWithoutTax\": \"Total antes de impostos:\",\n    \"estimatedTax\": \"Imposto estimado:\",\n    \"appliedCoupons\": \"Cupons aplicados:\",\n    \"total\": \"Total:\",\n    \"grandTotal\": \"Total geral:\",\n    \"historyEmpty\": \"Seus pedidos futuros aparecer\u00E3o aqui\",\n    \"historyEnd\": \"N\u00E3o h\u00E1 mais pedidos, fim alcan\u00E7ado\",\n    \"items\": {\n      \"fulfilled\": \"itens cumpridos\",\n      \"subtotal\": \"Subtotal de itens:\"\n    },\n    \"states\": {\n      \"Draft\": \"Rascunho\",\n      \"AddingItems\": \"Adicionando itens\",\n      \"ArrangingPayment\": \"Aguardando pagamento\",\n      \"PaymentAuthorized\": \"Pagamento autorizado\",\n      \"PaymentSettled\": \"Pagamento liquidado\",\n      \"PartiallyShipped\": \"Enviado parcialmente\",\n      \"Shipped\": \"Enviado\",\n      \"PartiallyDelivered\": \"Parcialmente entregue\",\n      \"Delivered\": \"Entregue\",\n      \"Modifying\": \"Modificando\",\n      \"ArrangingAdditionalPayment\": \"Aguardando pagamento\",\n      \"Cancelled\": \"Cancelado\",\n      \"Unknown\": \"Desconhecido\"\n    }\n  },\n  \"product\": {\n    \"showing\": \"Mostrando produtos\",\n    \"to\": \"para\",\n    \"noResults\": \"Sem resultados!\",\n    \"filterTip\": \"Tente alterar as configura\u00E7\u00F5es do filtro.\",\n    \"inStock\": \"Em estoque\",\n    \"outOfStock\": \"Fora de estoque\",\n    \"lowStock\": \"Baixo estoque\",\n    \"notFound\": \"Produto n\u00E3o encontrado!\",\n    \"notFoundInfo\": \"N\u00E3o encontramos nenhum produto nesse endere\u00E7o!\",\n    \"collections\": \"Cole\u00E7\u00F5es\",\n    \"collectionNotFound\": \"Cole\u00E7\u00E3o n\u00E3o encontrada\",\n    \"description\": \"Descri\u00E7\u00E3o\",\n    \"selectOption\": \"Selecione a op\u00E7\u00E3o\",\n    \"inCart\": \"no carrinho\",\n    \"addToCart\": \"Adicionar ao carrinho\",\n    \"addToFavorites\": \"Adicionar aos favoritos\",\n    \"shippingAndReturns\": \"Envio\",\n    \"shippingInfo\": \"Envio padr\u00E3o: 3 a 5 dias \u00FAteis. \",\n    \"shippingCostsInfo\": \"Os custos de envio dependem do endere\u00E7o de entrega e ser\u00E3o calculados durante a finaliza\u00E7\u00E3o da compra.\",\n    \"returnsInfo\": \"As devolu\u00E7\u00F5es est\u00E3o sujeitas a termos. \",\n    \"recentReviews\": \"Avalia\u00E7\u00F5es recentes\",\n    \"recentRating\": \"de 5 estrelas\"\n  },\n  \"footer\": {\n    \"title\": \"Rodap\u00E9\",\n    \"shop\": \"Comprar\",\n    \"support\": \"Apoiar\",\n    \"subscribeHeader\": \"Assine a nossa newsletter\",\n    \"subscribeIntro\": \"Seja o primeiro a saber sobre ofertas exclusivas\",\n    \"emailPlaceholder\": \"Digite seu e-mail\",\n    \"subscribe\": \"Se inscrever\"\n  },\n  \"navigation\": {\n    \"support\": {\n      \"help\": \"Ajuda\",\n      \"trackOrder\": \"Acompanhar Pedido\",\n      \"shipping\": \"Envio\",\n      \"returns\": \"Devolu\u00E7\u00F5es\"\n    },\n    \"company\": {\n      \"about\": \"Sobre\",\n      \"blog\": \"Blogue\",\n      \"responsibility\": \"Responsabilidade corporativa\",\n      \"press\": \"Imprensa\"\n    }\n  },\n  \"vendure\": {\n    \"title\": \"Vendure Remix inicial\",\n    \"intro\": \"Um kit inicial para vitrine de com\u00E9rcio sem cabe\u00E7a desenvolvido com\",\n    \"link\": \"Com\u00E9rcio extremamente r\u00E1pido e sem cabe\u00E7a com venda e remix\",\n    \"demoCredentials\": \"Credenciais de demonstra\u00E7\u00E3o\",\n    \"exclusive\": \"Exclusivo: Adquira o seu\",\n    \"repoLinkLabel\": \"Kit inicial GRATUITO para vitrine\",\n    \"registrationMessage\": \"O registro da conta n\u00E3o \u00E9 compat\u00EDvel com a inst\u00E2ncia de demonstra\u00E7\u00E3o do Vendure. \",\n    \"registrationError\": \"O registro n\u00E3o pode ser usado na loja de demonstra\u00E7\u00E3o Vendure! \"\n  }\n}\n", "{\n  \"common\": {\n    \"or\": \"Ou\",\n    \"readMore\": \"Consulte Mais informa\u00E7\u00E3o:\",\n    \"tokenError\": \"O token de verifica\u00E7\u00E3o n\u00E3o foi fornecido!\",\n    \"shopByCategory\": \"Compre por categoria\",\n    \"browseCategories\": \"Navegue por todas as categorias\",\n    \"resultsFor\": \"Resultados para\",\n    \"allResults\": \"Todos os resultados\",\n    \"defaultError\": \"Algo deu errado.\",\n    \"unknowError\": \"Ocorreu um erro desconhecido\",\n    \"save\": \"Salvar\",\n    \"cancel\": \"Cancelar\",\n    \"edit\": \"Editar\",\n    \"yes\": \"Sim\",\n    \"shipping\": \"Envio\",\n    \"billing\": \"Cobran\u00E7a\",\n    \"default\": \"Padr\u00E3o\",\n    \"remove\": \"Remover\",\n    \"quantity\": \"Quantidade\",\n    \"subtotal\": \"Subtotal\",\n    \"total\": \"Total\",\n    \"closePanel\": \"Fechar painel\",\n    \"closeMenu\": \"Fechar menu\",\n    \"perPage\": \"por p\u00E1gina\",\n    \"prev\": \"Anterior.\",\n    \"next\": \"Pr\u00F3ximo\",\n    \"filters\": \"Filtros\",\n    \"select\": \"Selecione...\",\n    \"home\": \"Lar\",\n    \"logoAlt\": \"Logotipo da venda\",\n    \"search\": \"Procurar\",\n    \"goHome\": \"Ir para casa\"\n  },\n  \"address\": {\n    \"new\": \"Novo endere\u00E7o\",\n    \"edit\": \"Editar Endere\u00E7o\",\n    \"company\": \"Empresa\",\n    \"streetLine1\": \"Endere\u00E7o\",\n    \"streetLine2\": \"Apartamento, su\u00EDte, etc.\",\n    \"city\": \"Cidade\",\n    \"country\": \"Pa\u00EDs\",\n    \"selectCountry\": \"Selecione um pais...\",\n    \"province\": \"Estado/Prov\u00EDncia\",\n    \"postalCode\": \"C\u00F3digo postal\",\n    \"phoneNumber\": \"Telefone\",\n    \"idError\": \"O par\u00E2metro 'id' est\u00E1 faltando\",\n    \"deleteModal\": {\n      \"title\": \"Remover endere\u00E7o\",\n      \"confirmation\": \"Deseja remover este endere\u00E7o?\",\n      \"error\": \"N\u00E3o foi poss\u00EDvel remover o endere\u00E7o\"\n    }\n  },\n  \"account\": {\n    \"title\": \"T\u00EDtulo\",\n    \"firstName\": \"Primeiro nome\",\n    \"lastName\": \"Sobrenome\",\n    \"fullName\": \"Nome completo\",\n    \"phoneNumber\": \"N\u00FAmero de telefone.\",\n    \"errorMessage\": \"Tivemos um problema ao atualizar seus dados!\",\n    \"verifyMessage\": \"Sua conta foi verificada com sucesso. \",\n    \"verifyEmailMessage\": \"Seu novo endere\u00E7o de e-mail foi verificado com sucesso. \",\n    \"signInTitle\": \"Fa\u00E7a login em sua conta\",\n    \"signUp\": \"Inscrever-se\",\n    \"signIn\": \"Entrar\",\n    \"signOut\": \"sair\",\n    \"create\": \"Criar uma nova conta\",\n    \"createError\": \"Tivemos um problema ao criar sua conta!\",\n    \"login\": \"fa\u00E7a login em sua conta existente\",\n    \"myAccount\": \"Minha conta\",\n    \"welcomeBack\": \"bem vindo de volta\",\n    \"details\": \"Detalhes da conta\",\n    \"purchaseHistory\": \"Hist\u00F3rico de compras\",\n    \"addresses\": \"Endere\u00E7os\",\n    \"register\": \"registrar uma nova conta\",\n    \"email\": \"E-mail\",\n    \"emailAddress\": \"Endere\u00E7o de email\",\n    \"password\": \"Senha\",\n    \"repeatPassword\": \"Repita a senha\",\n    \"rememberMe\": \"Lembre de mim\",\n    \"forgotPassword\": \"Esqueceu sua senha?\",\n    \"errorSignIn\": \"Tivemos um problema ao fazer seu login!\",\n    \"createdMessage\": \"Sua conta foi criada com sucesso! \",\n    \"currentPassword\": \"Senha atual\",\n    \"newPassword\": \"Nova Senha\",\n    \"confirmPassword\": \"Confirme sua senha\",\n    \"pwdSuccessHeading\": \"Sucesso!\",\n    \"pwdSuccessMessage\": \"Sua senha foi atualizada.\",\n    \"pwdErrorMessage\": \"Sua senha foi atualizada.\",\n    \"savePassword\": \"Salvar senha\",\n    \"changePassword\": \"Alterar a senha\",\n    \"changeEmailConfirmation\": \"aguardando confirma\u00E7\u00E3o\",\n    \"changeEmailButton\": \"aguardando confirma\u00E7\u00E3o\",\n    \"changeEmailModal\": {\n      \"title\": \"Mude o endere\u00E7o de email\",\n      \"heading\": \"Enviaremos um e-mail de verifica\u00E7\u00E3o para seu novo endere\u00E7o de e-mail.\",\n      \"currentEmail\": \"Seu endere\u00E7o de e-mail atual: \",\n      \"new\": \"Novo Endere\u00E7o de Email\",\n      \"errorMessage\": \"Tivemos um problema ao alterar seu e-mail!\"\n    }\n  },\n  \"cart\": {\n    \"title\": \"Carrinho de compras\",\n    \"empty\": \"Seu carrinho est\u00E1 vazio\",\n    \"shippingMessage\": \"O frete ser\u00E1 calculado na finaliza\u00E7\u00E3o da compra.\",\n    \"checkout\": \"Confira\"\n  },\n  \"checkout\": {\n    \"dummyPayment\": \"Este \u00E9 um pagamento fict\u00EDcio apenas para fins de demonstra\u00E7\u00E3o\",\n    \"paymentErrorMessage\": \"Ocorreu um erro ao processar o pagamento\",\n    \"payWith\": \"Pagar com\",\n    \"deliveryMethod\": \"M\u00E9todo de Entrega\",\n    \"paymentProcessing\": \"Em processamento...\",\n    \"paymentLoading\": \"Carregando op\u00E7\u00F5es...\",\n    \"paymentMessage\": \"Observa\u00E7\u00E3o: seu pagamento ainda est\u00E1 sendo processado. \",\n    \"pay\": \"Pagar\",\n    \"progress\": \"Progresso\",\n    \"orderNotFound\": \"Nenhum pedido correspondente encontrado!\",\n    \"orderErrorTitle\": \"Um erro ocorreu!\",\n    \"orderErrorMessage\": \"Infelizmente, seu pagamento n\u00E3o p\u00F4de ser processado ou este link de confirma\u00E7\u00E3o expirou.\",\n    \"orderProcessing\": \"Aguarde enquanto processamos seu pedido...\",\n    \"orderSuccessMessage\": \"Seu pedido foi recebido!\",\n    \"braintreeError\": \"Erro cerebral:\",\n    \"stripeError\": \"Erro de faixa:\",\n    \"detailsTitle\": \"Informa\u00E7\u00F5es de contato\",\n    \"shippingTitle\": \"Informa\u00E7\u00E3o de envio\",\n    \"goToPayment\": \"Prossiga para o pagamento\",\n    \"steps\": {\n      \"shipping\": \"Envio\",\n      \"payment\": \"Pagamento\",\n      \"confirmation\": \"Confirma\u00E7\u00E3o\"\n    }\n  },\n  \"order\": {\n    \"placedAt\": \"Data colocada\",\n    \"totalSum\": \"Soma total\",\n    \"number\": \"N\u00FAmero do pedido\",\n    \"actions\": \"A\u00E7\u00F5es\",\n    \"actionsMessage\": \"A\u00E7\u00F5es para este pedido (n\u00E3o implementadas)\",\n    \"expand\": \"Expandir este pedido\",\n    \"notShipped\": \"Ainda n\u00E3o foi enviado\",\n    \"trackAlert\": \"Aqui voc\u00EA precisa vincular seu servi\u00E7o de entrega. \",\n    \"trackPackage\": \"Rastrear pacote\",\n    \"detailedOverview\": \"Vis\u00E3o geral detalhada\",\n    \"summary\": \"Resumo do pedido\",\n    \"shippingAndHandling\": \"Envio\",\n    \"totalWithoutTax\": \"Total antes de impostos:\",\n    \"estimatedTax\": \"Imposto estimado:\",\n    \"appliedCoupons\": \"Cupons aplicados:\",\n    \"total\": \"Total:\",\n    \"grandTotal\": \"Total geral:\",\n    \"historyEmpty\": \"Seus pedidos futuros aparecer\u00E3o aqui\",\n    \"historyEnd\": \"N\u00E3o h\u00E1 mais pedidos, fim alcan\u00E7ado\",\n    \"items\": {\n      \"fulfilled\": \"itens cumpridos\",\n      \"subtotal\": \"Subtotal de itens:\"\n    },\n    \"states\": {\n      \"Draft\": \"Rascunho\",\n      \"AddingItems\": \"Adicionando itens\",\n      \"ArrangingPayment\": \"Aguardando pagamento\",\n      \"PaymentAuthorized\": \"Pagamento autorizado\",\n      \"PaymentSettled\": \"Pagamento liquidado\",\n      \"PartiallyShipped\": \"Enviado parcialmente\",\n      \"Shipped\": \"Enviado\",\n      \"PartiallyDelivered\": \"Parcialmente entregue\",\n      \"Delivered\": \"Entregue\",\n      \"Modifying\": \"Modificando\",\n      \"ArrangingAdditionalPayment\": \"Aguardando pagamento\",\n      \"Cancelled\": \"Cancelado\",\n      \"Unknown\": \"Desconhecido\"\n    }\n  },\n  \"product\": {\n    \"showing\": \"Mostrando produtos\",\n    \"to\": \"para\",\n    \"noResults\": \"Sem resultados!\",\n    \"filterTip\": \"Tente alterar as configura\u00E7\u00F5es do filtro.\",\n    \"inStock\": \"Em estoque\",\n    \"outOfStock\": \"Fora de estoque\",\n    \"lowStock\": \"Baixo estoque\",\n    \"notFound\": \"Produto n\u00E3o encontrado!\",\n    \"notFoundInfo\": \"N\u00E3o encontramos nenhum produto nesse endere\u00E7o!\",\n    \"collections\": \"Cole\u00E7\u00F5es\",\n    \"collectionNotFound\": \"Cole\u00E7\u00E3o n\u00E3o encontrada\",\n    \"description\": \"Descri\u00E7\u00E3o\",\n    \"selectOption\": \"Selecione a op\u00E7\u00E3o\",\n    \"inCart\": \"no carrinho\",\n    \"addToCart\": \"Adicionar ao carrinho\",\n    \"addToFavorites\": \"Adicionar aos favoritos\",\n    \"shippingAndReturns\": \"Envio\",\n    \"shippingInfo\": \"Envio padr\u00E3o: 3 a 5 dias \u00FAteis. \",\n    \"shippingCostsInfo\": \"Os custos de envio dependem do endere\u00E7o de entrega e ser\u00E3o calculados durante a finaliza\u00E7\u00E3o da compra.\",\n    \"returnsInfo\": \"As devolu\u00E7\u00F5es est\u00E3o sujeitas a termos. \",\n    \"recentReviews\": \"Avalia\u00E7\u00F5es recentes\",\n    \"recentRating\": \"de 5 estrelas\"\n  },\n  \"footer\": {\n    \"title\": \"Rodap\u00E9\",\n    \"shop\": \"Comprar\",\n    \"support\": \"Apoiar\",\n    \"subscribeHeader\": \"Assine a nossa newsletter\",\n    \"subscribeIntro\": \"Seja o primeiro a saber sobre ofertas exclusivas\",\n    \"emailPlaceholder\": \"Digite seu e-mail\",\n    \"subscribe\": \"Se inscrever\"\n  },\n  \"navigation\": {\n    \"support\": {\n      \"help\": \"Ajuda\",\n      \"trackOrder\": \"Acompanhar Pedido\",\n      \"shipping\": \"Envio\",\n      \"returns\": \"Devolu\u00E7\u00F5es\"\n    },\n    \"company\": {\n      \"about\": \"Sobre\",\n      \"blog\": \"Blogue\",\n      \"responsibility\": \"Responsabilidade corporativa\",\n      \"press\": \"Imprensa\"\n    }\n  },\n  \"vendure\": {\n    \"title\": \"Vendure Remix inicial\",\n    \"intro\": \"Um kit inicial para vitrine de com\u00E9rcio sem cabe\u00E7a desenvolvido com\",\n    \"link\": \"Com\u00E9rcio extremamente r\u00E1pido e sem cabe\u00E7a com venda e remix\",\n    \"demoCredentials\": \"Credenciais de demonstra\u00E7\u00E3o\",\n    \"exclusive\": \"Exclusivo: Adquira o seu\",\n    \"repoLinkLabel\": \"Kit inicial GRATUITO para vitrine\",\n    \"registrationMessage\": \"O registro da conta n\u00E3o \u00E9 compat\u00EDvel com a inst\u00E2ncia de demonstra\u00E7\u00E3o do Vendure. \",\n    \"registrationError\": \"O registro n\u00E3o pode ser usado na loja de demonstra\u00E7\u00E3o Vendure! \"\n  }\n}\n", "import type { EntryContext } from '@remix-run/server-runtime';\nimport { RemixServer } from '@remix-run/react';\nimport isbot from 'isbot';\n\nimport ReactDOM from 'react-dom/server';\n\nimport { createInstance } from 'i18next';\nimport { getI18NextServer, getPlatformBackend } from './i18next.server';\nimport { I18nextProvider, initReactI18next } from 'react-i18next';\nimport i18n from './i18n';\nimport {\n  IS_CF_PAGES,\n  safeRequireNodeDependency,\n} from '~/utils/platform-adapter';\n\nconst ABORT_DELAY = 5000;\n\ntype PlatformRequestHandler = (\n  arg0: Request,\n  arg1: number,\n  arg2: Headers,\n  arg3: EntryContext,\n  arg4: JSX.Element,\n) => Response | Promise<Response>;\n\nasync function handleCfRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  jsx: JSX.Element,\n) {\n  const body = await ReactDOM.renderToReadableStream(jsx, {\n    signal: request.signal,\n    onError(error: unknown) {\n      // Log streaming rendering errors from inside the shell\n      console.error(error);\n      responseStatusCode = 500;\n    },\n  });\n\n  if (isbot(request.headers.get('user-agent'))) {\n    await body.allReady;\n  }\n\n  responseHeaders.set('Content-Type', 'text/html');\n  return new Response(body, {\n    headers: responseHeaders,\n    status: responseStatusCode,\n  });\n}\n\nasync function handleNodeRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  jsx: JSX.Element,\n): Promise<Response> {\n  let callbackName = isbot(request.headers.get('user-agent'))\n    ? 'onAllReady'\n    : 'onShellReady';\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    let { pipe, abort } = ReactDOM.renderToPipeableStream(jsx, {\n      [callbackName]: async () => {\n        const { PassThrough } = await safeRequireNodeDependency('node:stream');\n\n        const { createReadableStreamFromReadable } =\n          await safeRequireNodeDependency('@remix-run/node');\n\n        const body = new PassThrough();\n        const stream = createReadableStreamFromReadable(body);\n        responseHeaders.set('Content-Type', 'text/html');\n\n        resolve(\n          new Response(stream, {\n            headers: responseHeaders,\n            status: didError ? 500 : responseStatusCode,\n          }),\n        );\n        pipe(body);\n      },\n      onShellError(error: unknown) {\n        reject(error);\n      },\n      onError(error: unknown) {\n        didError = true;\n\n        console.error(error);\n      },\n    });\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nexport default async function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  let instance = createInstance();\n  let lng = await getI18NextServer().then((i18next) =>\n    i18next.getLocale(request),\n  );\n\n  await instance\n    .use(initReactI18next)\n    .use(await getPlatformBackend())\n    .init({\n      ...i18n,\n      lng,\n    });\n\n  const jsx = (\n    <I18nextProvider i18n={instance}>\n      <RemixServer context={remixContext} url={request.url} />\n    </I18nextProvider>\n  );\n\n  const requestHandler: PlatformRequestHandler = IS_CF_PAGES\n    ? handleCfRequest\n    : handleNodeRequest;\n\n  return requestHandler(\n    request,\n    responseStatusCode,\n    responseHeaders,\n    remixContext,\n    jsx,\n  );\n}\n", "import { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useMatches } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n/**\n * Preload the translations files for the current language and the namespaces\n * required by the routes.\n *\n * It receives a single `loadPath` prop with the path to the translation files.\n *\n * @example\n * <PreloadTranslations loadPath=\"/locales/{{lng}}/{{ns}}.json\" />\n *\n */\nexport function PreloadTranslations({ loadPath }) {\n    let { i18n } = useTranslation();\n    let namespaces = [\n        ...new Set(useMatches()\n            .filter((route) => { var _a; return ((_a = route.handle) === null || _a === void 0 ? void 0 : _a.i18n) !== undefined; })\n            .flatMap((route) => route.handle.i18n)),\n    ];\n    let lang = i18n.language;\n    return (_jsx(_Fragment, { children: namespaces.map((namespace) => {\n            return (_jsx(\"link\", { rel: \"preload\", as: \"fetch\", href: loadPath\n                    .replace(\"{{lng}}\", lang)\n                    .replace(\"{{ns}}\", namespace) }, namespace));\n        }) }));\n}\n/**\n * Get the locale returned by the root route loader under the `locale` key.\n * @example\n * let locale = useLocale()\n * let formattedDate = date.toLocaleDateString(locale);\n * @example\n * let locale = useLocale(\"language\")\n * let formattedDate = date.toLocaleDateString(locale);\n */\nexport function useLocale(localeKey = \"locale\") {\n    var _a;\n    let [rootMatch] = useMatches();\n    let { [localeKey]: locale } = (_a = rootMatch.data) !== null && _a !== void 0 ? _a : {};\n    if (!locale)\n        throw new Error(\"Missing locale returned by the root loader.\");\n    if (typeof locale === \"string\")\n        return locale;\n    throw new Error(\"Invalid locale returned by the root loader.\");\n}\n/**\n * Detect when the locale returned by the root route loader changes and call\n * `i18n.changeLanguage` with the new locale.\n * This will ensure translations are loaded automatically.\n */\nexport function useChangeLanguage(locale) {\n    let { i18n } = useTranslation();\n    useEffect(() => {\n        i18n.changeLanguage(locale);\n    }, [locale, i18n]);\n}\n", "import { pick } from \"accept-language-parser\";\nimport { createInstance, } from \"i18next\";\nimport { getClientLocales } from \"./lib/get-client-locales\";\nconst DEFAULT_NS = \"translation\";\nexport class RemixI18Next {\n    constructor(options) {\n        this.options = options;\n        this.detector = new LanguageDetector(this.options.detection);\n    }\n    /**\n     * Detect the current locale by following the order defined in the\n     * `detection.order` option.\n     * By default the order is\n     * - searchParams\n     * - cookie\n     * - session\n     * - header\n     * And finally the fallback language.\n     */\n    async getLocale(request) {\n        return this.detector.detect(request);\n    }\n    /**\n     * Get the namespaces required by the routes which are going to be rendered\n     * when doing SSR.\n     *\n     * @param context The EntryContext object received by `handleRequest` in entry.server\n     *\n     * @example\n     * await instance.init({\n     *   ns: i18n.getRouteNamespaces(context),\n     *   // ...more options\n     * });\n     */\n    getRouteNamespaces(context) {\n        let namespaces = Object.values(context.routeModules)\n            .filter((route) => { var _a; return ((_a = route.handle) === null || _a === void 0 ? void 0 : _a.i18n) !== undefined; })\n            .flatMap((route) => {\n            let i18n = route.handle.i18n;\n            if (typeof i18n === \"string\")\n                return i18n;\n            if (!Array.isArray(i18n))\n                return [];\n            if (i18n.every((ns) => typeof ns === \"string\"))\n                return i18n;\n            return [];\n        });\n        return [...new Set(namespaces)];\n    }\n    async getFixedT(requestOrLocale, namespaces, options = {}) {\n        var _a;\n        let parsedNamespaces = namespaces !== null && namespaces !== void 0 ? namespaces : DEFAULT_NS;\n        // Make sure there's at least one namespace\n        if (!namespaces || namespaces.length === 0) {\n            parsedNamespaces = (((_a = this.options.i18next) === null || _a === void 0 ? void 0 : _a.defaultNS) ||\n                \"translation\");\n        }\n        let [instance, locale] = await Promise.all([\n            this.createInstance({\n                ...this.options.i18next,\n                ...options,\n                fallbackNS: parsedNamespaces,\n                defaultNS: typeof parsedNamespaces === \"string\"\n                    ? parsedNamespaces\n                    : parsedNamespaces[0],\n            }),\n            typeof requestOrLocale === \"string\"\n                ? requestOrLocale\n                : this.getLocale(requestOrLocale),\n        ]);\n        await instance.changeLanguage(locale);\n        await instance.loadNamespaces(parsedNamespaces);\n        return instance.getFixedT(locale, parsedNamespaces);\n    }\n    async createInstance(options = {}) {\n        let instance = createInstance();\n        let plugins = [\n            ...(this.options.backend ? [this.options.backend] : []),\n            ...(this.options.plugins || []),\n        ];\n        for (const plugin of plugins)\n            instance.use(plugin);\n        await instance.init(options);\n        return instance;\n    }\n}\nclass LanguageDetector {\n    constructor(options) {\n        this.options = options;\n        this.isSessionOnly(options);\n        this.isCookieOnly(options);\n    }\n    isSessionOnly(options) {\n        var _a;\n        if (((_a = options.order) === null || _a === void 0 ? void 0 : _a.length) === 1 &&\n            options.order[0] === \"session\" &&\n            !options.sessionStorage) {\n            throw new Error(\"You need a sessionStorage if you want to only get the locale from the session\");\n        }\n    }\n    isCookieOnly(options) {\n        var _a;\n        if (((_a = options.order) === null || _a === void 0 ? void 0 : _a.length) === 1 &&\n            options.order[0] === \"cookie\" &&\n            !options.cookie) {\n            throw new Error(\"You need a cookie if you want to only get the locale from the cookie\");\n        }\n    }\n    async detect(request) {\n        var _a;\n        let order = (_a = this.options.order) !== null && _a !== void 0 ? _a : [\n            \"searchParams\",\n            \"cookie\",\n            \"session\",\n            \"header\",\n        ];\n        for (let method of order) {\n            let locale = null;\n            if (method === \"searchParams\") {\n                locale = await this.fromSearchParams(request);\n            }\n            if (method === \"cookie\") {\n                locale = await this.fromCookie(request);\n            }\n            if (method === \"session\") {\n                locale = await this.fromSessionStorage(request);\n            }\n            if (method === \"header\") {\n                locale = await this.fromHeader(request);\n            }\n            if (locale)\n                return locale;\n        }\n        return this.options.fallbackLanguage;\n    }\n    async fromSearchParams(request) {\n        var _a, _b;\n        let url = new URL(request.url);\n        if (!url.searchParams.has((_a = this.options.searchParamKey) !== null && _a !== void 0 ? _a : \"lng\")) {\n            return null;\n        }\n        return this.fromSupported(url.searchParams.get((_b = this.options.searchParamKey) !== null && _b !== void 0 ? _b : \"lng\"));\n    }\n    async fromCookie(request) {\n        var _a;\n        if (!this.options.cookie)\n            return null;\n        let cookie = this.options.cookie;\n        let lng = (_a = (await cookie.parse(request.headers.get(\"Cookie\")))) !== null && _a !== void 0 ? _a : \"\";\n        if (!lng)\n            return null;\n        return this.fromSupported(lng);\n    }\n    async fromSessionStorage(request) {\n        var _a;\n        if (!this.options.sessionStorage)\n            return null;\n        let session = await this.options.sessionStorage.getSession(request.headers.get(\"Cookie\"));\n        let lng = session.get((_a = this.options.sessionKey) !== null && _a !== void 0 ? _a : \"lng\");\n        if (!lng)\n            return null;\n        return this.fromSupported(lng);\n    }\n    async fromHeader(request) {\n        let locales = getClientLocales(request);\n        if (!locales)\n            return null;\n        if (Array.isArray(locales))\n            return this.fromSupported(locales.join(\",\"));\n        return this.fromSupported(locales);\n    }\n    fromSupported(language) {\n        return (pick(this.options.supportedLanguages, language !== null && language !== void 0 ? language : this.options.fallbackLanguage, { loose: false }) ||\n            pick(this.options.supportedLanguages, language !== null && language !== void 0 ? language : this.options.fallbackLanguage, { loose: true }));\n    }\n}\n", "import { parseAcceptLanguage } from \"intl-parse-accept-language\";\nexport function getClientLocales(requestOrHeaders) {\n    let headers = getHeaders(requestOrHeaders);\n    let acceptLanguage = headers.get(\"Accept-Language\");\n    // if the header is not defined, return undefined\n    if (!acceptLanguage)\n        return undefined;\n    let locales = parseAcceptLanguage(acceptLanguage, {\n        validate: Intl.DateTimeFormat.supportedLocalesOf,\n        ignoreWildcard: true,\n    });\n    // if there are no locales found, return undefined\n    if (locales.length === 0)\n        return undefined;\n    // if there is only one locale, return it\n    if (locales.length === 1)\n        return locales[0];\n    // if there are multiple locales, return the array\n    return locales;\n}\n/**\n * Receives a Request or Headers objects.\n * If it's a Request returns the request.headers\n * If it's a Headers returns the object directly.\n */\nfunction getHeaders(requestOrHeaders) {\n    if (requestOrHeaders instanceof Request) {\n        return requestOrHeaders.headers;\n    }\n    return requestOrHeaders;\n}\n", "export default {\n  supportedLngs: ['en', 'es', 'pt', 'pt-BR'],\n  fallbackLng: 'en',\n  // Disabling suspense is recommended\n  react: { useSuspense: false },\n  backend: {\n    loadPath: '../public/locales/{{lng}}/{{ns}}.json',\n  },\n};\n", "import { RemixI18Next } from 'remix-i18next';\n\nimport i18n from '~/i18n'; // your i18n configuration file\nimport HttpBackend from 'i18next-http-backend';\nimport {\n  IS_CF_PAGES,\n  safeRequireNodeDependency,\n} from '~/utils/platform-adapter';\nimport { RemixI18NextOption } from 'remix-i18next/build/server';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport { findLanguageJSON } from '~/languages.server';\n\nexport async function getPlatformBackend() {\n  if (IS_CF_PAGES) {\n    return HttpBackend;\n  } else {\n    return await safeRequireNodeDependency('i18next-fs-backend').then(\n      (module) => module.default,\n    );\n  }\n}\n\n/*\n * This is done to prevent hydration errors\n * entry.server.tsx must use the http backend in a cloudflare context, but loaders/action functions need to load translations into memory\n */\nexport async function getPlatformBackendApiCtx() {\n  if (IS_CF_PAGES) {\n    return resourcesToBackend(findLanguageJSON);\n  }\n\n  return getPlatformBackend();\n}\n\nexport async function platformAdapti18nConfig(config: RemixI18NextOption) {\n  const backend = await getPlatformBackendApiCtx();\n  if (Array.isArray(config.plugins)) {\n    config.plugins = [...config.plugins, backend];\n  } else {\n    config.plugins = [backend];\n  }\n\n  return config;\n}\n\nexport async function getI18NextServer() {\n  return platformAdapti18nConfig({\n    detection: {\n      supportedLanguages: i18n.supportedLngs,\n      fallbackLanguage: i18n.fallbackLng,\n    },\n    // This is the configuration for i18next used\n    // when translating messages server-side only\n    i18next: {\n      ...i18n,\n    },\n    // The i18next plugins you want RemixI18next to use for `i18n.getFixedT` inside loaders and actions.\n    // E.g. The Backend plugin for loading translations from the file system\n    // Tip: You could pass `resources` to the `i18next` configuration and avoid a backend here\n    plugins: [],\n  }).then((config) => new RemixI18Next(config));\n}\n\nexport async function getFixedT(request: Request) {\n  return getI18NextServer().then((i18next) => i18next.getFixedT(request));\n}\n", "export const IS_CF_PAGES = typeof process === 'undefined';\n\n// This hack is to prevent `node` modules/packages being bundled in the\n// Cloudflare Pages context, which causes an error.\nexport async function safeRequireNodeDependency(module: string) {\n  return import(module.split('').join(''));\n}\n", "/*\n * True dynamic imports don't seem possible from the CF pages context, so we must keep a reference to the languages being imported\n */\nconst languagesServer: { [key: string]: () => any } = {\n  en: () => import('../public/locales/en.json'),\n  es: () => import('../public/locales/es.json'),\n  pt: () => import('../public/locales/pt.json'),\n  'pt-BR': () => import('../public/locales/pt-BR.json'),\n};\n\nexport function findLanguageJSON(language: string, namespace: string) {\n  const lngNs = `${language}-${namespace}`;\n\n  const importFn =\n    lngNs in languagesServer\n      ? languagesServer[lngNs]\n      : languagesServer[language];\n\n  if (importFn) {\n    return importFn();\n  }\n\n  return Promise.reject();\n}\n", "import { cssBundleHref } from '@remix-run/css-bundle';\nimport {\n  isRouteErrorResponse,\n  Link,\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  ShouldRevalidateFunction,\n  useLoaderData,\n  useRouteError,\n  MetaFunction } from\n'@remix-run/react';\nimport stylesheet from './tailwind.css';\nimport { Header } from './components/header/Header';\nimport {\n  DataFunctionArgs,\n  json,\n  LinksFunction } from\n'@remix-run/server-runtime';\nimport { getCollections } from '~/providers/collections/collections';\nimport { activeChannel } from '~/providers/channel/channel';\nimport { APP_META_DESCRIPTION, APP_META_TITLE } from '~/constants';\nimport { useEffect, useState } from 'react';\nimport { CartTray } from '~/components/cart/CartTray';\nimport { getActiveCustomer } from '~/providers/customer/customer';\nimport Footer from '~/components/footer/Footer';\nimport { useActiveOrder } from '~/utils/use-active-order';\nimport { useChangeLanguage } from 'remix-i18next';\nimport { useTranslation } from 'react-i18next';\nimport { getI18NextServer } from '~/i18next.server';\n\nexport const meta: MetaFunction = () => {\n  return [{ title: APP_META_TITLE }, { description: APP_META_DESCRIPTION }];\n};\n\nexport const links: LinksFunction = () => [\n{ rel: 'stylesheet', href: stylesheet },\n...(cssBundleHref ? [{ rel: 'stylesheet', href: cssBundleHref }] : [])];\n\n\nconst devMode =\ntypeof process !== 'undefined' && process.env.NODE_ENV === 'development';\n\n// The root data does not change once loaded.\nexport const shouldRevalidate: ShouldRevalidateFunction = ({\n  nextUrl,\n  currentUrl,\n  formAction\n}) => {\n  if (currentUrl.pathname === '/sign-in') {\n    // just logged in\n    return true;\n  }\n  if (currentUrl.pathname === '/account' && nextUrl.pathname === '/') {\n    // just logged out\n    return true;\n  }\n  if (formAction === '/checkout/payment') {\n    // submitted payment for order\n    return true;\n  }\n  return false;\n};\n\nexport type RootLoaderData = {\n  activeCustomer: Awaited<ReturnType<typeof getActiveCustomer>>;\n  activeChannel: Awaited<ReturnType<typeof activeChannel>>;\n  collections: Awaited<ReturnType<typeof getCollections>>;\n  locale: string;\n};\n\nexport async function loader({ request, params, context }: DataFunctionArgs) {\n  const collections = await getCollections(request, { take: 20 });\n  const topLevelCollections = collections.filter(\n    (collection) => collection.parent?.name === '__root_collection__'\n  );\n  const activeCustomer = await getActiveCustomer({ request });\n  const locale = await getI18NextServer().then((i18next) =>\n  i18next.getLocale(request)\n  );\n  const loaderData: RootLoaderData = {\n    activeCustomer,\n    activeChannel: await activeChannel({ request }),\n    collections: topLevelCollections,\n    locale\n  };\n\n  return json(loaderData, { headers: activeCustomer._headers });\n}\n\nexport default function App() {\n  const [open, setOpen] = useState(false);\n  const loaderData = useLoaderData<RootLoaderData>();\n  const { collections } = loaderData;\n  const { locale } = useLoaderData<typeof loader>();\n  const { i18n } = useTranslation();\n  const {\n    activeOrderFetcher,\n    activeOrder,\n    adjustOrderLine,\n    removeItem,\n    refresh\n  } = useActiveOrder();\n\n  useChangeLanguage(locale);\n\n  useEffect(() => {\n    // When the loader has run, this implies we should refresh the contents\n    // of the activeOrder as the user may have signed in or out.\n    refresh();\n  }, [loaderData]);\n\n  return (\n    <html lang={locale} dir={i18n.dir()} id=\"app\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" type=\"image/png\"></link>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Header\n          onCartIconClick={() => setOpen(!open)}\n          cartQuantity={activeOrder?.totalQuantity ?? 0} />\n\n        <main className=\"\">\n          <Outlet\n            context={{\n              activeOrderFetcher,\n              activeOrder,\n              adjustOrderLine,\n              removeItem\n            }} />\n\n        </main>\n        <CartTray\n          open={open}\n          onClose={setOpen}\n          activeOrder={activeOrder}\n          adjustOrderLine={adjustOrderLine}\n          removeItem={removeItem} />\n\n        <ScrollRestoration />\n        <Scripts />\n        <Footer collections={collections}></Footer>\n\n        {devMode && <LiveReload />}\n      </body>\n    </html>);\n\n}\n\ntype DefaultSparseErrorPageProps = {\n  tagline: string;\n  headline: string;\n  description: string;\n};\n\n/**\n * You should replace this in your actual storefront to provide a better user experience.\n * You probably want to still show your footer and navigation. You will also need fallbacks\n * for your data dependant components in case your shop instance / CMS isnt responding.\n * See: https://remix.run/docs/en/main/route/error-boundary\n */\nfunction DefaultSparseErrorPage({\n  tagline,\n  headline,\n  description\n}: DefaultSparseErrorPageProps) {\n  return (\n    <html lang=\"en\" id=\"app\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" type=\"image/png\"></link>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <main className=\"flex flex-col items-center px-4 py-16 sm:py-32 text-center\">\n          <span className=\"text-sm font-semibold text-gray-500 uppercase tracking-wide\">\n            {tagline}\n          </span>\n          <h1 className=\"mt-2 font-bold text-gray-900 tracking-tight text-4xl sm:text-5xl\">\n            {headline}\n          </h1>\n          <p className=\"mt-4 text-base text-gray-500 max-w-full break-words\">\n            {description}\n          </p>\n          <div className=\"mt-6\">\n            <Link\n              to=\"/\"\n              className=\"text-base font-medium text-primary-600 hover:text-primary-500 inline-flex gap-2\">\n\n              Go back home\n            </Link>\n          </div>\n        </main>\n        <ScrollRestoration />\n        <Scripts />\n        {devMode && <LiveReload />}\n      </body>\n    </html>);\n\n}\n\n/**\n * As mentioned in the jsdoc for `DefaultSparseErrorPage` you should replace this to suit your needs.\n */\nexport function ErrorBoundary() {\n  let tagline = 'Oopsy daisy';\n  let headline = 'Unexpected error';\n  let description = \"We couldn't handle your request. Please try again later.\";\n\n  const error = useRouteError();\n  if (isRouteErrorResponse(error)) {\n    tagline = `${error.status} error`;\n    headline = error.statusText;\n    description = error.data;\n  }\n\n  return (\n    <DefaultSparseErrorPage\n      tagline={tagline}\n      headline={headline}\n      description={description} />);\n\n\n}\n\n/**\n * In Remix v2 there will only be a `ErrorBoundary`\n * As mentioned in the jsdoc for `DefaultSparseErrorPage` you should replace this to suit your needs.\n * Relevant for the future: https://remix.run/docs/en/main/route/error-boundary-v2\n */\nexport function CatchBoundary() {\n  return ErrorBoundary();\n}", "import { Link, useLoaderData } from '@remix-run/react';\nimport { ShoppingBagIcon } from '@heroicons/react/24/outline';\nimport { SearchBar } from '~/components/header/SearchBar';\nimport { useRootLoader } from '~/utils/use-root-loader';\nimport { UserIcon } from '@heroicons/react/24/solid';\nimport { useScrollingUp } from '~/utils/use-scrolling-up';\nimport { classNames } from '~/utils/class-names';\nimport { useTranslation } from 'react-i18next';\n\nexport function Header({\n  onCartIconClick,\n  cartQuantity,\n}: {\n  onCartIconClick: () => void;\n  cartQuantity: number;\n}) {\n  const data = useRootLoader();\n  const isSignedIn = !!data.activeCustomer.activeCustomer?.id;\n  const isScrollingUp = useScrollingUp();\n  const { t } = useTranslation();\n\n  return (\n    <header\n      className={classNames(\n        isScrollingUp ? 'sticky top-0 z-10 animate-dropIn' : '',\n        'bg-gradient-to-r from-zinc-700 to-gray-900 shadow-lg transform shadow-xl',\n      )}\n    >\n      <div className=\"max-w-6xl mx-auto p-4 flex items-center space-x-4\">\n        <h1 className=\"text-white w-10\">\n          <Link to=\"/\">\n            <img\n              src=\"/cube-logo-small.webp\"\n              width={40}\n              height={31}\n              alt={t('commmon.logoAlt')}\n            />\n          </Link>\n        </h1>\n        <div className=\"flex space-x-4 hidden sm:block\">\n          {data.collections.map((collection) => (\n            <Link\n              className=\"text-sm md:text-base text-gray-200 hover:text-white\"\n              to={'/collections/' + collection.slug}\n              prefetch=\"intent\"\n              key={collection.id}\n            >\n              {collection.name}\n            </Link>\n          ))}\n        </div>\n        <div className=\"flex-1 md:pr-8\">\n          <SearchBar></SearchBar>\n        </div>\n        <div className=\"\">\n          <button\n            className=\"relative w-9 h-9 bg-white bg-opacity-20 rounded text-white p-1\"\n            onClick={onCartIconClick}\n            aria-label=\"Open cart tray\"\n          >\n            <ShoppingBagIcon></ShoppingBagIcon>\n            {cartQuantity ? (\n              <div className=\"absolute rounded-full -top-2 -right-2 bg-primary-600 min-w-6 min-h-6 flex items-center justify-center text-xs p-1\">\n                {cartQuantity}\n              </div>\n            ) : (\n              ''\n            )}\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n", "import { Form } from '@remix-run/react';\nimport { useTranslation } from 'react-i18next';\n\nexport function SearchBar() {\n  const { t } = useTranslation();\n\n  let initialQuery = '';\n  if (typeof window === 'undefined') {\n    // running in a server environment\n  } else {\n    // running in a browser environment\n    initialQuery = new URL(window.location.href).searchParams.get('q') ?? '';\n  }\n\n  return (\n    <Form method=\"get\" action=\"/search\" key={initialQuery}>\n      <input\n        type=\"search\"\n        name=\"q\"\n        defaultValue={initialQuery}\n        placeholder={t('common.search')}\n        className=\"shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n      />\n    </Form>\n  );\n}\n", "import { useMatches } from '@remix-run/react';\nimport { loader as rootLoader, RootLoaderData } from '~/root';\n\nexport function useRootLoader(): RootLoaderData {\n  return useMatches().find((match) => match.id === 'root')!\n    .data as RootLoaderData;\n}\n", "import { useEffect, useState } from 'react';\n\n/**\n * useScrollingUp\n * Adapted from https://devmuscle.com/blog/react-sticky-header. Thanks, Defne Ero\u011Flu\n * @returns {boolean}\n */\nexport const useScrollingUp = () => {\n  let prevScroll: number;\n  //if it is SSR then check you are now on the client and window object is available\n  if (typeof window !== 'undefined') {\n    prevScroll = window.pageYOffset;\n  }\n  const [scrollingUp, setScrollingUp] = useState(false);\n  const handleScroll = () => {\n    const currScroll = window.pageYOffset;\n    const isScrolled = prevScroll > currScroll;\n    setScrollingUp(isScrolled);\n    prevScroll = currScroll;\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, { passive: true });\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return scrollingUp;\n};\n", "import React from 'react';\n\nexport function classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport function mergeClassName(\n  props: React.HTMLAttributes<any>,\n  className: string,\n) {\n  if (props.className !== undefined) {\n    return {\n      ...props,\n      className: `${props.className} ${className}`,\n    };\n  }\n\n  return {\n    ...props,\n    className: className,\n  };\n}\n", "import gql from 'graphql-tag';\nimport { sdk } from '../../graphqlWrapper';\nimport { listedProductFragment } from '../products/products';\nimport { CollectionListOptions } from '~/generated/graphql';\n\nexport function getCollections(\n  request: Request,\n  options?: CollectionListOptions,\n) {\n  return sdk\n    .collections({ options }, { request })\n    .then((result) => result.collections?.items);\n}\n\ngql`\n  query collections($options: CollectionListOptions) {\n    collections(options: $options) {\n      items {\n        id\n        name\n        slug\n        parent {\n          name\n        }\n        featuredAsset {\n          id\n          preview\n        }\n      }\n    }\n  }\n`;\n\ngql`\n  query collection($slug: String, $id: ID) {\n    collection(slug: $slug, id: $id) {\n      id\n      name\n      slug\n      breadcrumbs {\n        id\n        name\n        slug\n      }\n      children {\n        id\n        name\n        slug\n        featuredAsset {\n          id\n          preview\n        }\n      }\n    }\n  }\n`;\n", "import { DocumentNode, print } from 'graphql';\nimport { API_URL } from './constants';\nimport { getSdk } from './generated/graphql';\nimport { getSessionStorage } from './sessions';\n\nexport interface QueryOptions {\n  request: Request;\n}\n\nexport interface GraphqlResponse<Response> {\n  errors: any[];\n  data: Response;\n}\n\nexport type WithHeaders<T> = T & { _headers: Headers };\n\nconst AUTH_TOKEN_SESSION_KEY = 'authToken';\n\nasync function sendQuery<Response, Variables = {}>(options: {\n  query: string;\n  variables?: Variables;\n  headers?: Headers;\n  request?: Request;\n}): Promise<GraphqlResponse<Response> & { headers: Headers }> {\n  const headers = new Headers(options.headers);\n  const req = options.request;\n  headers.append('Content-Type', 'application/json');\n  const session = await getSessionStorage().then((sessionStorage) =>\n    sessionStorage.getSession(options.request?.headers.get('Cookie')),\n  );\n  if (session) {\n    // If we have a vendure auth token stored in the Remix session, then we\n    // add it as a bearer token to the API request being sent to Vendure.\n    const token = session.get(AUTH_TOKEN_SESSION_KEY);\n    if (token) {\n      headers.append('Authorization', `Bearer ${token}`);\n    }\n  }\n\n  return fetch(API_URL, {\n    method: 'POST',\n    body: JSON.stringify(options),\n    headers,\n  }).then(async (res) => ({\n    ...(await res.json()),\n    headers: res.headers,\n  }));\n}\n\nconst baseSdk = getSdk<QueryOptions, unknown>(requester);\n\ntype Sdk = typeof baseSdk;\ntype SdkWithHeaders = {\n  [k in keyof Sdk]: (\n    ...args: Parameters<Sdk[k]>\n  ) => Promise<Awaited<ReturnType<Sdk[k]>> & { _headers: Headers }>;\n};\n\nexport const sdk: SdkWithHeaders = baseSdk as any;\n\nfunction requester<R, V>(\n  doc: DocumentNode,\n  vars?: V,\n  options?: { headers?: Headers; request?: Request },\n): Promise<R & { _headers: Headers }> {\n  return sendQuery<R, V>({\n    query: print(doc),\n    variables: vars,\n    ...options,\n  }).then(async (response) => {\n    const token = response.headers.get('vendure-auth-token');\n    const headers: Record<string, string> = {};\n    if (token) {\n      // If Vendure responded with an auth token, it means a new Vendure session\n      // has started. In this case, we will store that auth token in the Remix session\n      // so that we can attach it as an Authorization header in all subsequent requests.\n      const sessionStorage = await getSessionStorage();\n      const session = await sessionStorage.getSession(\n        options?.request?.headers.get('Cookie'),\n      );\n      if (session) {\n        session.set(AUTH_TOKEN_SESSION_KEY, token);\n        headers['Set-Cookie'] = await sessionStorage.commitSession(session);\n      }\n    }\n    headers['x-vendure-api-url'] = API_URL;\n    if (response.errors) {\n      console.log(\n        response.errors[0].extensions?.exception?.stacktrace.join('\\n') ??\n          response.errors,\n      );\n      throw new Error(JSON.stringify(response.errors[0]));\n    }\n    return { ...response.data, _headers: new Headers(headers) };\n  });\n}\n", "export const APP_META_TITLE = 'Vendure Remix Storefront';\nexport const APP_META_DESCRIPTION =\n  'A headless commerce storefront starter kit built with Remix & Vendure';\nexport const DEMO_API_URL = 'https://readonlydemo.vendure.io/shop-api';\nexport let API_URL =\n  typeof process !== 'undefined'\n    ? process.env.VENDURE_API_URL ?? DEMO_API_URL\n    : DEMO_API_URL;\n\n/**\n * This function is used when running in Cloudflare Pages in order to set the API URL\n * based on an environment variable. Env vars work differently in CF Pages and are not available\n * on the `process` object (which does not exist). Instead, it needs to be accessed from the loader\n * context, and if defined we use it here to set the API_URL var which will be used by the\n * GraphQL calls.\n *\n * See https://developers.cloudflare.com/workers/platform/environment-variables/#environmental-variables-with-module-workers\n */\nexport function setApiUrl(apiUrl: string) {\n  API_URL = apiUrl;\n}\n", "import { DocumentNode } from 'graphql';\nimport gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Money` scalar type represents monetary values and supports signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */\n  Money: number;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type ActiveOrderResult = NoActiveOrderError | Order;\n\nexport type AddPaymentToOrderResult = IneligiblePaymentMethodError | NoActiveOrderError | Order | OrderPaymentStateError | OrderStateTransitionError | PaymentDeclinedError | PaymentFailedError;\n\nexport type Address = Node & {\n  __typename?: 'Address';\n  city?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  country: Country;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  fullName?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type Adjustment = {\n  __typename?: 'Adjustment';\n  adjustmentSource: Scalars['String'];\n  amount: Scalars['Money'];\n  data?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  type: AdjustmentType;\n};\n\nexport enum AdjustmentType {\n  DistributedOrderPromotion = 'DISTRIBUTED_ORDER_PROMOTION',\n  Other = 'OTHER',\n  Promotion = 'PROMOTION'\n}\n\n/** Returned when attempting to set the Customer for an Order when already logged in. */\nexport type AlreadyLoggedInError = ErrorResult & {\n  __typename?: 'AlreadyLoggedInError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type ApplyCouponCodeResult = CouponCodeExpiredError | CouponCodeInvalidError | CouponCodeLimitError | Order;\n\nexport type Asset = Node & {\n  __typename?: 'Asset';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  fileSize: Scalars['Int'];\n  focalPoint?: Maybe<Coordinate>;\n  height: Scalars['Int'];\n  id: Scalars['ID'];\n  mimeType: Scalars['String'];\n  name: Scalars['String'];\n  preview: Scalars['String'];\n  source: Scalars['String'];\n  tags: Array<Tag>;\n  type: AssetType;\n  updatedAt: Scalars['DateTime'];\n  width: Scalars['Int'];\n};\n\nexport type AssetList = PaginatedList & {\n  __typename?: 'AssetList';\n  items: Array<Asset>;\n  totalItems: Scalars['Int'];\n};\n\nexport enum AssetType {\n  Binary = 'BINARY',\n  Image = 'IMAGE',\n  Video = 'VIDEO'\n}\n\nexport type AuthenticationInput = {\n  native?: InputMaybe<NativeAuthInput>;\n};\n\nexport type AuthenticationMethod = Node & {\n  __typename?: 'AuthenticationMethod';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  strategy: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type AuthenticationResult = CurrentUser | InvalidCredentialsError | NotVerifiedError;\n\nexport type BooleanCustomFieldConfig = CustomField & {\n  __typename?: 'BooleanCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  requiresPermission?: Maybe<Array<Permission>>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\n/** Operators for filtering on a list of Boolean fields */\nexport type BooleanListOperators = {\n  inList: Scalars['Boolean'];\n};\n\n/** Operators for filtering on a Boolean field */\nexport type BooleanOperators = {\n  eq?: InputMaybe<Scalars['Boolean']>;\n  isNull?: InputMaybe<Scalars['Boolean']>;\n};\n\nexport type Channel = Node & {\n  __typename?: 'Channel';\n  availableCurrencyCodes: Array<CurrencyCode>;\n  availableLanguageCodes?: Maybe<Array<LanguageCode>>;\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  /** @deprecated Use defaultCurrencyCode instead */\n  currencyCode: CurrencyCode;\n  customFields?: Maybe<Scalars['JSON']>;\n  defaultCurrencyCode: CurrencyCode;\n  defaultLanguageCode: LanguageCode;\n  defaultShippingZone?: Maybe<Zone>;\n  defaultTaxZone?: Maybe<Zone>;\n  id: Scalars['ID'];\n  /** Not yet used - will be implemented in a future release. */\n  outOfStockThreshold?: Maybe<Scalars['Int']>;\n  pricesIncludeTax: Scalars['Boolean'];\n  seller?: Maybe<Seller>;\n  token: Scalars['String'];\n  /** Not yet used - will be implemented in a future release. */\n  trackInventory?: Maybe<Scalars['Boolean']>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type Collection = Node & {\n  __typename?: 'Collection';\n  assets: Array<Asset>;\n  breadcrumbs: Array<CollectionBreadcrumb>;\n  children?: Maybe<Array<Collection>>;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  filters: Array<ConfigurableOperation>;\n  id: Scalars['ID'];\n  languageCode?: Maybe<LanguageCode>;\n  name: Scalars['String'];\n  parent?: Maybe<Collection>;\n  parentId: Scalars['ID'];\n  position: Scalars['Int'];\n  productVariants: ProductVariantList;\n  slug: Scalars['String'];\n  translations: Array<CollectionTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\n\nexport type CollectionProductVariantsArgs = {\n  options?: InputMaybe<ProductVariantListOptions>;\n};\n\nexport type CollectionBreadcrumb = {\n  __typename?: 'CollectionBreadcrumb';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  slug: Scalars['String'];\n};\n\nexport type CollectionFilterParameter = {\n  _and?: InputMaybe<Array<CollectionFilterParameter>>;\n  _or?: InputMaybe<Array<CollectionFilterParameter>>;\n  createdAt?: InputMaybe<DateOperators>;\n  description?: InputMaybe<StringOperators>;\n  id?: InputMaybe<IdOperators>;\n  languageCode?: InputMaybe<StringOperators>;\n  name?: InputMaybe<StringOperators>;\n  parentId?: InputMaybe<IdOperators>;\n  position?: InputMaybe<NumberOperators>;\n  slug?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type CollectionList = PaginatedList & {\n  __typename?: 'CollectionList';\n  items: Array<Collection>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CollectionListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<CollectionFilterParameter>;\n  /** Specifies whether multiple top-level \"filter\" fields should be combined with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<CollectionSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n  topLevelOnly?: InputMaybe<Scalars['Boolean']>;\n};\n\n/**\n * Which Collections are present in the products returned\n * by the search, and in what quantity.\n */\nexport type CollectionResult = {\n  __typename?: 'CollectionResult';\n  collection: Collection;\n  count: Scalars['Int'];\n};\n\nexport type CollectionSortParameter = {\n  createdAt?: InputMaybe<SortOrder>;\n  description?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  name?: InputMaybe<SortOrder>;\n  parentId?: InputMaybe<SortOrder>;\n  position?: InputMaybe<SortOrder>;\n  slug?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport type CollectionTranslation = {\n  __typename?: 'CollectionTranslation';\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ConfigArg = {\n  __typename?: 'ConfigArg';\n  name: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type ConfigArgDefinition = {\n  __typename?: 'ConfigArgDefinition';\n  defaultValue?: Maybe<Scalars['JSON']>;\n  description?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  required: Scalars['Boolean'];\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type ConfigArgInput = {\n  name: Scalars['String'];\n  /** A JSON stringified representation of the actual value */\n  value: Scalars['String'];\n};\n\nexport type ConfigurableOperation = {\n  __typename?: 'ConfigurableOperation';\n  args: Array<ConfigArg>;\n  code: Scalars['String'];\n};\n\nexport type ConfigurableOperationDefinition = {\n  __typename?: 'ConfigurableOperationDefinition';\n  args: Array<ConfigArgDefinition>;\n  code: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ConfigurableOperationInput = {\n  arguments: Array<ConfigArgInput>;\n  code: Scalars['String'];\n};\n\nexport type Coordinate = {\n  __typename?: 'Coordinate';\n  x: Scalars['Float'];\n  y: Scalars['Float'];\n};\n\n/**\n * A Country of the world which your shop operates in.\n *\n * The `code` field is typically a 2-character ISO code such as \"GB\", \"US\", \"DE\" etc. This code is used in certain inputs such as\n * `UpdateAddressInput` and `CreateAddressInput` to specify the country.\n */\nexport type Country = Node & Region & {\n  __typename?: 'Country';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  enabled: Scalars['Boolean'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  parent?: Maybe<Region>;\n  parentId?: Maybe<Scalars['ID']>;\n  translations: Array<RegionTranslation>;\n  type: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type CountryList = PaginatedList & {\n  __typename?: 'CountryList';\n  items: Array<Country>;\n  totalItems: Scalars['Int'];\n};\n\n/** Returned if the provided coupon code is invalid */\nexport type CouponCodeExpiredError = ErrorResult & {\n  __typename?: 'CouponCodeExpiredError';\n  couponCode: Scalars['String'];\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if the provided coupon code is invalid */\nexport type CouponCodeInvalidError = ErrorResult & {\n  __typename?: 'CouponCodeInvalidError';\n  couponCode: Scalars['String'];\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if the provided coupon code is invalid */\nexport type CouponCodeLimitError = ErrorResult & {\n  __typename?: 'CouponCodeLimitError';\n  couponCode: Scalars['String'];\n  errorCode: ErrorCode;\n  limit: Scalars['Int'];\n  message: Scalars['String'];\n};\n\n/**\n * Input used to create an Address.\n *\n * The countryCode must correspond to a `code` property of a Country that has been defined in the\n * Vendure server. The `code` property is typically a 2-character ISO code such as \"GB\", \"US\", \"DE\" etc.\n * If an invalid code is passed, the mutation will fail.\n */\nexport type CreateAddressInput = {\n  city?: InputMaybe<Scalars['String']>;\n  company?: InputMaybe<Scalars['String']>;\n  countryCode: Scalars['String'];\n  customFields?: InputMaybe<Scalars['JSON']>;\n  defaultBillingAddress?: InputMaybe<Scalars['Boolean']>;\n  defaultShippingAddress?: InputMaybe<Scalars['Boolean']>;\n  fullName?: InputMaybe<Scalars['String']>;\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  postalCode?: InputMaybe<Scalars['String']>;\n  province?: InputMaybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: InputMaybe<Scalars['String']>;\n};\n\nexport type CreateCustomerInput = {\n  customFields?: InputMaybe<Scalars['JSON']>;\n  emailAddress: Scalars['String'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/**\n * @description\n * ISO 4217 currency code\n *\n * @docsCategory common\n */\nexport enum CurrencyCode {\n  /** United Arab Emirates dirham */\n  Aed = 'AED',\n  /** Afghan afghani */\n  Afn = 'AFN',\n  /** Albanian lek */\n  All = 'ALL',\n  /** Armenian dram */\n  Amd = 'AMD',\n  /** Netherlands Antillean guilder */\n  Ang = 'ANG',\n  /** Angolan kwanza */\n  Aoa = 'AOA',\n  /** Argentine peso */\n  Ars = 'ARS',\n  /** Australian dollar */\n  Aud = 'AUD',\n  /** Aruban florin */\n  Awg = 'AWG',\n  /** Azerbaijani manat */\n  Azn = 'AZN',\n  /** Bosnia and Herzegovina convertible mark */\n  Bam = 'BAM',\n  /** Barbados dollar */\n  Bbd = 'BBD',\n  /** Bangladeshi taka */\n  Bdt = 'BDT',\n  /** Bulgarian lev */\n  Bgn = 'BGN',\n  /** Bahraini dinar */\n  Bhd = 'BHD',\n  /** Burundian franc */\n  Bif = 'BIF',\n  /** Bermudian dollar */\n  Bmd = 'BMD',\n  /** Brunei dollar */\n  Bnd = 'BND',\n  /** Boliviano */\n  Bob = 'BOB',\n  /** Brazilian real */\n  Brl = 'BRL',\n  /** Bahamian dollar */\n  Bsd = 'BSD',\n  /** Bhutanese ngultrum */\n  Btn = 'BTN',\n  /** Botswana pula */\n  Bwp = 'BWP',\n  /** Belarusian ruble */\n  Byn = 'BYN',\n  /** Belize dollar */\n  Bzd = 'BZD',\n  /** Canadian dollar */\n  Cad = 'CAD',\n  /** Congolese franc */\n  Cdf = 'CDF',\n  /** Swiss franc */\n  Chf = 'CHF',\n  /** Chilean peso */\n  Clp = 'CLP',\n  /** Renminbi (Chinese) yuan */\n  Cny = 'CNY',\n  /** Colombian peso */\n  Cop = 'COP',\n  /** Costa Rican colon */\n  Crc = 'CRC',\n  /** Cuban convertible peso */\n  Cuc = 'CUC',\n  /** Cuban peso */\n  Cup = 'CUP',\n  /** Cape Verde escudo */\n  Cve = 'CVE',\n  /** Czech koruna */\n  Czk = 'CZK',\n  /** Djiboutian franc */\n  Djf = 'DJF',\n  /** Danish krone */\n  Dkk = 'DKK',\n  /** Dominican peso */\n  Dop = 'DOP',\n  /** Algerian dinar */\n  Dzd = 'DZD',\n  /** Egyptian pound */\n  Egp = 'EGP',\n  /** Eritrean nakfa */\n  Ern = 'ERN',\n  /** Ethiopian birr */\n  Etb = 'ETB',\n  /** Euro */\n  Eur = 'EUR',\n  /** Fiji dollar */\n  Fjd = 'FJD',\n  /** Falkland Islands pound */\n  Fkp = 'FKP',\n  /** Pound sterling */\n  Gbp = 'GBP',\n  /** Georgian lari */\n  Gel = 'GEL',\n  /** Ghanaian cedi */\n  Ghs = 'GHS',\n  /** Gibraltar pound */\n  Gip = 'GIP',\n  /** Gambian dalasi */\n  Gmd = 'GMD',\n  /** Guinean franc */\n  Gnf = 'GNF',\n  /** Guatemalan quetzal */\n  Gtq = 'GTQ',\n  /** Guyanese dollar */\n  Gyd = 'GYD',\n  /** Hong Kong dollar */\n  Hkd = 'HKD',\n  /** Honduran lempira */\n  Hnl = 'HNL',\n  /** Croatian kuna */\n  Hrk = 'HRK',\n  /** Haitian gourde */\n  Htg = 'HTG',\n  /** Hungarian forint */\n  Huf = 'HUF',\n  /** Indonesian rupiah */\n  Idr = 'IDR',\n  /** Israeli new shekel */\n  Ils = 'ILS',\n  /** Indian rupee */\n  Inr = 'INR',\n  /** Iraqi dinar */\n  Iqd = 'IQD',\n  /** Iranian rial */\n  Irr = 'IRR',\n  /** Icelandic kr\u00F3na */\n  Isk = 'ISK',\n  /** Jamaican dollar */\n  Jmd = 'JMD',\n  /** Jordanian dinar */\n  Jod = 'JOD',\n  /** Japanese yen */\n  Jpy = 'JPY',\n  /** Kenyan shilling */\n  Kes = 'KES',\n  /** Kyrgyzstani som */\n  Kgs = 'KGS',\n  /** Cambodian riel */\n  Khr = 'KHR',\n  /** Comoro franc */\n  Kmf = 'KMF',\n  /** North Korean won */\n  Kpw = 'KPW',\n  /** South Korean won */\n  Krw = 'KRW',\n  /** Kuwaiti dinar */\n  Kwd = 'KWD',\n  /** Cayman Islands dollar */\n  Kyd = 'KYD',\n  /** Kazakhstani tenge */\n  Kzt = 'KZT',\n  /** Lao kip */\n  Lak = 'LAK',\n  /** Lebanese pound */\n  Lbp = 'LBP',\n  /** Sri Lankan rupee */\n  Lkr = 'LKR',\n  /** Liberian dollar */\n  Lrd = 'LRD',\n  /** Lesotho loti */\n  Lsl = 'LSL',\n  /** Libyan dinar */\n  Lyd = 'LYD',\n  /** Moroccan dirham */\n  Mad = 'MAD',\n  /** Moldovan leu */\n  Mdl = 'MDL',\n  /** Malagasy ariary */\n  Mga = 'MGA',\n  /** Macedonian denar */\n  Mkd = 'MKD',\n  /** Myanmar kyat */\n  Mmk = 'MMK',\n  /** Mongolian t\u00F6gr\u00F6g */\n  Mnt = 'MNT',\n  /** Macanese pataca */\n  Mop = 'MOP',\n  /** Mauritanian ouguiya */\n  Mru = 'MRU',\n  /** Mauritian rupee */\n  Mur = 'MUR',\n  /** Maldivian rufiyaa */\n  Mvr = 'MVR',\n  /** Malawian kwacha */\n  Mwk = 'MWK',\n  /** Mexican peso */\n  Mxn = 'MXN',\n  /** Malaysian ringgit */\n  Myr = 'MYR',\n  /** Mozambican metical */\n  Mzn = 'MZN',\n  /** Namibian dollar */\n  Nad = 'NAD',\n  /** Nigerian naira */\n  Ngn = 'NGN',\n  /** Nicaraguan c\u00F3rdoba */\n  Nio = 'NIO',\n  /** Norwegian krone */\n  Nok = 'NOK',\n  /** Nepalese rupee */\n  Npr = 'NPR',\n  /** New Zealand dollar */\n  Nzd = 'NZD',\n  /** Omani rial */\n  Omr = 'OMR',\n  /** Panamanian balboa */\n  Pab = 'PAB',\n  /** Peruvian sol */\n  Pen = 'PEN',\n  /** Papua New Guinean kina */\n  Pgk = 'PGK',\n  /** Philippine peso */\n  Php = 'PHP',\n  /** Pakistani rupee */\n  Pkr = 'PKR',\n  /** Polish z\u0142oty */\n  Pln = 'PLN',\n  /** Paraguayan guaran\u00ED */\n  Pyg = 'PYG',\n  /** Qatari riyal */\n  Qar = 'QAR',\n  /** Romanian leu */\n  Ron = 'RON',\n  /** Serbian dinar */\n  Rsd = 'RSD',\n  /** Russian ruble */\n  Rub = 'RUB',\n  /** Rwandan franc */\n  Rwf = 'RWF',\n  /** Saudi riyal */\n  Sar = 'SAR',\n  /** Solomon Islands dollar */\n  Sbd = 'SBD',\n  /** Seychelles rupee */\n  Scr = 'SCR',\n  /** Sudanese pound */\n  Sdg = 'SDG',\n  /** Swedish krona/kronor */\n  Sek = 'SEK',\n  /** Singapore dollar */\n  Sgd = 'SGD',\n  /** Saint Helena pound */\n  Shp = 'SHP',\n  /** Sierra Leonean leone */\n  Sll = 'SLL',\n  /** Somali shilling */\n  Sos = 'SOS',\n  /** Surinamese dollar */\n  Srd = 'SRD',\n  /** South Sudanese pound */\n  Ssp = 'SSP',\n  /** S\u00E3o Tom\u00E9 and Pr\u00EDncipe dobra */\n  Stn = 'STN',\n  /** Salvadoran col\u00F3n */\n  Svc = 'SVC',\n  /** Syrian pound */\n  Syp = 'SYP',\n  /** Swazi lilangeni */\n  Szl = 'SZL',\n  /** Thai baht */\n  Thb = 'THB',\n  /** Tajikistani somoni */\n  Tjs = 'TJS',\n  /** Turkmenistan manat */\n  Tmt = 'TMT',\n  /** Tunisian dinar */\n  Tnd = 'TND',\n  /** Tongan pa\u02BBanga */\n  Top = 'TOP',\n  /** Turkish lira */\n  Try = 'TRY',\n  /** Trinidad and Tobago dollar */\n  Ttd = 'TTD',\n  /** New Taiwan dollar */\n  Twd = 'TWD',\n  /** Tanzanian shilling */\n  Tzs = 'TZS',\n  /** Ukrainian hryvnia */\n  Uah = 'UAH',\n  /** Ugandan shilling */\n  Ugx = 'UGX',\n  /** United States dollar */\n  Usd = 'USD',\n  /** Uruguayan peso */\n  Uyu = 'UYU',\n  /** Uzbekistan som */\n  Uzs = 'UZS',\n  /** Venezuelan bol\u00EDvar soberano */\n  Ves = 'VES',\n  /** Vietnamese \u0111\u1ED3ng */\n  Vnd = 'VND',\n  /** Vanuatu vatu */\n  Vuv = 'VUV',\n  /** Samoan tala */\n  Wst = 'WST',\n  /** CFA franc BEAC */\n  Xaf = 'XAF',\n  /** East Caribbean dollar */\n  Xcd = 'XCD',\n  /** CFA franc BCEAO */\n  Xof = 'XOF',\n  /** CFP franc (franc Pacifique) */\n  Xpf = 'XPF',\n  /** Yemeni rial */\n  Yer = 'YER',\n  /** South African rand */\n  Zar = 'ZAR',\n  /** Zambian kwacha */\n  Zmw = 'ZMW',\n  /** Zimbabwean dollar */\n  Zwl = 'ZWL'\n}\n\nexport type CurrentUser = {\n  __typename?: 'CurrentUser';\n  channels: Array<CurrentUserChannel>;\n  id: Scalars['ID'];\n  identifier: Scalars['String'];\n};\n\nexport type CurrentUserChannel = {\n  __typename?: 'CurrentUserChannel';\n  code: Scalars['String'];\n  id: Scalars['ID'];\n  permissions: Array<Permission>;\n  token: Scalars['String'];\n};\n\nexport type CustomField = {\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  requiresPermission?: Maybe<Array<Permission>>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type CustomFieldConfig = BooleanCustomFieldConfig | DateTimeCustomFieldConfig | FloatCustomFieldConfig | IntCustomFieldConfig | LocaleStringCustomFieldConfig | LocaleTextCustomFieldConfig | RelationCustomFieldConfig | StringCustomFieldConfig | TextCustomFieldConfig;\n\nexport type Customer = Node & {\n  __typename?: 'Customer';\n  addresses?: Maybe<Array<Address>>;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  emailAddress: Scalars['String'];\n  firstName: Scalars['String'];\n  id: Scalars['ID'];\n  lastName: Scalars['String'];\n  orders: OrderList;\n  phoneNumber?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['DateTime'];\n  user?: Maybe<User>;\n};\n\n\nexport type CustomerOrdersArgs = {\n  options?: InputMaybe<OrderListOptions>;\n};\n\nexport type CustomerFilterParameter = {\n  _and?: InputMaybe<Array<CustomerFilterParameter>>;\n  _or?: InputMaybe<Array<CustomerFilterParameter>>;\n  createdAt?: InputMaybe<DateOperators>;\n  emailAddress?: InputMaybe<StringOperators>;\n  firstName?: InputMaybe<StringOperators>;\n  id?: InputMaybe<IdOperators>;\n  lastName?: InputMaybe<StringOperators>;\n  phoneNumber?: InputMaybe<StringOperators>;\n  title?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type CustomerGroup = Node & {\n  __typename?: 'CustomerGroup';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  customers: CustomerList;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\n\nexport type CustomerGroupCustomersArgs = {\n  options?: InputMaybe<CustomerListOptions>;\n};\n\nexport type CustomerList = PaginatedList & {\n  __typename?: 'CustomerList';\n  items: Array<Customer>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CustomerListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<CustomerFilterParameter>;\n  /** Specifies whether multiple top-level \"filter\" fields should be combined with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<CustomerSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\nexport type CustomerSortParameter = {\n  createdAt?: InputMaybe<SortOrder>;\n  emailAddress?: InputMaybe<SortOrder>;\n  firstName?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  lastName?: InputMaybe<SortOrder>;\n  phoneNumber?: InputMaybe<SortOrder>;\n  title?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\n/** Operators for filtering on a list of Date fields */\nexport type DateListOperators = {\n  inList: Scalars['DateTime'];\n};\n\n/** Operators for filtering on a DateTime field */\nexport type DateOperators = {\n  after?: InputMaybe<Scalars['DateTime']>;\n  before?: InputMaybe<Scalars['DateTime']>;\n  between?: InputMaybe<DateRange>;\n  eq?: InputMaybe<Scalars['DateTime']>;\n  isNull?: InputMaybe<Scalars['Boolean']>;\n};\n\nexport type DateRange = {\n  end: Scalars['DateTime'];\n  start: Scalars['DateTime'];\n};\n\n/**\n * Expects the same validation formats as the `<input type=\"datetime-local\">` HTML element.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#Additional_attributes\n */\nexport type DateTimeCustomFieldConfig = CustomField & {\n  __typename?: 'DateTimeCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  max?: Maybe<Scalars['String']>;\n  min?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  requiresPermission?: Maybe<Array<Permission>>;\n  step?: Maybe<Scalars['Int']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type DeletionResponse = {\n  __typename?: 'DeletionResponse';\n  message?: Maybe<Scalars['String']>;\n  result: DeletionResult;\n};\n\nexport enum DeletionResult {\n  /** The entity was successfully deleted */\n  Deleted = 'DELETED',\n  /** Deletion did not take place, reason given in message */\n  NotDeleted = 'NOT_DELETED'\n}\n\nexport type Discount = {\n  __typename?: 'Discount';\n  adjustmentSource: Scalars['String'];\n  amount: Scalars['Money'];\n  amountWithTax: Scalars['Money'];\n  description: Scalars['String'];\n  type: AdjustmentType;\n};\n\n/** Returned when attempting to create a Customer with an email address already registered to an existing User. */\nexport type EmailAddressConflictError = ErrorResult & {\n  __typename?: 'EmailAddressConflictError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport enum ErrorCode {\n  AlreadyLoggedInError = 'ALREADY_LOGGED_IN_ERROR',\n  CouponCodeExpiredError = 'COUPON_CODE_EXPIRED_ERROR',\n  CouponCodeInvalidError = 'COUPON_CODE_INVALID_ERROR',\n  CouponCodeLimitError = 'COUPON_CODE_LIMIT_ERROR',\n  EmailAddressConflictError = 'EMAIL_ADDRESS_CONFLICT_ERROR',\n  GuestCheckoutError = 'GUEST_CHECKOUT_ERROR',\n  IdentifierChangeTokenExpiredError = 'IDENTIFIER_CHANGE_TOKEN_EXPIRED_ERROR',\n  IdentifierChangeTokenInvalidError = 'IDENTIFIER_CHANGE_TOKEN_INVALID_ERROR',\n  IneligiblePaymentMethodError = 'INELIGIBLE_PAYMENT_METHOD_ERROR',\n  IneligibleShippingMethodError = 'INELIGIBLE_SHIPPING_METHOD_ERROR',\n  InsufficientStockError = 'INSUFFICIENT_STOCK_ERROR',\n  InvalidCredentialsError = 'INVALID_CREDENTIALS_ERROR',\n  MissingPasswordError = 'MISSING_PASSWORD_ERROR',\n  NativeAuthStrategyError = 'NATIVE_AUTH_STRATEGY_ERROR',\n  NegativeQuantityError = 'NEGATIVE_QUANTITY_ERROR',\n  NotVerifiedError = 'NOT_VERIFIED_ERROR',\n  NoActiveOrderError = 'NO_ACTIVE_ORDER_ERROR',\n  OrderLimitError = 'ORDER_LIMIT_ERROR',\n  OrderModificationError = 'ORDER_MODIFICATION_ERROR',\n  OrderPaymentStateError = 'ORDER_PAYMENT_STATE_ERROR',\n  OrderStateTransitionError = 'ORDER_STATE_TRANSITION_ERROR',\n  PasswordAlreadySetError = 'PASSWORD_ALREADY_SET_ERROR',\n  PasswordResetTokenExpiredError = 'PASSWORD_RESET_TOKEN_EXPIRED_ERROR',\n  PasswordResetTokenInvalidError = 'PASSWORD_RESET_TOKEN_INVALID_ERROR',\n  PasswordValidationError = 'PASSWORD_VALIDATION_ERROR',\n  PaymentDeclinedError = 'PAYMENT_DECLINED_ERROR',\n  PaymentFailedError = 'PAYMENT_FAILED_ERROR',\n  UnknownError = 'UNKNOWN_ERROR',\n  VerificationTokenExpiredError = 'VERIFICATION_TOKEN_EXPIRED_ERROR',\n  VerificationTokenInvalidError = 'VERIFICATION_TOKEN_INVALID_ERROR'\n}\n\nexport type ErrorResult = {\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type Facet = Node & {\n  __typename?: 'Facet';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  translations: Array<FacetTranslation>;\n  updatedAt: Scalars['DateTime'];\n  /** Returns a paginated, sortable, filterable list of the Facet's values. Added in v2.1.0. */\n  valueList: FacetValueList;\n  values: Array<FacetValue>;\n};\n\n\nexport type FacetValueListArgs = {\n  options?: InputMaybe<FacetValueListOptions>;\n};\n\nexport type FacetFilterParameter = {\n  _and?: InputMaybe<Array<FacetFilterParameter>>;\n  _or?: InputMaybe<Array<FacetFilterParameter>>;\n  code?: InputMaybe<StringOperators>;\n  createdAt?: InputMaybe<DateOperators>;\n  id?: InputMaybe<IdOperators>;\n  languageCode?: InputMaybe<StringOperators>;\n  name?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type FacetList = PaginatedList & {\n  __typename?: 'FacetList';\n  items: Array<Facet>;\n  totalItems: Scalars['Int'];\n};\n\nexport type FacetListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<FacetFilterParameter>;\n  /** Specifies whether multiple top-level \"filter\" fields should be combined with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<FacetSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\nexport type FacetSortParameter = {\n  code?: InputMaybe<SortOrder>;\n  createdAt?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  name?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport type FacetTranslation = {\n  __typename?: 'FacetTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type FacetValue = Node & {\n  __typename?: 'FacetValue';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  facet: Facet;\n  facetId: Scalars['ID'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  translations: Array<FacetValueTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\n/**\n * Used to construct boolean expressions for filtering search results\n * by FacetValue ID. Examples:\n *\n * * ID=1 OR ID=2: `{ facetValueFilters: [{ or: [1,2] }] }`\n * * ID=1 AND ID=2: `{ facetValueFilters: [{ and: 1 }, { and: 2 }] }`\n * * ID=1 AND (ID=2 OR ID=3): `{ facetValueFilters: [{ and: 1 }, { or: [2,3] }] }`\n */\nexport type FacetValueFilterInput = {\n  and?: InputMaybe<Scalars['ID']>;\n  or?: InputMaybe<Array<Scalars['ID']>>;\n};\n\nexport type FacetValueFilterParameter = {\n  _and?: InputMaybe<Array<FacetValueFilterParameter>>;\n  _or?: InputMaybe<Array<FacetValueFilterParameter>>;\n  code?: InputMaybe<StringOperators>;\n  createdAt?: InputMaybe<DateOperators>;\n  facetId?: InputMaybe<IdOperators>;\n  id?: InputMaybe<IdOperators>;\n  languageCode?: InputMaybe<StringOperators>;\n  name?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type FacetValueList = PaginatedList & {\n  __typename?: 'FacetValueList';\n  items: Array<FacetValue>;\n  totalItems: Scalars['Int'];\n};\n\nexport type FacetValueListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<FacetValueFilterParameter>;\n  /** Specifies whether multiple top-level \"filter\" fields should be combined with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<FacetValueSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\n/**\n * Which FacetValues are present in the products returned\n * by the search, and in what quantity.\n */\nexport type FacetValueResult = {\n  __typename?: 'FacetValueResult';\n  count: Scalars['Int'];\n  facetValue: FacetValue;\n};\n\nexport type FacetValueSortParameter = {\n  code?: InputMaybe<SortOrder>;\n  createdAt?: InputMaybe<SortOrder>;\n  facetId?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  name?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport type FacetValueTranslation = {\n  __typename?: 'FacetValueTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type FloatCustomFieldConfig = CustomField & {\n  __typename?: 'FloatCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  max?: Maybe<Scalars['Float']>;\n  min?: Maybe<Scalars['Float']>;\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  requiresPermission?: Maybe<Array<Permission>>;\n  step?: Maybe<Scalars['Float']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type Fulfillment = Node & {\n  __typename?: 'Fulfillment';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  lines: Array<FulfillmentLine>;\n  method: Scalars['String'];\n  state: Scalars['String'];\n  /** @deprecated Use the `lines` field instead */\n  summary: Array<FulfillmentLine>;\n  trackingCode?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type FulfillmentLine = {\n  __typename?: 'FulfillmentLine';\n  fulfillment: Fulfillment;\n  fulfillmentId: Scalars['ID'];\n  orderLine: OrderLine;\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport enum GlobalFlag {\n  False = 'FALSE',\n  Inherit = 'INHERIT',\n  True = 'TRUE'\n}\n\n/** Returned when attempting to set the Customer on a guest checkout when the configured GuestCheckoutStrategy does not allow it. */\nexport type GuestCheckoutError = ErrorResult & {\n  __typename?: 'GuestCheckoutError';\n  errorCode: ErrorCode;\n  errorDetail: Scalars['String'];\n  message: Scalars['String'];\n};\n\nexport type HistoryEntry = Node & {\n  __typename?: 'HistoryEntry';\n  createdAt: Scalars['DateTime'];\n  data: Scalars['JSON'];\n  id: Scalars['ID'];\n  type: HistoryEntryType;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type HistoryEntryFilterParameter = {\n  _and?: InputMaybe<Array<HistoryEntryFilterParameter>>;\n  _or?: InputMaybe<Array<HistoryEntryFilterParameter>>;\n  createdAt?: InputMaybe<DateOperators>;\n  id?: InputMaybe<IdOperators>;\n  type?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type HistoryEntryList = PaginatedList & {\n  __typename?: 'HistoryEntryList';\n  items: Array<HistoryEntry>;\n  totalItems: Scalars['Int'];\n};\n\nexport type HistoryEntryListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<HistoryEntryFilterParameter>;\n  /** Specifies whether multiple top-level \"filter\" fields should be combined with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<HistoryEntrySortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\nexport type HistoryEntrySortParameter = {\n  createdAt?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport enum HistoryEntryType {\n  CustomerAddedToGroup = 'CUSTOMER_ADDED_TO_GROUP',\n  CustomerAddressCreated = 'CUSTOMER_ADDRESS_CREATED',\n  CustomerAddressDeleted = 'CUSTOMER_ADDRESS_DELETED',\n  CustomerAddressUpdated = 'CUSTOMER_ADDRESS_UPDATED',\n  CustomerDetailUpdated = 'CUSTOMER_DETAIL_UPDATED',\n  CustomerEmailUpdateRequested = 'CUSTOMER_EMAIL_UPDATE_REQUESTED',\n  CustomerEmailUpdateVerified = 'CUSTOMER_EMAIL_UPDATE_VERIFIED',\n  CustomerNote = 'CUSTOMER_NOTE',\n  CustomerPasswordResetRequested = 'CUSTOMER_PASSWORD_RESET_REQUESTED',\n  CustomerPasswordResetVerified = 'CUSTOMER_PASSWORD_RESET_VERIFIED',\n  CustomerPasswordUpdated = 'CUSTOMER_PASSWORD_UPDATED',\n  CustomerRegistered = 'CUSTOMER_REGISTERED',\n  CustomerRemovedFromGroup = 'CUSTOMER_REMOVED_FROM_GROUP',\n  CustomerVerified = 'CUSTOMER_VERIFIED',\n  OrderCancellation = 'ORDER_CANCELLATION',\n  OrderCouponApplied = 'ORDER_COUPON_APPLIED',\n  OrderCouponRemoved = 'ORDER_COUPON_REMOVED',\n  OrderCustomerUpdated = 'ORDER_CUSTOMER_UPDATED',\n  OrderFulfillment = 'ORDER_FULFILLMENT',\n  OrderFulfillmentTransition = 'ORDER_FULFILLMENT_TRANSITION',\n  OrderModified = 'ORDER_MODIFIED',\n  OrderNote = 'ORDER_NOTE',\n  OrderPaymentTransition = 'ORDER_PAYMENT_TRANSITION',\n  OrderRefundTransition = 'ORDER_REFUND_TRANSITION',\n  OrderStateTransition = 'ORDER_STATE_TRANSITION'\n}\n\n/** Operators for filtering on a list of ID fields */\nexport type IdListOperators = {\n  inList: Scalars['ID'];\n};\n\n/** Operators for filtering on an ID field */\nexport type IdOperators = {\n  eq?: InputMaybe<Scalars['String']>;\n  in?: InputMaybe<Array<Scalars['String']>>;\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  notEq?: InputMaybe<Scalars['String']>;\n  notIn?: InputMaybe<Array<Scalars['String']>>;\n};\n\n/**\n * Returned if the token used to change a Customer's email address is valid, but has\n * expired according to the `verificationTokenDuration` setting in the AuthOptions.\n */\nexport type IdentifierChangeTokenExpiredError = ErrorResult & {\n  __typename?: 'IdentifierChangeTokenExpiredError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned if the token used to change a Customer's email address is either\n * invalid or does not match any expected tokens.\n */\nexport type IdentifierChangeTokenInvalidError = ErrorResult & {\n  __typename?: 'IdentifierChangeTokenInvalidError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to add a Payment using a PaymentMethod for which the Order is not eligible. */\nexport type IneligiblePaymentMethodError = ErrorResult & {\n  __typename?: 'IneligiblePaymentMethodError';\n  eligibilityCheckerMessage?: Maybe<Scalars['String']>;\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to set a ShippingMethod for which the Order is not eligible */\nexport type IneligibleShippingMethodError = ErrorResult & {\n  __typename?: 'IneligibleShippingMethodError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to add more items to the Order than are available */\nexport type InsufficientStockError = ErrorResult & {\n  __typename?: 'InsufficientStockError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  order: Order;\n  quantityAvailable: Scalars['Int'];\n};\n\nexport type IntCustomFieldConfig = CustomField & {\n  __typename?: 'IntCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  max?: Maybe<Scalars['Int']>;\n  min?: Maybe<Scalars['Int']>;\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  requiresPermission?: Maybe<Array<Permission>>;\n  step?: Maybe<Scalars['Int']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\n/** Returned if the user authentication credentials are not valid */\nexport type InvalidCredentialsError = ErrorResult & {\n  __typename?: 'InvalidCredentialsError';\n  authenticationError: Scalars['String'];\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * @description\n * Languages in the form of a ISO 639-1 language code with optional\n * region or script modifier (e.g. de_AT). The selection available is based\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\n * and includes the major spoken languages of the world and any widely-used variants.\n *\n * @docsCategory common\n */\nexport enum LanguageCode {\n  /** Afrikaans */\n  Af = 'af',\n  /** Akan */\n  Ak = 'ak',\n  /** Amharic */\n  Am = 'am',\n  /** Arabic */\n  Ar = 'ar',\n  /** Assamese */\n  As = 'as',\n  /** Azerbaijani */\n  Az = 'az',\n  /** Belarusian */\n  Be = 'be',\n  /** Bulgarian */\n  Bg = 'bg',\n  /** Bambara */\n  Bm = 'bm',\n  /** Bangla */\n  Bn = 'bn',\n  /** Tibetan */\n  Bo = 'bo',\n  /** Breton */\n  Br = 'br',\n  /** Bosnian */\n  Bs = 'bs',\n  /** Catalan */\n  Ca = 'ca',\n  /** Chechen */\n  Ce = 'ce',\n  /** Corsican */\n  Co = 'co',\n  /** Czech */\n  Cs = 'cs',\n  /** Church Slavic */\n  Cu = 'cu',\n  /** Welsh */\n  Cy = 'cy',\n  /** Danish */\n  Da = 'da',\n  /** German */\n  De = 'de',\n  /** Austrian German */\n  DeAt = 'de_AT',\n  /** Swiss High German */\n  DeCh = 'de_CH',\n  /** Dzongkha */\n  Dz = 'dz',\n  /** Ewe */\n  Ee = 'ee',\n  /** Greek */\n  El = 'el',\n  /** English */\n  En = 'en',\n  /** Australian English */\n  EnAu = 'en_AU',\n  /** Canadian English */\n  EnCa = 'en_CA',\n  /** British English */\n  EnGb = 'en_GB',\n  /** American English */\n  EnUs = 'en_US',\n  /** Esperanto */\n  Eo = 'eo',\n  /** Spanish */\n  Es = 'es',\n  /** European Spanish */\n  EsEs = 'es_ES',\n  /** Mexican Spanish */\n  EsMx = 'es_MX',\n  /** Estonian */\n  Et = 'et',\n  /** Basque */\n  Eu = 'eu',\n  /** Persian */\n  Fa = 'fa',\n  /** Dari */\n  FaAf = 'fa_AF',\n  /** Fulah */\n  Ff = 'ff',\n  /** Finnish */\n  Fi = 'fi',\n  /** Faroese */\n  Fo = 'fo',\n  /** French */\n  Fr = 'fr',\n  /** Canadian French */\n  FrCa = 'fr_CA',\n  /** Swiss French */\n  FrCh = 'fr_CH',\n  /** Western Frisian */\n  Fy = 'fy',\n  /** Irish */\n  Ga = 'ga',\n  /** Scottish Gaelic */\n  Gd = 'gd',\n  /** Galician */\n  Gl = 'gl',\n  /** Gujarati */\n  Gu = 'gu',\n  /** Manx */\n  Gv = 'gv',\n  /** Hausa */\n  Ha = 'ha',\n  /** Hebrew */\n  He = 'he',\n  /** Hindi */\n  Hi = 'hi',\n  /** Croatian */\n  Hr = 'hr',\n  /** Haitian Creole */\n  Ht = 'ht',\n  /** Hungarian */\n  Hu = 'hu',\n  /** Armenian */\n  Hy = 'hy',\n  /** Interlingua */\n  Ia = 'ia',\n  /** Indonesian */\n  Id = 'id',\n  /** Igbo */\n  Ig = 'ig',\n  /** Sichuan Yi */\n  Ii = 'ii',\n  /** Icelandic */\n  Is = 'is',\n  /** Italian */\n  It = 'it',\n  /** Japanese */\n  Ja = 'ja',\n  /** Javanese */\n  Jv = 'jv',\n  /** Georgian */\n  Ka = 'ka',\n  /** Kikuyu */\n  Ki = 'ki',\n  /** Kazakh */\n  Kk = 'kk',\n  /** Kalaallisut */\n  Kl = 'kl',\n  /** Khmer */\n  Km = 'km',\n  /** Kannada */\n  Kn = 'kn',\n  /** Korean */\n  Ko = 'ko',\n  /** Kashmiri */\n  Ks = 'ks',\n  /** Kurdish */\n  Ku = 'ku',\n  /** Cornish */\n  Kw = 'kw',\n  /** Kyrgyz */\n  Ky = 'ky',\n  /** Latin */\n  La = 'la',\n  /** Luxembourgish */\n  Lb = 'lb',\n  /** Ganda */\n  Lg = 'lg',\n  /** Lingala */\n  Ln = 'ln',\n  /** Lao */\n  Lo = 'lo',\n  /** Lithuanian */\n  Lt = 'lt',\n  /** Luba-Katanga */\n  Lu = 'lu',\n  /** Latvian */\n  Lv = 'lv',\n  /** Malagasy */\n  Mg = 'mg',\n  /** Maori */\n  Mi = 'mi',\n  /** Macedonian */\n  Mk = 'mk',\n  /** Malayalam */\n  Ml = 'ml',\n  /** Mongolian */\n  Mn = 'mn',\n  /** Marathi */\n  Mr = 'mr',\n  /** Malay */\n  Ms = 'ms',\n  /** Maltese */\n  Mt = 'mt',\n  /** Burmese */\n  My = 'my',\n  /** Norwegian Bokm\u00E5l */\n  Nb = 'nb',\n  /** North Ndebele */\n  Nd = 'nd',\n  /** Nepali */\n  Ne = 'ne',\n  /** Dutch */\n  Nl = 'nl',\n  /** Flemish */\n  NlBe = 'nl_BE',\n  /** Norwegian Nynorsk */\n  Nn = 'nn',\n  /** Nyanja */\n  Ny = 'ny',\n  /** Oromo */\n  Om = 'om',\n  /** Odia */\n  Or = 'or',\n  /** Ossetic */\n  Os = 'os',\n  /** Punjabi */\n  Pa = 'pa',\n  /** Polish */\n  Pl = 'pl',\n  /** Pashto */\n  Ps = 'ps',\n  /** Portuguese */\n  Pt = 'pt',\n  /** Brazilian Portuguese */\n  PtBr = 'pt_BR',\n  /** European Portuguese */\n  PtPt = 'pt_PT',\n  /** Quechua */\n  Qu = 'qu',\n  /** Romansh */\n  Rm = 'rm',\n  /** Rundi */\n  Rn = 'rn',\n  /** Romanian */\n  Ro = 'ro',\n  /** Moldavian */\n  RoMd = 'ro_MD',\n  /** Russian */\n  Ru = 'ru',\n  /** Kinyarwanda */\n  Rw = 'rw',\n  /** Sanskrit */\n  Sa = 'sa',\n  /** Sindhi */\n  Sd = 'sd',\n  /** Northern Sami */\n  Se = 'se',\n  /** Sango */\n  Sg = 'sg',\n  /** Sinhala */\n  Si = 'si',\n  /** Slovak */\n  Sk = 'sk',\n  /** Slovenian */\n  Sl = 'sl',\n  /** Samoan */\n  Sm = 'sm',\n  /** Shona */\n  Sn = 'sn',\n  /** Somali */\n  So = 'so',\n  /** Albanian */\n  Sq = 'sq',\n  /** Serbian */\n  Sr = 'sr',\n  /** Southern Sotho */\n  St = 'st',\n  /** Sundanese */\n  Su = 'su',\n  /** Swedish */\n  Sv = 'sv',\n  /** Swahili */\n  Sw = 'sw',\n  /** Congo Swahili */\n  SwCd = 'sw_CD',\n  /** Tamil */\n  Ta = 'ta',\n  /** Telugu */\n  Te = 'te',\n  /** Tajik */\n  Tg = 'tg',\n  /** Thai */\n  Th = 'th',\n  /** Tigrinya */\n  Ti = 'ti',\n  /** Turkmen */\n  Tk = 'tk',\n  /** Tongan */\n  To = 'to',\n  /** Turkish */\n  Tr = 'tr',\n  /** Tatar */\n  Tt = 'tt',\n  /** Uyghur */\n  Ug = 'ug',\n  /** Ukrainian */\n  Uk = 'uk',\n  /** Urdu */\n  Ur = 'ur',\n  /** Uzbek */\n  Uz = 'uz',\n  /** Vietnamese */\n  Vi = 'vi',\n  /** Volap\u00FCk */\n  Vo = 'vo',\n  /** Wolof */\n  Wo = 'wo',\n  /** Xhosa */\n  Xh = 'xh',\n  /** Yiddish */\n  Yi = 'yi',\n  /** Yoruba */\n  Yo = 'yo',\n  /** Chinese */\n  Zh = 'zh',\n  /** Simplified Chinese */\n  ZhHans = 'zh_Hans',\n  /** Traditional Chinese */\n  ZhHant = 'zh_Hant',\n  /** Zulu */\n  Zu = 'zu'\n}\n\nexport type LocaleStringCustomFieldConfig = CustomField & {\n  __typename?: 'LocaleStringCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  length?: Maybe<Scalars['Int']>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  pattern?: Maybe<Scalars['String']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  requiresPermission?: Maybe<Array<Permission>>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocaleTextCustomFieldConfig = CustomField & {\n  __typename?: 'LocaleTextCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  requiresPermission?: Maybe<Array<Permission>>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocalizedString = {\n  __typename?: 'LocalizedString';\n  languageCode: LanguageCode;\n  value: Scalars['String'];\n};\n\nexport enum LogicalOperator {\n  And = 'AND',\n  Or = 'OR'\n}\n\n/** Returned when attempting to register or verify a customer account without a password, when one is required. */\nexport type MissingPasswordError = ErrorResult & {\n  __typename?: 'MissingPasswordError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** Adds an item to the order. If custom fields are defined on the OrderLine entity, a third argument 'customFields' will be available. */\n  addItemToOrder: UpdateOrderItemsResult;\n  /** Add a Payment to the Order */\n  addPaymentToOrder: AddPaymentToOrderResult;\n  /** Adjusts an OrderLine. If custom fields are defined on the OrderLine entity, a third argument 'customFields' of type `OrderLineCustomFieldsInput` will be available. */\n  adjustOrderLine: UpdateOrderItemsResult;\n  /** Applies the given coupon code to the active Order */\n  applyCouponCode: ApplyCouponCodeResult;\n  /** Authenticates the user using a named authentication strategy */\n  authenticate: AuthenticationResult;\n  /** Create a new Customer Address */\n  createCustomerAddress: Address;\n  createStripePaymentIntent?: Maybe<Scalars['String']>;\n  /** Delete an existing Address */\n  deleteCustomerAddress: Success;\n  /**\n   * Authenticates the user using the native authentication strategy. This mutation is an alias for authenticate({ native: { ... }})\n   *\n   * The `rememberMe` option applies when using cookie-based sessions, and if `true` it will set the maxAge of the session cookie\n   * to 1 year.\n   */\n  login: NativeAuthenticationResult;\n  /** End the current authenticated session */\n  logout: Success;\n  /** Regenerate and send a verification token for a new Customer registration. Only applicable if `authOptions.requireVerification` is set to true. */\n  refreshCustomerVerification: RefreshCustomerVerificationResult;\n  /**\n   * Register a Customer account with the given credentials. There are three possible registration flows:\n   *\n   * _If `authOptions.requireVerification` is set to `true`:_\n   *\n   * 1. **The Customer is registered _with_ a password**. A verificationToken will be created (and typically emailed to the Customer). That\n   *    verificationToken would then be passed to the `verifyCustomerAccount` mutation _without_ a password. The Customer is then\n   *    verified and authenticated in one step.\n   * 2. **The Customer is registered _without_ a password**. A verificationToken will be created (and typically emailed to the Customer). That\n   *    verificationToken would then be passed to the `verifyCustomerAccount` mutation _with_ the chosen password of the Customer. The Customer is then\n   *    verified and authenticated in one step.\n   *\n   * _If `authOptions.requireVerification` is set to `false`:_\n   *\n   * 3. The Customer _must_ be registered _with_ a password. No further action is needed - the Customer is able to authenticate immediately.\n   */\n  registerCustomerAccount: RegisterCustomerAccountResult;\n  /** Remove all OrderLine from the Order */\n  removeAllOrderLines: RemoveOrderItemsResult;\n  /** Removes the given coupon code from the active Order */\n  removeCouponCode?: Maybe<Order>;\n  /** Remove an OrderLine from the Order */\n  removeOrderLine: RemoveOrderItemsResult;\n  /** Requests a password reset email to be sent */\n  requestPasswordReset?: Maybe<RequestPasswordResetResult>;\n  /**\n   * Request to update the emailAddress of the active Customer. If `authOptions.requireVerification` is enabled\n   * (as is the default), then the `identifierChangeToken` will be assigned to the current User and\n   * a IdentifierChangeRequestEvent will be raised. This can then be used e.g. by the EmailPlugin to email\n   * that verification token to the Customer, which is then used to verify the change of email address.\n   */\n  requestUpdateCustomerEmailAddress: RequestUpdateCustomerEmailAddressResult;\n  /** Resets a Customer's password based on the provided token */\n  resetPassword: ResetPasswordResult;\n  /** Set the Customer for the Order. Required only if the Customer is not currently logged in */\n  setCustomerForOrder: SetCustomerForOrderResult;\n  /** Sets the billing address for this order */\n  setOrderBillingAddress: ActiveOrderResult;\n  /** Allows any custom fields to be set for the active order */\n  setOrderCustomFields: ActiveOrderResult;\n  /** Sets the shipping address for this order */\n  setOrderShippingAddress: ActiveOrderResult;\n  /**\n   * Sets the shipping method by id, which can be obtained with the `eligibleShippingMethods` query.\n   * An Order can have multiple shipping methods, in which case you can pass an array of ids. In this case,\n   * you should configure a custom ShippingLineAssignmentStrategy in order to know which OrderLines each\n   * shipping method will apply to.\n   */\n  setOrderShippingMethod: SetOrderShippingMethodResult;\n  /** Transitions an Order to a new state. Valid next states can be found by querying `nextOrderStates` */\n  transitionOrderToState?: Maybe<TransitionOrderToStateResult>;\n  /** Update an existing Customer */\n  updateCustomer: Customer;\n  /** Update an existing Address */\n  updateCustomerAddress: Address;\n  /**\n   * Confirm the update of the emailAddress with the provided token, which has been generated by the\n   * `requestUpdateCustomerEmailAddress` mutation.\n   */\n  updateCustomerEmailAddress: UpdateCustomerEmailAddressResult;\n  /** Update the password of the active Customer */\n  updateCustomerPassword: UpdateCustomerPasswordResult;\n  /**\n   * Verify a Customer email address with the token sent to that address. Only applicable if `authOptions.requireVerification` is set to true.\n   *\n   * If the Customer was not registered with a password in the `registerCustomerAccount` mutation, the password _must_ be\n   * provided here.\n   */\n  verifyCustomerAccount: VerifyCustomerAccountResult;\n};\n\n\nexport type MutationAddItemToOrderArgs = {\n  productVariantId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\n\nexport type MutationAddPaymentToOrderArgs = {\n  input: PaymentInput;\n};\n\n\nexport type MutationAdjustOrderLineArgs = {\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\n\nexport type MutationApplyCouponCodeArgs = {\n  couponCode: Scalars['String'];\n};\n\n\nexport type MutationAuthenticateArgs = {\n  input: AuthenticationInput;\n  rememberMe?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationCreateCustomerAddressArgs = {\n  input: CreateAddressInput;\n};\n\n\nexport type MutationDeleteCustomerAddressArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'];\n  rememberMe?: InputMaybe<Scalars['Boolean']>;\n  username: Scalars['String'];\n};\n\n\nexport type MutationRefreshCustomerVerificationArgs = {\n  emailAddress: Scalars['String'];\n};\n\n\nexport type MutationRegisterCustomerAccountArgs = {\n  input: RegisterCustomerInput;\n};\n\n\nexport type MutationRemoveCouponCodeArgs = {\n  couponCode: Scalars['String'];\n};\n\n\nexport type MutationRemoveOrderLineArgs = {\n  orderLineId: Scalars['ID'];\n};\n\n\nexport type MutationRequestPasswordResetArgs = {\n  emailAddress: Scalars['String'];\n};\n\n\nexport type MutationRequestUpdateCustomerEmailAddressArgs = {\n  newEmailAddress: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  token: Scalars['String'];\n};\n\n\nexport type MutationSetCustomerForOrderArgs = {\n  input: CreateCustomerInput;\n};\n\n\nexport type MutationSetOrderBillingAddressArgs = {\n  input: CreateAddressInput;\n};\n\n\nexport type MutationSetOrderCustomFieldsArgs = {\n  input: UpdateOrderInput;\n};\n\n\nexport type MutationSetOrderShippingAddressArgs = {\n  input: CreateAddressInput;\n};\n\n\nexport type MutationSetOrderShippingMethodArgs = {\n  shippingMethodId: Array<Scalars['ID']>;\n};\n\n\nexport type MutationTransitionOrderToStateArgs = {\n  state: Scalars['String'];\n};\n\n\nexport type MutationUpdateCustomerArgs = {\n  input: UpdateCustomerInput;\n};\n\n\nexport type MutationUpdateCustomerAddressArgs = {\n  input: UpdateAddressInput;\n};\n\n\nexport type MutationUpdateCustomerEmailAddressArgs = {\n  token: Scalars['String'];\n};\n\n\nexport type MutationUpdateCustomerPasswordArgs = {\n  currentPassword: Scalars['String'];\n  newPassword: Scalars['String'];\n};\n\n\nexport type MutationVerifyCustomerAccountArgs = {\n  password?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n};\n\nexport type NativeAuthInput = {\n  password: Scalars['String'];\n  username: Scalars['String'];\n};\n\n/** Returned when attempting an operation that relies on the NativeAuthStrategy, if that strategy is not configured. */\nexport type NativeAuthStrategyError = ErrorResult & {\n  __typename?: 'NativeAuthStrategyError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type NativeAuthenticationResult = CurrentUser | InvalidCredentialsError | NativeAuthStrategyError | NotVerifiedError;\n\n/** Returned when attempting to set a negative OrderLine quantity. */\nexport type NegativeQuantityError = ErrorResult & {\n  __typename?: 'NegativeQuantityError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned when invoking a mutation which depends on there being an active Order on the\n * current session.\n */\nexport type NoActiveOrderError = ErrorResult & {\n  __typename?: 'NoActiveOrderError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type Node = {\n  id: Scalars['ID'];\n};\n\n/**\n * Returned if `authOptions.requireVerification` is set to `true` (which is the default)\n * and an unverified user attempts to authenticate.\n */\nexport type NotVerifiedError = ErrorResult & {\n  __typename?: 'NotVerifiedError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Operators for filtering on a list of Number fields */\nexport type NumberListOperators = {\n  inList: Scalars['Float'];\n};\n\n/** Operators for filtering on a Int or Float field */\nexport type NumberOperators = {\n  between?: InputMaybe<NumberRange>;\n  eq?: InputMaybe<Scalars['Float']>;\n  gt?: InputMaybe<Scalars['Float']>;\n  gte?: InputMaybe<Scalars['Float']>;\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  lt?: InputMaybe<Scalars['Float']>;\n  lte?: InputMaybe<Scalars['Float']>;\n};\n\nexport type NumberRange = {\n  end: Scalars['Float'];\n  start: Scalars['Float'];\n};\n\nexport type Order = Node & {\n  __typename?: 'Order';\n  /** An order is active as long as the payment process has not been completed */\n  active: Scalars['Boolean'];\n  billingAddress?: Maybe<OrderAddress>;\n  /** A unique code for the Order */\n  code: Scalars['String'];\n  /** An array of all coupon codes applied to the Order */\n  couponCodes: Array<Scalars['String']>;\n  createdAt: Scalars['DateTime'];\n  currencyCode: CurrencyCode;\n  customFields?: Maybe<Scalars['JSON']>;\n  customer?: Maybe<Customer>;\n  discounts: Array<Discount>;\n  fulfillments?: Maybe<Array<Fulfillment>>;\n  history: HistoryEntryList;\n  id: Scalars['ID'];\n  lines: Array<OrderLine>;\n  /**\n   * The date & time that the Order was placed, i.e. the Customer\n   * completed the checkout and the Order is no longer \"active\"\n   */\n  orderPlacedAt?: Maybe<Scalars['DateTime']>;\n  payments?: Maybe<Array<Payment>>;\n  /** Promotions applied to the order. Only gets populated after the payment process has completed. */\n  promotions: Array<Promotion>;\n  shipping: Scalars['Money'];\n  shippingAddress?: Maybe<OrderAddress>;\n  shippingLines: Array<ShippingLine>;\n  shippingWithTax: Scalars['Money'];\n  state: Scalars['String'];\n  /**\n   * The subTotal is the total of all OrderLines in the Order. This figure also includes any Order-level\n   * discounts which have been prorated (proportionally distributed) amongst the items of each OrderLine.\n   * To get a total of all OrderLines which does not account for prorated discounts, use the\n   * sum of `OrderLine.discountedLinePrice` values.\n   */\n  subTotal: Scalars['Money'];\n  /** Same as subTotal, but inclusive of tax */\n  subTotalWithTax: Scalars['Money'];\n  /**\n   * Surcharges are arbitrary modifications to the Order total which are neither\n   * ProductVariants nor discounts resulting from applied Promotions. For example,\n   * one-off discounts based on customer interaction, or surcharges based on payment\n   * methods.\n   */\n  surcharges: Array<Surcharge>;\n  /** A summary of the taxes being applied to this Order */\n  taxSummary: Array<OrderTaxSummary>;\n  /** Equal to subTotal plus shipping */\n  total: Scalars['Money'];\n  totalQuantity: Scalars['Int'];\n  /** The final payable amount. Equal to subTotalWithTax plus shippingWithTax */\n  totalWithTax: Scalars['Money'];\n  type: OrderType;\n  updatedAt: Scalars['DateTime'];\n};\n\n\nexport type OrderHistoryArgs = {\n  options?: InputMaybe<HistoryEntryListOptions>;\n};\n\nexport type OrderAddress = {\n  __typename?: 'OrderAddress';\n  city?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  country?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n  fullName?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n};\n\nexport type OrderFilterParameter = {\n  _and?: InputMaybe<Array<OrderFilterParameter>>;\n  _or?: InputMaybe<Array<OrderFilterParameter>>;\n  active?: InputMaybe<BooleanOperators>;\n  code?: InputMaybe<StringOperators>;\n  createdAt?: InputMaybe<DateOperators>;\n  currencyCode?: InputMaybe<StringOperators>;\n  id?: InputMaybe<IdOperators>;\n  orderPlacedAt?: InputMaybe<DateOperators>;\n  shipping?: InputMaybe<NumberOperators>;\n  shippingWithTax?: InputMaybe<NumberOperators>;\n  state?: InputMaybe<StringOperators>;\n  subTotal?: InputMaybe<NumberOperators>;\n  subTotalWithTax?: InputMaybe<NumberOperators>;\n  total?: InputMaybe<NumberOperators>;\n  totalQuantity?: InputMaybe<NumberOperators>;\n  totalWithTax?: InputMaybe<NumberOperators>;\n  type?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\n/** Returned when the maximum order size limit has been reached. */\nexport type OrderLimitError = ErrorResult & {\n  __typename?: 'OrderLimitError';\n  errorCode: ErrorCode;\n  maxItems: Scalars['Int'];\n  message: Scalars['String'];\n};\n\nexport type OrderLine = Node & {\n  __typename?: 'OrderLine';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  /** The price of the line including discounts, excluding tax */\n  discountedLinePrice: Scalars['Money'];\n  /** The price of the line including discounts and tax */\n  discountedLinePriceWithTax: Scalars['Money'];\n  /**\n   * The price of a single unit including discounts, excluding tax.\n   *\n   * If Order-level discounts have been applied, this will not be the\n   * actual taxable unit price (see `proratedUnitPrice`), but is generally the\n   * correct price to display to customers to avoid confusion\n   * about the internal handling of distributed Order-level discounts.\n   */\n  discountedUnitPrice: Scalars['Money'];\n  /** The price of a single unit including discounts and tax */\n  discountedUnitPriceWithTax: Scalars['Money'];\n  discounts: Array<Discount>;\n  featuredAsset?: Maybe<Asset>;\n  fulfillmentLines?: Maybe<Array<FulfillmentLine>>;\n  id: Scalars['ID'];\n  /** The total price of the line excluding tax and discounts. */\n  linePrice: Scalars['Money'];\n  /** The total price of the line including tax but excluding discounts. */\n  linePriceWithTax: Scalars['Money'];\n  /** The total tax on this line */\n  lineTax: Scalars['Money'];\n  order: Order;\n  /** The quantity at the time the Order was placed */\n  orderPlacedQuantity: Scalars['Int'];\n  productVariant: ProductVariant;\n  /**\n   * The actual line price, taking into account both item discounts _and_ prorated (proportionally-distributed)\n   * Order-level discounts. This value is the true economic value of the OrderLine, and is used in tax\n   * and refund calculations.\n   */\n  proratedLinePrice: Scalars['Money'];\n  /** The proratedLinePrice including tax */\n  proratedLinePriceWithTax: Scalars['Money'];\n  /**\n   * The actual unit price, taking into account both item discounts _and_ prorated (proportionally-distributed)\n   * Order-level discounts. This value is the true economic value of the OrderItem, and is used in tax\n   * and refund calculations.\n   */\n  proratedUnitPrice: Scalars['Money'];\n  /** The proratedUnitPrice including tax */\n  proratedUnitPriceWithTax: Scalars['Money'];\n  /** The quantity of items purchased */\n  quantity: Scalars['Int'];\n  taxLines: Array<TaxLine>;\n  taxRate: Scalars['Float'];\n  /** The price of a single unit, excluding tax and discounts */\n  unitPrice: Scalars['Money'];\n  /** Non-zero if the unitPrice has changed since it was initially added to Order */\n  unitPriceChangeSinceAdded: Scalars['Money'];\n  /** The price of a single unit, including tax but excluding discounts */\n  unitPriceWithTax: Scalars['Money'];\n  /** Non-zero if the unitPriceWithTax has changed since it was initially added to Order */\n  unitPriceWithTaxChangeSinceAdded: Scalars['Money'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type OrderList = PaginatedList & {\n  __typename?: 'OrderList';\n  items: Array<Order>;\n  totalItems: Scalars['Int'];\n};\n\nexport type OrderListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<OrderFilterParameter>;\n  /** Specifies whether multiple top-level \"filter\" fields should be combined with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<OrderSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\n/** Returned when attempting to modify the contents of an Order that is not in the `AddingItems` state. */\nexport type OrderModificationError = ErrorResult & {\n  __typename?: 'OrderModificationError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to add a Payment to an Order that is not in the `ArrangingPayment` state. */\nexport type OrderPaymentStateError = ErrorResult & {\n  __typename?: 'OrderPaymentStateError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type OrderSortParameter = {\n  code?: InputMaybe<SortOrder>;\n  createdAt?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  orderPlacedAt?: InputMaybe<SortOrder>;\n  shipping?: InputMaybe<SortOrder>;\n  shippingWithTax?: InputMaybe<SortOrder>;\n  state?: InputMaybe<SortOrder>;\n  subTotal?: InputMaybe<SortOrder>;\n  subTotalWithTax?: InputMaybe<SortOrder>;\n  total?: InputMaybe<SortOrder>;\n  totalQuantity?: InputMaybe<SortOrder>;\n  totalWithTax?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\n/** Returned if there is an error in transitioning the Order state */\nexport type OrderStateTransitionError = ErrorResult & {\n  __typename?: 'OrderStateTransitionError';\n  errorCode: ErrorCode;\n  fromState: Scalars['String'];\n  message: Scalars['String'];\n  toState: Scalars['String'];\n  transitionError: Scalars['String'];\n};\n\n/**\n * A summary of the taxes being applied to this order, grouped\n * by taxRate.\n */\nexport type OrderTaxSummary = {\n  __typename?: 'OrderTaxSummary';\n  /** A description of this tax */\n  description: Scalars['String'];\n  /** The total net price of OrderLines to which this taxRate applies */\n  taxBase: Scalars['Money'];\n  /** The taxRate as a percentage */\n  taxRate: Scalars['Float'];\n  /** The total tax being applied to the Order at this taxRate */\n  taxTotal: Scalars['Money'];\n};\n\nexport enum OrderType {\n  Aggregate = 'Aggregate',\n  Regular = 'Regular',\n  Seller = 'Seller'\n}\n\nexport type PaginatedList = {\n  items: Array<Node>;\n  totalItems: Scalars['Int'];\n};\n\n/** Returned when attempting to verify a customer account with a password, when a password has already been set. */\nexport type PasswordAlreadySetError = ErrorResult & {\n  __typename?: 'PasswordAlreadySetError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned if the token used to reset a Customer's password is valid, but has\n * expired according to the `verificationTokenDuration` setting in the AuthOptions.\n */\nexport type PasswordResetTokenExpiredError = ErrorResult & {\n  __typename?: 'PasswordResetTokenExpiredError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned if the token used to reset a Customer's password is either\n * invalid or does not match any expected tokens.\n */\nexport type PasswordResetTokenInvalidError = ErrorResult & {\n  __typename?: 'PasswordResetTokenInvalidError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to register or verify a customer account where the given password fails password validation. */\nexport type PasswordValidationError = ErrorResult & {\n  __typename?: 'PasswordValidationError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  validationErrorMessage: Scalars['String'];\n};\n\nexport type Payment = Node & {\n  __typename?: 'Payment';\n  amount: Scalars['Money'];\n  createdAt: Scalars['DateTime'];\n  errorMessage?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  metadata?: Maybe<Scalars['JSON']>;\n  method: Scalars['String'];\n  refunds: Array<Refund>;\n  state: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['DateTime'];\n};\n\n/** Returned when a Payment is declined by the payment provider. */\nexport type PaymentDeclinedError = ErrorResult & {\n  __typename?: 'PaymentDeclinedError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  paymentErrorMessage: Scalars['String'];\n};\n\n/** Returned when a Payment fails due to an error. */\nexport type PaymentFailedError = ErrorResult & {\n  __typename?: 'PaymentFailedError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  paymentErrorMessage: Scalars['String'];\n};\n\n/** Passed as input to the `addPaymentToOrder` mutation. */\nexport type PaymentInput = {\n  /**\n   * This field should contain arbitrary data passed to the specified PaymentMethodHandler's `createPayment()` method\n   * as the \"metadata\" argument. For example, it could contain an ID for the payment and other\n   * data generated by the payment provider.\n   */\n  metadata: Scalars['JSON'];\n  /** This field should correspond to the `code` property of a PaymentMethod. */\n  method: Scalars['String'];\n};\n\nexport type PaymentMethod = Node & {\n  __typename?: 'PaymentMethod';\n  checker?: Maybe<ConfigurableOperation>;\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  handler: ConfigurableOperation;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  translations: Array<PaymentMethodTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type PaymentMethodQuote = {\n  __typename?: 'PaymentMethodQuote';\n  code: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  eligibilityMessage?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  isEligible: Scalars['Boolean'];\n  name: Scalars['String'];\n};\n\nexport type PaymentMethodTranslation = {\n  __typename?: 'PaymentMethodTranslation';\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\n/**\n * @description\n * Permissions for administrators and customers. Used to control access to\n * GraphQL resolvers via the {@link Allow} decorator.\n *\n * ## Understanding Permission.Owner\n *\n * `Permission.Owner` is a special permission which is used in some Vendure resolvers to indicate that that resolver should only\n * be accessible to the \"owner\" of that resource.\n *\n * For example, the Shop API `activeCustomer` query resolver should only return the Customer object for the \"owner\" of that Customer, i.e.\n * based on the activeUserId of the current session. As a result, the resolver code looks like this:\n *\n * @example\n * ```TypeScript\n * \\@Query()\n * \\@Allow(Permission.Owner)\n * async activeCustomer(\\@Ctx() ctx: RequestContext): Promise<Customer | undefined> {\n *   const userId = ctx.activeUserId;\n *   if (userId) {\n *     return this.customerService.findOneByUserId(ctx, userId);\n *   }\n * }\n * ```\n *\n * Here we can see that the \"ownership\" must be enforced by custom logic inside the resolver. Since \"ownership\" cannot be defined generally\n * nor statically encoded at build-time, any resolvers using `Permission.Owner` **must** include logic to enforce that only the owner\n * of the resource has access. If not, then it is the equivalent of using `Permission.Public`.\n *\n *\n * @docsCategory common\n */\nexport enum Permission {\n  /** Authenticated means simply that the user is logged in */\n  Authenticated = 'Authenticated',\n  /** Grants permission to create Administrator */\n  CreateAdministrator = 'CreateAdministrator',\n  /** Grants permission to create Asset */\n  CreateAsset = 'CreateAsset',\n  /** Grants permission to create Products, Facets, Assets, Collections */\n  CreateCatalog = 'CreateCatalog',\n  /** Grants permission to create Channel */\n  CreateChannel = 'CreateChannel',\n  /** Grants permission to create Collection */\n  CreateCollection = 'CreateCollection',\n  /** Grants permission to create Country */\n  CreateCountry = 'CreateCountry',\n  /** Grants permission to create Customer */\n  CreateCustomer = 'CreateCustomer',\n  /** Grants permission to create CustomerGroup */\n  CreateCustomerGroup = 'CreateCustomerGroup',\n  /** Grants permission to create Facet */\n  CreateFacet = 'CreateFacet',\n  /** Grants permission to create Order */\n  CreateOrder = 'CreateOrder',\n  /** Grants permission to create PaymentMethod */\n  CreatePaymentMethod = 'CreatePaymentMethod',\n  /** Grants permission to create Product */\n  CreateProduct = 'CreateProduct',\n  /** Grants permission to create Promotion */\n  CreatePromotion = 'CreatePromotion',\n  /** Grants permission to create Seller */\n  CreateSeller = 'CreateSeller',\n  /** Grants permission to create PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  CreateSettings = 'CreateSettings',\n  /** Grants permission to create ShippingMethod */\n  CreateShippingMethod = 'CreateShippingMethod',\n  /** Grants permission to create StockLocation */\n  CreateStockLocation = 'CreateStockLocation',\n  /** Grants permission to create System */\n  CreateSystem = 'CreateSystem',\n  /** Grants permission to create Tag */\n  CreateTag = 'CreateTag',\n  /** Grants permission to create TaxCategory */\n  CreateTaxCategory = 'CreateTaxCategory',\n  /** Grants permission to create TaxRate */\n  CreateTaxRate = 'CreateTaxRate',\n  /** Grants permission to create Zone */\n  CreateZone = 'CreateZone',\n  /** Grants permission to delete Administrator */\n  DeleteAdministrator = 'DeleteAdministrator',\n  /** Grants permission to delete Asset */\n  DeleteAsset = 'DeleteAsset',\n  /** Grants permission to delete Products, Facets, Assets, Collections */\n  DeleteCatalog = 'DeleteCatalog',\n  /** Grants permission to delete Channel */\n  DeleteChannel = 'DeleteChannel',\n  /** Grants permission to delete Collection */\n  DeleteCollection = 'DeleteCollection',\n  /** Grants permission to delete Country */\n  DeleteCountry = 'DeleteCountry',\n  /** Grants permission to delete Customer */\n  DeleteCustomer = 'DeleteCustomer',\n  /** Grants permission to delete CustomerGroup */\n  DeleteCustomerGroup = 'DeleteCustomerGroup',\n  /** Grants permission to delete Facet */\n  DeleteFacet = 'DeleteFacet',\n  /** Grants permission to delete Order */\n  DeleteOrder = 'DeleteOrder',\n  /** Grants permission to delete PaymentMethod */\n  DeletePaymentMethod = 'DeletePaymentMethod',\n  /** Grants permission to delete Product */\n  DeleteProduct = 'DeleteProduct',\n  /** Grants permission to delete Promotion */\n  DeletePromotion = 'DeletePromotion',\n  /** Grants permission to delete Seller */\n  DeleteSeller = 'DeleteSeller',\n  /** Grants permission to delete PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  DeleteSettings = 'DeleteSettings',\n  /** Grants permission to delete ShippingMethod */\n  DeleteShippingMethod = 'DeleteShippingMethod',\n  /** Grants permission to delete StockLocation */\n  DeleteStockLocation = 'DeleteStockLocation',\n  /** Grants permission to delete System */\n  DeleteSystem = 'DeleteSystem',\n  /** Grants permission to delete Tag */\n  DeleteTag = 'DeleteTag',\n  /** Grants permission to delete TaxCategory */\n  DeleteTaxCategory = 'DeleteTaxCategory',\n  /** Grants permission to delete TaxRate */\n  DeleteTaxRate = 'DeleteTaxRate',\n  /** Grants permission to delete Zone */\n  DeleteZone = 'DeleteZone',\n  /** Owner means the user owns this entity, e.g. a Customer's own Order */\n  Owner = 'Owner',\n  /** Public means any unauthenticated user may perform the operation */\n  Public = 'Public',\n  /** Grants permission to read Administrator */\n  ReadAdministrator = 'ReadAdministrator',\n  /** Grants permission to read Asset */\n  ReadAsset = 'ReadAsset',\n  /** Grants permission to read Products, Facets, Assets, Collections */\n  ReadCatalog = 'ReadCatalog',\n  /** Grants permission to read Channel */\n  ReadChannel = 'ReadChannel',\n  /** Grants permission to read Collection */\n  ReadCollection = 'ReadCollection',\n  /** Grants permission to read Country */\n  ReadCountry = 'ReadCountry',\n  /** Grants permission to read Customer */\n  ReadCustomer = 'ReadCustomer',\n  /** Grants permission to read CustomerGroup */\n  ReadCustomerGroup = 'ReadCustomerGroup',\n  /** Grants permission to read Facet */\n  ReadFacet = 'ReadFacet',\n  /** Grants permission to read Order */\n  ReadOrder = 'ReadOrder',\n  /** Grants permission to read PaymentMethod */\n  ReadPaymentMethod = 'ReadPaymentMethod',\n  /** Grants permission to read Product */\n  ReadProduct = 'ReadProduct',\n  /** Grants permission to read Promotion */\n  ReadPromotion = 'ReadPromotion',\n  /** Grants permission to read Seller */\n  ReadSeller = 'ReadSeller',\n  /** Grants permission to read PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  ReadSettings = 'ReadSettings',\n  /** Grants permission to read ShippingMethod */\n  ReadShippingMethod = 'ReadShippingMethod',\n  /** Grants permission to read StockLocation */\n  ReadStockLocation = 'ReadStockLocation',\n  /** Grants permission to read System */\n  ReadSystem = 'ReadSystem',\n  /** Grants permission to read Tag */\n  ReadTag = 'ReadTag',\n  /** Grants permission to read TaxCategory */\n  ReadTaxCategory = 'ReadTaxCategory',\n  /** Grants permission to read TaxRate */\n  ReadTaxRate = 'ReadTaxRate',\n  /** Grants permission to read Zone */\n  ReadZone = 'ReadZone',\n  /** SuperAdmin has unrestricted access to all operations */\n  SuperAdmin = 'SuperAdmin',\n  /** Grants permission to update Administrator */\n  UpdateAdministrator = 'UpdateAdministrator',\n  /** Grants permission to update Asset */\n  UpdateAsset = 'UpdateAsset',\n  /** Grants permission to update Products, Facets, Assets, Collections */\n  UpdateCatalog = 'UpdateCatalog',\n  /** Grants permission to update Channel */\n  UpdateChannel = 'UpdateChannel',\n  /** Grants permission to update Collection */\n  UpdateCollection = 'UpdateCollection',\n  /** Grants permission to update Country */\n  UpdateCountry = 'UpdateCountry',\n  /** Grants permission to update Customer */\n  UpdateCustomer = 'UpdateCustomer',\n  /** Grants permission to update CustomerGroup */\n  UpdateCustomerGroup = 'UpdateCustomerGroup',\n  /** Grants permission to update Facet */\n  UpdateFacet = 'UpdateFacet',\n  /** Grants permission to update GlobalSettings */\n  UpdateGlobalSettings = 'UpdateGlobalSettings',\n  /** Grants permission to update Order */\n  UpdateOrder = 'UpdateOrder',\n  /** Grants permission to update PaymentMethod */\n  UpdatePaymentMethod = 'UpdatePaymentMethod',\n  /** Grants permission to update Product */\n  UpdateProduct = 'UpdateProduct',\n  /** Grants permission to update Promotion */\n  UpdatePromotion = 'UpdatePromotion',\n  /** Grants permission to update Seller */\n  UpdateSeller = 'UpdateSeller',\n  /** Grants permission to update PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  UpdateSettings = 'UpdateSettings',\n  /** Grants permission to update ShippingMethod */\n  UpdateShippingMethod = 'UpdateShippingMethod',\n  /** Grants permission to update StockLocation */\n  UpdateStockLocation = 'UpdateStockLocation',\n  /** Grants permission to update System */\n  UpdateSystem = 'UpdateSystem',\n  /** Grants permission to update Tag */\n  UpdateTag = 'UpdateTag',\n  /** Grants permission to update TaxCategory */\n  UpdateTaxCategory = 'UpdateTaxCategory',\n  /** Grants permission to update TaxRate */\n  UpdateTaxRate = 'UpdateTaxRate',\n  /** Grants permission to update Zone */\n  UpdateZone = 'UpdateZone'\n}\n\n/** The price range where the result has more than one price */\nexport type PriceRange = {\n  __typename?: 'PriceRange';\n  max: Scalars['Money'];\n  min: Scalars['Money'];\n};\n\nexport type Product = Node & {\n  __typename?: 'Product';\n  assets: Array<Asset>;\n  collections: Array<Collection>;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  facetValues: Array<FacetValue>;\n  featuredAsset?: Maybe<Asset>;\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  optionGroups: Array<ProductOptionGroup>;\n  slug: Scalars['String'];\n  translations: Array<ProductTranslation>;\n  updatedAt: Scalars['DateTime'];\n  /** Returns a paginated, sortable, filterable list of ProductVariants */\n  variantList: ProductVariantList;\n  /** Returns all ProductVariants */\n  variants: Array<ProductVariant>;\n};\n\n\nexport type ProductVariantListArgs = {\n  options?: InputMaybe<ProductVariantListOptions>;\n};\n\nexport type ProductFilterParameter = {\n  _and?: InputMaybe<Array<ProductFilterParameter>>;\n  _or?: InputMaybe<Array<ProductFilterParameter>>;\n  createdAt?: InputMaybe<DateOperators>;\n  description?: InputMaybe<StringOperators>;\n  enabled?: InputMaybe<BooleanOperators>;\n  id?: InputMaybe<IdOperators>;\n  languageCode?: InputMaybe<StringOperators>;\n  name?: InputMaybe<StringOperators>;\n  slug?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type ProductList = PaginatedList & {\n  __typename?: 'ProductList';\n  items: Array<Product>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<ProductFilterParameter>;\n  /** Specifies whether multiple top-level \"filter\" fields should be combined with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<ProductSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\nexport type ProductOption = Node & {\n  __typename?: 'ProductOption';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  group: ProductOptionGroup;\n  groupId: Scalars['ID'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  translations: Array<ProductOptionTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductOptionGroup = Node & {\n  __typename?: 'ProductOptionGroup';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  options: Array<ProductOption>;\n  translations: Array<ProductOptionGroupTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductOptionGroupTranslation = {\n  __typename?: 'ProductOptionGroupTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductOptionTranslation = {\n  __typename?: 'ProductOptionTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductSortParameter = {\n  createdAt?: InputMaybe<SortOrder>;\n  description?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  name?: InputMaybe<SortOrder>;\n  slug?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport type ProductTranslation = {\n  __typename?: 'ProductTranslation';\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductVariant = Node & {\n  __typename?: 'ProductVariant';\n  assets: Array<Asset>;\n  createdAt: Scalars['DateTime'];\n  currencyCode: CurrencyCode;\n  customFields?: Maybe<Scalars['JSON']>;\n  facetValues: Array<FacetValue>;\n  featuredAsset?: Maybe<Asset>;\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  options: Array<ProductOption>;\n  price: Scalars['Money'];\n  priceWithTax: Scalars['Money'];\n  product: Product;\n  productId: Scalars['ID'];\n  sku: Scalars['String'];\n  stockLevel: Scalars['String'];\n  taxCategory: TaxCategory;\n  taxRateApplied: TaxRate;\n  translations: Array<ProductVariantTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProductVariantFilterParameter = {\n  _and?: InputMaybe<Array<ProductVariantFilterParameter>>;\n  _or?: InputMaybe<Array<ProductVariantFilterParameter>>;\n  createdAt?: InputMaybe<DateOperators>;\n  currencyCode?: InputMaybe<StringOperators>;\n  id?: InputMaybe<IdOperators>;\n  languageCode?: InputMaybe<StringOperators>;\n  name?: InputMaybe<StringOperators>;\n  price?: InputMaybe<NumberOperators>;\n  priceWithTax?: InputMaybe<NumberOperators>;\n  productId?: InputMaybe<IdOperators>;\n  sku?: InputMaybe<StringOperators>;\n  stockLevel?: InputMaybe<StringOperators>;\n  updatedAt?: InputMaybe<DateOperators>;\n};\n\nexport type ProductVariantList = PaginatedList & {\n  __typename?: 'ProductVariantList';\n  items: Array<ProductVariant>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductVariantListOptions = {\n  /** Allows the results to be filtered */\n  filter?: InputMaybe<ProductVariantFilterParameter>;\n  /** Specifies whether multiple top-level \"filter\" fields should be combined with a logical AND or OR operation. Defaults to AND. */\n  filterOperator?: InputMaybe<LogicalOperator>;\n  /** Skips the first n results, for use in pagination */\n  skip?: InputMaybe<Scalars['Int']>;\n  /** Specifies which properties to sort the results by */\n  sort?: InputMaybe<ProductVariantSortParameter>;\n  /** Takes n results, for use in pagination */\n  take?: InputMaybe<Scalars['Int']>;\n};\n\nexport type ProductVariantSortParameter = {\n  createdAt?: InputMaybe<SortOrder>;\n  id?: InputMaybe<SortOrder>;\n  name?: InputMaybe<SortOrder>;\n  price?: InputMaybe<SortOrder>;\n  priceWithTax?: InputMaybe<SortOrder>;\n  productId?: InputMaybe<SortOrder>;\n  sku?: InputMaybe<SortOrder>;\n  stockLevel?: InputMaybe<SortOrder>;\n  updatedAt?: InputMaybe<SortOrder>;\n};\n\nexport type ProductVariantTranslation = {\n  __typename?: 'ProductVariantTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type Promotion = Node & {\n  __typename?: 'Promotion';\n  actions: Array<ConfigurableOperation>;\n  conditions: Array<ConfigurableOperation>;\n  couponCode?: Maybe<Scalars['String']>;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  endsAt?: Maybe<Scalars['DateTime']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  startsAt?: Maybe<Scalars['DateTime']>;\n  translations: Array<PromotionTranslation>;\n  updatedAt: Scalars['DateTime'];\n  usageLimit?: Maybe<Scalars['Int']>;\n};\n\nexport type PromotionList = PaginatedList & {\n  __typename?: 'PromotionList';\n  items: Array<Promotion>;\n  totalItems: Scalars['Int'];\n};\n\nexport type PromotionTranslation = {\n  __typename?: 'PromotionTranslation';\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type Province = Node & Region & {\n  __typename?: 'Province';\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  enabled: Scalars['Boolean'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  parent?: Maybe<Region>;\n  parentId?: Maybe<Scalars['ID']>;\n  translations: Array<RegionTranslation>;\n  type: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ProvinceList = PaginatedList & {\n  __typename?: 'ProvinceList';\n  items: Array<Province>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** The active Channel */\n  activeChannel: Channel;\n  /** The active Customer */\n  activeCustomer?: Maybe<Customer>;\n  /**\n   * The active Order. Will be `null` until an Order is created via `addItemToOrder`. Once an Order reaches the\n   * state of `PaymentAuthorized` or `PaymentSettled`, then that Order is no longer considered \"active\" and this\n   * query will once again return `null`.\n   */\n  activeOrder?: Maybe<Order>;\n  /** An array of supported Countries */\n  availableCountries: Array<Country>;\n  /** Returns a Collection either by its id or slug. If neither 'id' nor 'slug' is specified, an error will result. */\n  collection?: Maybe<Collection>;\n  /** A list of Collections available to the shop */\n  collections: CollectionList;\n  /** Returns a list of payment methods and their eligibility based on the current active Order */\n  eligiblePaymentMethods: Array<PaymentMethodQuote>;\n  /** Returns a list of eligible shipping methods based on the current active Order */\n  eligibleShippingMethods: Array<ShippingMethodQuote>;\n  /** Returns a Facet by its id */\n  facet?: Maybe<Facet>;\n  /** A list of Facets available to the shop */\n  facets: FacetList;\n  generateBraintreeClientToken?: Maybe<Scalars['String']>;\n  /** Returns information about the current authenticated User */\n  me?: Maybe<CurrentUser>;\n  /** Returns the possible next states that the activeOrder can transition to */\n  nextOrderStates: Array<Scalars['String']>;\n  /**\n   * Returns an Order based on the id. Note that in the Shop API, only orders belonging to the\n   * currently-authenticated User may be queried.\n   */\n  order?: Maybe<Order>;\n  /**\n   * Returns an Order based on the order `code`. For guest Orders (i.e. Orders placed by non-authenticated Customers)\n   * this query will only return the Order within 2 hours of the Order being placed. This allows an Order confirmation\n   * screen to be shown immediately after completion of a guest checkout, yet prevents security risks of allowing\n   * general anonymous access to Order data.\n   */\n  orderByCode?: Maybe<Order>;\n  /** Get a Product either by id or slug. If neither 'id' nor 'slug' is specified, an error will result. */\n  product?: Maybe<Product>;\n  /** Get a list of Products */\n  products: ProductList;\n  /** Search Products based on the criteria set by the `SearchInput` */\n  search: SearchResponse;\n};\n\n\nexport type QueryCollectionArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n  slug?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryCollectionsArgs = {\n  options?: InputMaybe<CollectionListOptions>;\n};\n\n\nexport type QueryFacetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryFacetsArgs = {\n  options?: InputMaybe<FacetListOptions>;\n};\n\n\nexport type QueryOrderArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryOrderByCodeArgs = {\n  code: Scalars['String'];\n};\n\n\nexport type QueryProductArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n  slug?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryProductsArgs = {\n  options?: InputMaybe<ProductListOptions>;\n};\n\n\nexport type QuerySearchArgs = {\n  input: SearchInput;\n};\n\nexport type RefreshCustomerVerificationResult = NativeAuthStrategyError | Success;\n\nexport type Refund = Node & {\n  __typename?: 'Refund';\n  adjustment: Scalars['Money'];\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  items: Scalars['Money'];\n  lines: Array<RefundLine>;\n  metadata?: Maybe<Scalars['JSON']>;\n  method?: Maybe<Scalars['String']>;\n  paymentId: Scalars['ID'];\n  reason?: Maybe<Scalars['String']>;\n  shipping: Scalars['Money'];\n  state: Scalars['String'];\n  total: Scalars['Money'];\n  transactionId?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type RefundLine = {\n  __typename?: 'RefundLine';\n  orderLine: OrderLine;\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n  refund: Refund;\n  refundId: Scalars['ID'];\n};\n\nexport type Region = {\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  enabled: Scalars['Boolean'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  parent?: Maybe<Region>;\n  parentId?: Maybe<Scalars['ID']>;\n  translations: Array<RegionTranslation>;\n  type: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type RegionTranslation = {\n  __typename?: 'RegionTranslation';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type RegisterCustomerAccountResult = MissingPasswordError | NativeAuthStrategyError | PasswordValidationError | Success;\n\nexport type RegisterCustomerInput = {\n  emailAddress: Scalars['String'];\n  firstName?: InputMaybe<Scalars['String']>;\n  lastName?: InputMaybe<Scalars['String']>;\n  password?: InputMaybe<Scalars['String']>;\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport type RelationCustomFieldConfig = CustomField & {\n  __typename?: 'RelationCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  entity: Scalars['String'];\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  requiresPermission?: Maybe<Array<Permission>>;\n  scalarFields: Array<Scalars['String']>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type RemoveOrderItemsResult = Order | OrderModificationError;\n\nexport type RequestPasswordResetResult = NativeAuthStrategyError | Success;\n\nexport type RequestUpdateCustomerEmailAddressResult = EmailAddressConflictError | InvalidCredentialsError | NativeAuthStrategyError | Success;\n\nexport type ResetPasswordResult = CurrentUser | NativeAuthStrategyError | NotVerifiedError | PasswordResetTokenExpiredError | PasswordResetTokenInvalidError | PasswordValidationError;\n\nexport type Role = Node & {\n  __typename?: 'Role';\n  channels: Array<Channel>;\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  permissions: Array<Permission>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type RoleList = PaginatedList & {\n  __typename?: 'RoleList';\n  items: Array<Role>;\n  totalItems: Scalars['Int'];\n};\n\nexport type SearchInput = {\n  collectionId?: InputMaybe<Scalars['ID']>;\n  collectionSlug?: InputMaybe<Scalars['String']>;\n  facetValueFilters?: InputMaybe<Array<FacetValueFilterInput>>;\n  groupByProduct?: InputMaybe<Scalars['Boolean']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  sort?: InputMaybe<SearchResultSortParameter>;\n  take?: InputMaybe<Scalars['Int']>;\n  term?: InputMaybe<Scalars['String']>;\n};\n\nexport type SearchReindexResponse = {\n  __typename?: 'SearchReindexResponse';\n  success: Scalars['Boolean'];\n};\n\nexport type SearchResponse = {\n  __typename?: 'SearchResponse';\n  cacheIdentifier?: Maybe<SearchResponseCacheIdentifier>;\n  collections: Array<CollectionResult>;\n  facetValues: Array<FacetValueResult>;\n  items: Array<SearchResult>;\n  totalItems: Scalars['Int'];\n};\n\n/**\n * This type is here to allow us to easily purge the Stellate cache\n * of any search results where the collectionSlug is used. We cannot rely on\n * simply purging the SearchResult type, because in the case of an empty 'items'\n * array, Stellate cannot know that that particular query now needs to be purged.\n */\nexport type SearchResponseCacheIdentifier = {\n  __typename?: 'SearchResponseCacheIdentifier';\n  collectionSlug?: Maybe<Scalars['String']>;\n};\n\nexport type SearchResult = {\n  __typename?: 'SearchResult';\n  /** An array of ids of the Collections in which this result appears */\n  collectionIds: Array<Scalars['ID']>;\n  currencyCode: CurrencyCode;\n  description: Scalars['String'];\n  facetIds: Array<Scalars['ID']>;\n  facetValueIds: Array<Scalars['ID']>;\n  price: SearchResultPrice;\n  priceWithTax: SearchResultPrice;\n  productAsset?: Maybe<SearchResultAsset>;\n  productId: Scalars['ID'];\n  productName: Scalars['String'];\n  productVariantAsset?: Maybe<SearchResultAsset>;\n  productVariantId: Scalars['ID'];\n  productVariantName: Scalars['String'];\n  /** A relevance score for the result. Differs between database implementations */\n  score: Scalars['Float'];\n  sku: Scalars['String'];\n  slug: Scalars['String'];\n};\n\nexport type SearchResultAsset = {\n  __typename?: 'SearchResultAsset';\n  focalPoint?: Maybe<Coordinate>;\n  id: Scalars['ID'];\n  preview: Scalars['String'];\n};\n\n/** The price of a search result product, either as a range or as a single price */\nexport type SearchResultPrice = PriceRange | SinglePrice;\n\nexport type SearchResultSortParameter = {\n  name?: InputMaybe<SortOrder>;\n  price?: InputMaybe<SortOrder>;\n};\n\nexport type Seller = Node & {\n  __typename?: 'Seller';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type SetCustomerForOrderResult = AlreadyLoggedInError | EmailAddressConflictError | GuestCheckoutError | NoActiveOrderError | Order;\n\nexport type SetOrderShippingMethodResult = IneligibleShippingMethodError | NoActiveOrderError | Order | OrderModificationError;\n\nexport type ShippingLine = {\n  __typename?: 'ShippingLine';\n  discountedPrice: Scalars['Money'];\n  discountedPriceWithTax: Scalars['Money'];\n  discounts: Array<Discount>;\n  id: Scalars['ID'];\n  price: Scalars['Money'];\n  priceWithTax: Scalars['Money'];\n  shippingMethod: ShippingMethod;\n};\n\nexport type ShippingMethod = Node & {\n  __typename?: 'ShippingMethod';\n  calculator: ConfigurableOperation;\n  checker: ConfigurableOperation;\n  code: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  fulfillmentHandlerCode: Scalars['String'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  translations: Array<ShippingMethodTranslation>;\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type ShippingMethodList = PaginatedList & {\n  __typename?: 'ShippingMethodList';\n  items: Array<ShippingMethod>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ShippingMethodQuote = {\n  __typename?: 'ShippingMethodQuote';\n  code: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  /** Any optional metadata returned by the ShippingCalculator in the ShippingCalculationResult */\n  metadata?: Maybe<Scalars['JSON']>;\n  name: Scalars['String'];\n  price: Scalars['Money'];\n  priceWithTax: Scalars['Money'];\n};\n\nexport type ShippingMethodTranslation = {\n  __typename?: 'ShippingMethodTranslation';\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\n/** The price value where the result has a single price */\nexport type SinglePrice = {\n  __typename?: 'SinglePrice';\n  value: Scalars['Money'];\n};\n\nexport enum SortOrder {\n  Asc = 'ASC',\n  Desc = 'DESC'\n}\n\nexport type StringCustomFieldConfig = CustomField & {\n  __typename?: 'StringCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  length?: Maybe<Scalars['Int']>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  options?: Maybe<Array<StringFieldOption>>;\n  pattern?: Maybe<Scalars['String']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  requiresPermission?: Maybe<Array<Permission>>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type StringFieldOption = {\n  __typename?: 'StringFieldOption';\n  label?: Maybe<Array<LocalizedString>>;\n  value: Scalars['String'];\n};\n\n/** Operators for filtering on a list of String fields */\nexport type StringListOperators = {\n  inList: Scalars['String'];\n};\n\n/** Operators for filtering on a String field */\nexport type StringOperators = {\n  contains?: InputMaybe<Scalars['String']>;\n  eq?: InputMaybe<Scalars['String']>;\n  in?: InputMaybe<Array<Scalars['String']>>;\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  notContains?: InputMaybe<Scalars['String']>;\n  notEq?: InputMaybe<Scalars['String']>;\n  notIn?: InputMaybe<Array<Scalars['String']>>;\n  regex?: InputMaybe<Scalars['String']>;\n};\n\n/** Indicates that an operation succeeded, where we do not want to return any more specific information. */\nexport type Success = {\n  __typename?: 'Success';\n  success: Scalars['Boolean'];\n};\n\nexport type Surcharge = Node & {\n  __typename?: 'Surcharge';\n  createdAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  id: Scalars['ID'];\n  price: Scalars['Money'];\n  priceWithTax: Scalars['Money'];\n  sku?: Maybe<Scalars['String']>;\n  taxLines: Array<TaxLine>;\n  taxRate: Scalars['Float'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type Tag = Node & {\n  __typename?: 'Tag';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  updatedAt: Scalars['DateTime'];\n  value: Scalars['String'];\n};\n\nexport type TagList = PaginatedList & {\n  __typename?: 'TagList';\n  items: Array<Tag>;\n  totalItems: Scalars['Int'];\n};\n\nexport type TaxCategory = Node & {\n  __typename?: 'TaxCategory';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  isDefault: Scalars['Boolean'];\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type TaxLine = {\n  __typename?: 'TaxLine';\n  description: Scalars['String'];\n  taxRate: Scalars['Float'];\n};\n\nexport type TaxRate = Node & {\n  __typename?: 'TaxRate';\n  category: TaxCategory;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  customerGroup?: Maybe<CustomerGroup>;\n  enabled: Scalars['Boolean'];\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n  value: Scalars['Float'];\n  zone: Zone;\n};\n\nexport type TaxRateList = PaginatedList & {\n  __typename?: 'TaxRateList';\n  items: Array<TaxRate>;\n  totalItems: Scalars['Int'];\n};\n\nexport type TextCustomFieldConfig = CustomField & {\n  __typename?: 'TextCustomFieldConfig';\n  description?: Maybe<Array<LocalizedString>>;\n  internal?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Array<LocalizedString>>;\n  list: Scalars['Boolean'];\n  name: Scalars['String'];\n  nullable?: Maybe<Scalars['Boolean']>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  requiresPermission?: Maybe<Array<Permission>>;\n  type: Scalars['String'];\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type TransitionOrderToStateResult = Order | OrderStateTransitionError;\n\n/**\n * Input used to update an Address.\n *\n * The countryCode must correspond to a `code` property of a Country that has been defined in the\n * Vendure server. The `code` property is typically a 2-character ISO code such as \"GB\", \"US\", \"DE\" etc.\n * If an invalid code is passed, the mutation will fail.\n */\nexport type UpdateAddressInput = {\n  city?: InputMaybe<Scalars['String']>;\n  company?: InputMaybe<Scalars['String']>;\n  countryCode?: InputMaybe<Scalars['String']>;\n  customFields?: InputMaybe<Scalars['JSON']>;\n  defaultBillingAddress?: InputMaybe<Scalars['Boolean']>;\n  defaultShippingAddress?: InputMaybe<Scalars['Boolean']>;\n  fullName?: InputMaybe<Scalars['String']>;\n  id: Scalars['ID'];\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  postalCode?: InputMaybe<Scalars['String']>;\n  province?: InputMaybe<Scalars['String']>;\n  streetLine1?: InputMaybe<Scalars['String']>;\n  streetLine2?: InputMaybe<Scalars['String']>;\n};\n\nexport type UpdateCustomerEmailAddressResult = IdentifierChangeTokenExpiredError | IdentifierChangeTokenInvalidError | NativeAuthStrategyError | Success;\n\nexport type UpdateCustomerInput = {\n  customFields?: InputMaybe<Scalars['JSON']>;\n  firstName?: InputMaybe<Scalars['String']>;\n  lastName?: InputMaybe<Scalars['String']>;\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport type UpdateCustomerPasswordResult = InvalidCredentialsError | NativeAuthStrategyError | PasswordValidationError | Success;\n\nexport type UpdateOrderInput = {\n  customFields?: InputMaybe<Scalars['JSON']>;\n};\n\nexport type UpdateOrderItemsResult = InsufficientStockError | NegativeQuantityError | Order | OrderLimitError | OrderModificationError;\n\nexport type User = Node & {\n  __typename?: 'User';\n  authenticationMethods: Array<AuthenticationMethod>;\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  identifier: Scalars['String'];\n  lastLogin?: Maybe<Scalars['DateTime']>;\n  roles: Array<Role>;\n  updatedAt: Scalars['DateTime'];\n  verified: Scalars['Boolean'];\n};\n\n/**\n * Returned if the verification token (used to verify a Customer's email address) is valid, but has\n * expired according to the `verificationTokenDuration` setting in the AuthOptions.\n */\nexport type VerificationTokenExpiredError = ErrorResult & {\n  __typename?: 'VerificationTokenExpiredError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned if the verification token (used to verify a Customer's email address) is either\n * invalid or does not match any expected tokens.\n */\nexport type VerificationTokenInvalidError = ErrorResult & {\n  __typename?: 'VerificationTokenInvalidError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type VerifyCustomerAccountResult = CurrentUser | MissingPasswordError | NativeAuthStrategyError | PasswordAlreadySetError | PasswordValidationError | VerificationTokenExpiredError | VerificationTokenInvalidError;\n\nexport type Zone = Node & {\n  __typename?: 'Zone';\n  createdAt: Scalars['DateTime'];\n  customFields?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  members: Array<Region>;\n  name: Scalars['String'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type LoginMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n  rememberMe?: InputMaybe<Scalars['Boolean']>;\n}>;\n\n\nexport type LoginMutation = { __typename?: 'Mutation', login: { __typename: 'CurrentUser', id: string, identifier: string } | { __typename: 'InvalidCredentialsError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'NotVerifiedError', errorCode: ErrorCode, message: string } };\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = { __typename?: 'Mutation', logout: { __typename?: 'Success', success: boolean } };\n\nexport type RegisterCustomerAccountMutationVariables = Exact<{\n  input: RegisterCustomerInput;\n}>;\n\n\nexport type RegisterCustomerAccountMutation = { __typename?: 'Mutation', registerCustomerAccount: { __typename: 'MissingPasswordError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'PasswordValidationError', errorCode: ErrorCode, message: string } | { __typename: 'Success', success: boolean } };\n\nexport type VerifyCustomerAccountMutationVariables = Exact<{\n  token: Scalars['String'];\n  password?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type VerifyCustomerAccountMutation = { __typename?: 'Mutation', verifyCustomerAccount: { __typename: 'CurrentUser', id: string, identifier: string } | { __typename: 'MissingPasswordError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'PasswordAlreadySetError', errorCode: ErrorCode, message: string } | { __typename: 'PasswordValidationError', errorCode: ErrorCode, message: string } | { __typename: 'VerificationTokenExpiredError', errorCode: ErrorCode, message: string } | { __typename: 'VerificationTokenInvalidError', errorCode: ErrorCode, message: string } };\n\nexport type UpdateCustomerMutationVariables = Exact<{\n  input: UpdateCustomerInput;\n}>;\n\n\nexport type UpdateCustomerMutation = { __typename?: 'Mutation', updateCustomer: { __typename: 'Customer' } };\n\nexport type RequestUpdateCustomerEmailAddressMutationVariables = Exact<{\n  password: Scalars['String'];\n  newEmailAddress: Scalars['String'];\n}>;\n\n\nexport type RequestUpdateCustomerEmailAddressMutation = { __typename?: 'Mutation', requestUpdateCustomerEmailAddress: { __typename: 'EmailAddressConflictError', errorCode: ErrorCode, message: string } | { __typename: 'InvalidCredentialsError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'Success' } };\n\nexport type UpdateCustomerEmailAddressMutationVariables = Exact<{\n  token: Scalars['String'];\n}>;\n\n\nexport type UpdateCustomerEmailAddressMutation = { __typename?: 'Mutation', updateCustomerEmailAddress: { __typename: 'IdentifierChangeTokenExpiredError', errorCode: ErrorCode, message: string } | { __typename: 'IdentifierChangeTokenInvalidError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'Success' } };\n\nexport type UpdateCustomerAddressMutationVariables = Exact<{\n  input: UpdateAddressInput;\n}>;\n\n\nexport type UpdateCustomerAddressMutation = { __typename?: 'Mutation', updateCustomerAddress: { __typename: 'Address' } };\n\nexport type CreateCustomerAddressMutationVariables = Exact<{\n  input: CreateAddressInput;\n}>;\n\n\nexport type CreateCustomerAddressMutation = { __typename?: 'Mutation', createCustomerAddress: { __typename: 'Address' } };\n\nexport type DeleteCustomerAddressMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteCustomerAddressMutation = { __typename?: 'Mutation', deleteCustomerAddress: { __typename?: 'Success', success: boolean } };\n\nexport type UpdateCustomerPasswordMutationVariables = Exact<{\n  currentPassword: Scalars['String'];\n  newPassword: Scalars['String'];\n}>;\n\n\nexport type UpdateCustomerPasswordMutation = { __typename?: 'Mutation', updateCustomerPassword: { __typename: 'InvalidCredentialsError', errorCode: ErrorCode, message: string } | { __typename: 'NativeAuthStrategyError', errorCode: ErrorCode, message: string } | { __typename: 'PasswordValidationError', errorCode: ErrorCode, message: string } | { __typename: 'Success', success: boolean } };\n\nexport type ActiveChannelQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ActiveChannelQuery = { __typename?: 'Query', activeChannel: { __typename?: 'Channel', id: string, currencyCode: CurrencyCode } };\n\nexport type EligibleShippingMethodsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type EligibleShippingMethodsQuery = { __typename?: 'Query', eligibleShippingMethods: Array<{ __typename?: 'ShippingMethodQuote', id: string, name: string, description: string, metadata?: any | null, price: number, priceWithTax: number }> };\n\nexport type EligiblePaymentMethodsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type EligiblePaymentMethodsQuery = { __typename?: 'Query', eligiblePaymentMethods: Array<{ __typename?: 'PaymentMethodQuote', id: string, code: string, name: string, description: string, eligibilityMessage?: string | null, isEligible: boolean }> };\n\nexport type NextOrderStatesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type NextOrderStatesQuery = { __typename?: 'Query', nextOrderStates: Array<string> };\n\nexport type AvailableCountriesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type AvailableCountriesQuery = { __typename?: 'Query', availableCountries: Array<{ __typename?: 'Country', id: string, name: string, code: string }> };\n\nexport type AddPaymentToOrderMutationVariables = Exact<{\n  input: PaymentInput;\n}>;\n\n\nexport type AddPaymentToOrderMutation = { __typename?: 'Mutation', addPaymentToOrder: { __typename?: 'IneligiblePaymentMethodError', errorCode: ErrorCode, message: string } | { __typename?: 'NoActiveOrderError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderPaymentStateError', errorCode: ErrorCode, message: string } | { __typename?: 'OrderStateTransitionError', errorCode: ErrorCode, message: string } | { __typename?: 'PaymentDeclinedError', errorCode: ErrorCode, message: string } | { __typename?: 'PaymentFailedError', errorCode: ErrorCode, message: string } };\n\nexport type TransitionOrderToStateMutationVariables = Exact<{\n  state: Scalars['String'];\n}>;\n\n\nexport type TransitionOrderToStateMutation = { __typename?: 'Mutation', transitionOrderToState?: { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderStateTransitionError', errorCode: ErrorCode, message: string } | null };\n\nexport type CreateStripePaymentIntentMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type CreateStripePaymentIntentMutation = { __typename?: 'Mutation', createStripePaymentIntent?: string | null };\n\nexport type GenerateBraintreeClientTokenQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GenerateBraintreeClientTokenQuery = { __typename?: 'Query', generateBraintreeClientToken?: string | null };\n\nexport type CollectionsQueryVariables = Exact<{\n  options?: InputMaybe<CollectionListOptions>;\n}>;\n\n\nexport type CollectionsQuery = { __typename?: 'Query', collections: { __typename?: 'CollectionList', items: Array<{ __typename?: 'Collection', id: string, name: string, slug: string, parent?: { __typename?: 'Collection', name: string } | null, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null }> } };\n\nexport type CollectionQueryVariables = Exact<{\n  slug?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n}>;\n\n\nexport type CollectionQuery = { __typename?: 'Query', collection?: { __typename?: 'Collection', id: string, name: string, slug: string, breadcrumbs: Array<{ __typename?: 'CollectionBreadcrumb', id: string, name: string, slug: string }>, children?: Array<{ __typename?: 'Collection', id: string, name: string, slug: string, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null }> | null } | null };\n\nexport type ActiveCustomerQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ActiveCustomerQuery = { __typename?: 'Query', activeCustomer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string } | null };\n\nexport type ActiveCustomerDetailsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ActiveCustomerDetailsQuery = { __typename?: 'Query', activeCustomer?: { __typename?: 'Customer', id: string, title?: string | null, firstName: string, lastName: string, phoneNumber?: string | null, emailAddress: string } | null };\n\nexport type ActiveCustomerAddressesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ActiveCustomerAddressesQuery = { __typename?: 'Query', activeCustomer?: { __typename?: 'Customer', id: string, addresses?: Array<{ __typename?: 'Address', id: string, company?: string | null, fullName?: string | null, streetLine1: string, streetLine2?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, phoneNumber?: string | null, defaultShippingAddress?: boolean | null, defaultBillingAddress?: boolean | null, country: { __typename?: 'Country', id: string, code: string, name: string } }> | null } | null };\n\nexport type ActiveCustomerOrderListQueryVariables = Exact<{\n  orderListOptions?: InputMaybe<OrderListOptions>;\n}>;\n\n\nexport type ActiveCustomerOrderListQuery = { __typename?: 'Query', activeCustomer?: { __typename?: 'Customer', orders: { __typename?: 'OrderList', totalItems: number, items: Array<{ __typename?: 'Order', code: string, state: string, orderPlacedAt?: any | null, currencyCode: CurrencyCode, subTotal: number, subTotalWithTax: number, total: number, totalWithTax: number, shippingWithTax: number, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number }>, taxSummary: Array<{ __typename?: 'OrderTaxSummary', taxBase: number, taxTotal: number }>, discounts: Array<{ __typename?: 'Discount', amountWithTax: number }>, fulfillments?: Array<{ __typename?: 'Fulfillment', trackingCode?: string | null }> | null, lines: Array<{ __typename?: 'OrderLine', quantity: number, discountedLinePriceWithTax: number, discountedUnitPriceWithTax: number, fulfillmentLines?: Array<{ __typename?: 'FulfillmentLine', quantity: number, fulfillment: { __typename?: 'Fulfillment', state: string, updatedAt: any } }> | null, featuredAsset?: { __typename?: 'Asset', name: string, source: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', name: string, sku: string, currencyCode: CurrencyCode, priceWithTax: number, product: { __typename?: 'Product', slug: string } } }> }> } } | null };\n\nexport type SetCustomerForOrderMutationVariables = Exact<{\n  input: CreateCustomerInput;\n}>;\n\n\nexport type SetCustomerForOrderMutation = { __typename?: 'Mutation', setCustomerForOrder: { __typename?: 'AlreadyLoggedInError', errorCode: ErrorCode, message: string } | { __typename?: 'EmailAddressConflictError', errorCode: ErrorCode, message: string } | { __typename?: 'GuestCheckoutError', errorCode: ErrorCode, message: string } | { __typename?: 'NoActiveOrderError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } };\n\nexport type SetOrderShippingAddressMutationVariables = Exact<{\n  input: CreateAddressInput;\n}>;\n\n\nexport type SetOrderShippingAddressMutation = { __typename?: 'Mutation', setOrderShippingAddress: { __typename?: 'NoActiveOrderError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } };\n\nexport type SetOrderShippingMethodMutationVariables = Exact<{\n  shippingMethodId: Array<Scalars['ID']> | Scalars['ID'];\n}>;\n\n\nexport type SetOrderShippingMethodMutation = { __typename?: 'Mutation', setOrderShippingMethod: { __typename?: 'IneligibleShippingMethodError', errorCode: ErrorCode, message: string } | { __typename?: 'NoActiveOrderError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderModificationError', errorCode: ErrorCode, message: string } };\n\nexport type AddItemToOrderMutationVariables = Exact<{\n  productVariantId: Scalars['ID'];\n  quantity: Scalars['Int'];\n}>;\n\n\nexport type AddItemToOrderMutation = { __typename?: 'Mutation', addItemToOrder: { __typename?: 'InsufficientStockError', errorCode: ErrorCode, message: string } | { __typename?: 'NegativeQuantityError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderLimitError', errorCode: ErrorCode, message: string } | { __typename?: 'OrderModificationError', errorCode: ErrorCode, message: string } };\n\nexport type RemoveOrderLineMutationVariables = Exact<{\n  orderLineId: Scalars['ID'];\n}>;\n\n\nexport type RemoveOrderLineMutation = { __typename?: 'Mutation', removeOrderLine: { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderModificationError', errorCode: ErrorCode, message: string } };\n\nexport type AdjustOrderLineMutationVariables = Exact<{\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n}>;\n\n\nexport type AdjustOrderLineMutation = { __typename?: 'Mutation', adjustOrderLine: { __typename?: 'InsufficientStockError', errorCode: ErrorCode, message: string } | { __typename?: 'NegativeQuantityError', errorCode: ErrorCode, message: string } | { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | { __typename?: 'OrderLimitError', errorCode: ErrorCode, message: string } | { __typename?: 'OrderModificationError', errorCode: ErrorCode, message: string } };\n\nexport type OrderDetailFragment = { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null };\n\nexport type ActiveOrderQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ActiveOrderQuery = { __typename?: 'Query', activeOrder?: { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | null };\n\nexport type OrderByCodeQueryVariables = Exact<{\n  code: Scalars['String'];\n}>;\n\n\nexport type OrderByCodeQuery = { __typename?: 'Query', orderByCode?: { __typename: 'Order', id: string, code: string, active: boolean, createdAt: any, state: string, currencyCode: CurrencyCode, totalQuantity: number, subTotal: number, subTotalWithTax: number, shippingWithTax: number, totalWithTax: number, taxSummary: Array<{ __typename?: 'OrderTaxSummary', description: string, taxRate: number, taxTotal: number }>, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName: string, emailAddress: string } | null, shippingAddress?: { __typename?: 'OrderAddress', fullName?: string | null, streetLine1?: string | null, streetLine2?: string | null, company?: string | null, city?: string | null, province?: string | null, postalCode?: string | null, countryCode?: string | null, phoneNumber?: string | null } | null, shippingLines: Array<{ __typename?: 'ShippingLine', priceWithTax: number, shippingMethod: { __typename?: 'ShippingMethod', id: string, name: string } }>, lines: Array<{ __typename?: 'OrderLine', id: string, unitPriceWithTax: number, linePriceWithTax: number, quantity: number, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, productVariant: { __typename?: 'ProductVariant', id: string, name: string, price: number, product: { __typename?: 'Product', id: string, slug: string } } }>, payments?: Array<{ __typename?: 'Payment', id: string, state: string, method: string, amount: number, metadata?: any | null }> | null } | null };\n\nexport type DetailedProductFragment = { __typename?: 'Product', id: string, name: string, description: string, collections: Array<{ __typename?: 'Collection', id: string, slug: string, name: string, breadcrumbs: Array<{ __typename?: 'CollectionBreadcrumb', id: string, name: string, slug: string }> }>, facetValues: Array<{ __typename?: 'FacetValue', id: string, code: string, name: string, facet: { __typename?: 'Facet', id: string, code: string, name: string } }>, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, assets: Array<{ __typename?: 'Asset', id: string, preview: string }>, variants: Array<{ __typename?: 'ProductVariant', id: string, name: string, priceWithTax: number, currencyCode: CurrencyCode, sku: string, stockLevel: string, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null }> };\n\nexport type ProductQueryVariables = Exact<{\n  slug?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n}>;\n\n\nexport type ProductQuery = { __typename?: 'Query', product?: { __typename?: 'Product', id: string, name: string, description: string, collections: Array<{ __typename?: 'Collection', id: string, slug: string, name: string, breadcrumbs: Array<{ __typename?: 'CollectionBreadcrumb', id: string, name: string, slug: string }> }>, facetValues: Array<{ __typename?: 'FacetValue', id: string, code: string, name: string, facet: { __typename?: 'Facet', id: string, code: string, name: string } }>, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null, assets: Array<{ __typename?: 'Asset', id: string, preview: string }>, variants: Array<{ __typename?: 'ProductVariant', id: string, name: string, priceWithTax: number, currencyCode: CurrencyCode, sku: string, stockLevel: string, featuredAsset?: { __typename?: 'Asset', id: string, preview: string } | null }> } | null };\n\nexport type ListedProductFragment = { __typename?: 'SearchResult', productId: string, productName: string, slug: string, currencyCode: CurrencyCode, productAsset?: { __typename?: 'SearchResultAsset', id: string, preview: string } | null, priceWithTax: { __typename?: 'PriceRange', min: number, max: number } | { __typename?: 'SinglePrice', value: number } };\n\nexport type SearchQueryVariables = Exact<{\n  input: SearchInput;\n}>;\n\n\nexport type SearchQuery = { __typename?: 'Query', search: { __typename?: 'SearchResponse', totalItems: number, items: Array<{ __typename?: 'SearchResult', productId: string, productName: string, slug: string, currencyCode: CurrencyCode, productAsset?: { __typename?: 'SearchResultAsset', id: string, preview: string } | null, priceWithTax: { __typename?: 'PriceRange', min: number, max: number } | { __typename?: 'SinglePrice', value: number } }>, facetValues: Array<{ __typename?: 'FacetValueResult', count: number, facetValue: { __typename?: 'FacetValue', id: string, name: string, facet: { __typename?: 'Facet', id: string, name: string } } }> } };\n\nexport type SearchFacetValuesQueryVariables = Exact<{\n  input: SearchInput;\n}>;\n\n\nexport type SearchFacetValuesQuery = { __typename?: 'Query', search: { __typename?: 'SearchResponse', totalItems: number, facetValues: Array<{ __typename?: 'FacetValueResult', count: number, facetValue: { __typename?: 'FacetValue', id: string, name: string, facet: { __typename?: 'Facet', id: string, name: string } } }> } };\n\nexport const OrderDetailFragmentDoc = gql`\n    fragment OrderDetail on Order {\n  __typename\n  id\n  code\n  active\n  createdAt\n  state\n  currencyCode\n  totalQuantity\n  subTotal\n  subTotalWithTax\n  taxSummary {\n    description\n    taxRate\n    taxTotal\n  }\n  shippingWithTax\n  totalWithTax\n  customer {\n    id\n    firstName\n    lastName\n    emailAddress\n  }\n  shippingAddress {\n    fullName\n    streetLine1\n    streetLine2\n    company\n    city\n    province\n    postalCode\n    countryCode\n    phoneNumber\n  }\n  shippingLines {\n    shippingMethod {\n      id\n      name\n    }\n    priceWithTax\n  }\n  lines {\n    id\n    unitPriceWithTax\n    linePriceWithTax\n    quantity\n    featuredAsset {\n      id\n      preview\n    }\n    productVariant {\n      id\n      name\n      price\n      product {\n        id\n        slug\n      }\n    }\n  }\n  payments {\n    id\n    state\n    method\n    amount\n    metadata\n  }\n}\n    `;\nexport const DetailedProductFragmentDoc = gql`\n    fragment DetailedProduct on Product {\n  id\n  name\n  description\n  collections {\n    id\n    slug\n    name\n    breadcrumbs {\n      id\n      name\n      slug\n    }\n  }\n  facetValues {\n    facet {\n      id\n      code\n      name\n    }\n    id\n    code\n    name\n  }\n  featuredAsset {\n    id\n    preview\n  }\n  assets {\n    id\n    preview\n  }\n  variants {\n    id\n    name\n    priceWithTax\n    currencyCode\n    sku\n    stockLevel\n    featuredAsset {\n      id\n      preview\n    }\n  }\n}\n    `;\nexport const ListedProductFragmentDoc = gql`\n    fragment ListedProduct on SearchResult {\n  productId\n  productName\n  slug\n  productAsset {\n    id\n    preview\n  }\n  currencyCode\n  priceWithTax {\n    ... on PriceRange {\n      min\n      max\n    }\n    ... on SinglePrice {\n      value\n    }\n  }\n}\n    `;\nexport const LoginDocument = gql`\n    mutation login($email: String!, $password: String!, $rememberMe: Boolean) {\n  login(username: $email, password: $password, rememberMe: $rememberMe) {\n    __typename\n    ... on CurrentUser {\n      id\n      identifier\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const LogoutDocument = gql`\n    mutation logout {\n  logout {\n    success\n  }\n}\n    `;\nexport const RegisterCustomerAccountDocument = gql`\n    mutation registerCustomerAccount($input: RegisterCustomerInput!) {\n  registerCustomerAccount(input: $input) {\n    __typename\n    ... on Success {\n      success\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const VerifyCustomerAccountDocument = gql`\n    mutation verifyCustomerAccount($token: String!, $password: String) {\n  verifyCustomerAccount(token: $token, password: $password) {\n    __typename\n    ... on CurrentUser {\n      id\n      identifier\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const UpdateCustomerDocument = gql`\n    mutation updateCustomer($input: UpdateCustomerInput!) {\n  updateCustomer(input: $input) {\n    __typename\n  }\n}\n    `;\nexport const RequestUpdateCustomerEmailAddressDocument = gql`\n    mutation requestUpdateCustomerEmailAddress($password: String!, $newEmailAddress: String!) {\n  requestUpdateCustomerEmailAddress(\n    password: $password\n    newEmailAddress: $newEmailAddress\n  ) {\n    __typename\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const UpdateCustomerEmailAddressDocument = gql`\n    mutation updateCustomerEmailAddress($token: String!) {\n  updateCustomerEmailAddress(token: $token) {\n    __typename\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const UpdateCustomerAddressDocument = gql`\n    mutation updateCustomerAddress($input: UpdateAddressInput!) {\n  updateCustomerAddress(input: $input) {\n    __typename\n  }\n}\n    `;\nexport const CreateCustomerAddressDocument = gql`\n    mutation createCustomerAddress($input: CreateAddressInput!) {\n  createCustomerAddress(input: $input) {\n    __typename\n  }\n}\n    `;\nexport const DeleteCustomerAddressDocument = gql`\n    mutation deleteCustomerAddress($id: ID!) {\n  deleteCustomerAddress(id: $id) {\n    success\n  }\n}\n    `;\nexport const UpdateCustomerPasswordDocument = gql`\n    mutation updateCustomerPassword($currentPassword: String!, $newPassword: String!) {\n  updateCustomerPassword(\n    currentPassword: $currentPassword\n    newPassword: $newPassword\n  ) {\n    __typename\n    ... on Success {\n      success\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nexport const ActiveChannelDocument = gql`\n    query activeChannel {\n  activeChannel {\n    id\n    currencyCode\n  }\n}\n    `;\nexport const EligibleShippingMethodsDocument = gql`\n    query eligibleShippingMethods {\n  eligibleShippingMethods {\n    id\n    name\n    description\n    metadata\n    price\n    priceWithTax\n  }\n}\n    `;\nexport const EligiblePaymentMethodsDocument = gql`\n    query eligiblePaymentMethods {\n  eligiblePaymentMethods {\n    id\n    code\n    name\n    description\n    eligibilityMessage\n    isEligible\n  }\n}\n    `;\nexport const NextOrderStatesDocument = gql`\n    query nextOrderStates {\n  nextOrderStates\n}\n    `;\nexport const AvailableCountriesDocument = gql`\n    query availableCountries {\n  availableCountries {\n    id\n    name\n    code\n  }\n}\n    `;\nexport const AddPaymentToOrderDocument = gql`\n    mutation addPaymentToOrder($input: PaymentInput!) {\n  addPaymentToOrder(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const TransitionOrderToStateDocument = gql`\n    mutation transitionOrderToState($state: String!) {\n  transitionOrderToState(state: $state) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const CreateStripePaymentIntentDocument = gql`\n    mutation createStripePaymentIntent {\n  createStripePaymentIntent\n}\n    `;\nexport const GenerateBraintreeClientTokenDocument = gql`\n    query generateBraintreeClientToken {\n  generateBraintreeClientToken\n}\n    `;\nexport const CollectionsDocument = gql`\n    query collections($options: CollectionListOptions) {\n  collections(options: $options) {\n    items {\n      id\n      name\n      slug\n      parent {\n        name\n      }\n      featuredAsset {\n        id\n        preview\n      }\n    }\n  }\n}\n    `;\nexport const CollectionDocument = gql`\n    query collection($slug: String, $id: ID) {\n  collection(slug: $slug, id: $id) {\n    id\n    name\n    slug\n    breadcrumbs {\n      id\n      name\n      slug\n    }\n    children {\n      id\n      name\n      slug\n      featuredAsset {\n        id\n        preview\n      }\n    }\n  }\n}\n    `;\nexport const ActiveCustomerDocument = gql`\n    query activeCustomer {\n  activeCustomer {\n    id\n    firstName\n    lastName\n  }\n}\n    `;\nexport const ActiveCustomerDetailsDocument = gql`\n    query activeCustomerDetails {\n  activeCustomer {\n    id\n    title\n    firstName\n    lastName\n    phoneNumber\n    emailAddress\n  }\n}\n    `;\nexport const ActiveCustomerAddressesDocument = gql`\n    query activeCustomerAddresses {\n  activeCustomer {\n    id\n    addresses {\n      id\n      company\n      fullName\n      streetLine1\n      streetLine2\n      city\n      province\n      postalCode\n      country {\n        id\n        code\n        name\n      }\n      phoneNumber\n      defaultShippingAddress\n      defaultBillingAddress\n    }\n  }\n}\n    `;\nexport const ActiveCustomerOrderListDocument = gql`\n    query activeCustomerOrderList($orderListOptions: OrderListOptions) {\n  activeCustomer {\n    orders(options: $orderListOptions) {\n      totalItems\n      items {\n        code\n        state\n        orderPlacedAt\n        currencyCode\n        subTotal\n        subTotalWithTax\n        total\n        totalWithTax\n        shippingWithTax\n        shippingLines {\n          priceWithTax\n        }\n        taxSummary {\n          taxBase\n          taxTotal\n        }\n        discounts {\n          amountWithTax\n        }\n        fulfillments {\n          trackingCode\n        }\n        lines {\n          quantity\n          discountedLinePriceWithTax\n          discountedUnitPriceWithTax\n          fulfillmentLines {\n            quantity\n            fulfillment {\n              state\n              updatedAt\n            }\n          }\n          featuredAsset {\n            name\n            source\n            preview\n          }\n          productVariant {\n            name\n            sku\n            currencyCode\n            priceWithTax\n            product {\n              slug\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport const SetCustomerForOrderDocument = gql`\n    mutation setCustomerForOrder($input: CreateCustomerInput!) {\n  setCustomerForOrder(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const SetOrderShippingAddressDocument = gql`\n    mutation setOrderShippingAddress($input: CreateAddressInput!) {\n  setOrderShippingAddress(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const SetOrderShippingMethodDocument = gql`\n    mutation setOrderShippingMethod($shippingMethodId: [ID!]!) {\n  setOrderShippingMethod(shippingMethodId: $shippingMethodId) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const AddItemToOrderDocument = gql`\n    mutation addItemToOrder($productVariantId: ID!, $quantity: Int!) {\n  addItemToOrder(productVariantId: $productVariantId, quantity: $quantity) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const RemoveOrderLineDocument = gql`\n    mutation removeOrderLine($orderLineId: ID!) {\n  removeOrderLine(orderLineId: $orderLineId) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const AdjustOrderLineDocument = gql`\n    mutation adjustOrderLine($orderLineId: ID!, $quantity: Int!) {\n  adjustOrderLine(orderLineId: $orderLineId, quantity: $quantity) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const ActiveOrderDocument = gql`\n    query activeOrder {\n  activeOrder {\n    ...OrderDetail\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const OrderByCodeDocument = gql`\n    query orderByCode($code: String!) {\n  orderByCode(code: $code) {\n    ...OrderDetail\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nexport const ProductDocument = gql`\n    query product($slug: String, $id: ID) {\n  product(slug: $slug, id: $id) {\n    ...DetailedProduct\n  }\n}\n    ${DetailedProductFragmentDoc}`;\nexport const SearchDocument = gql`\n    query search($input: SearchInput!) {\n  search(input: $input) {\n    totalItems\n    items {\n      ...ListedProduct\n    }\n    facetValues {\n      count\n      facetValue {\n        id\n        name\n        facet {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n    ${ListedProductFragmentDoc}`;\nexport const SearchFacetValuesDocument = gql`\n    query searchFacetValues($input: SearchInput!) {\n  search(input: $input) {\n    totalItems\n    facetValues {\n      count\n      facetValue {\n        id\n        name\n        facet {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n    `;\nexport type Requester<C = {}, E = unknown> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R> | AsyncIterable<R>\nexport function getSdk<C, E>(requester: Requester<C, E>) {\n  return {\n    login(variables: LoginMutationVariables, options?: C): Promise<LoginMutation> {\n      return requester<LoginMutation, LoginMutationVariables>(LoginDocument, variables, options) as Promise<LoginMutation>;\n    },\n    logout(variables?: LogoutMutationVariables, options?: C): Promise<LogoutMutation> {\n      return requester<LogoutMutation, LogoutMutationVariables>(LogoutDocument, variables, options) as Promise<LogoutMutation>;\n    },\n    registerCustomerAccount(variables: RegisterCustomerAccountMutationVariables, options?: C): Promise<RegisterCustomerAccountMutation> {\n      return requester<RegisterCustomerAccountMutation, RegisterCustomerAccountMutationVariables>(RegisterCustomerAccountDocument, variables, options) as Promise<RegisterCustomerAccountMutation>;\n    },\n    verifyCustomerAccount(variables: VerifyCustomerAccountMutationVariables, options?: C): Promise<VerifyCustomerAccountMutation> {\n      return requester<VerifyCustomerAccountMutation, VerifyCustomerAccountMutationVariables>(VerifyCustomerAccountDocument, variables, options) as Promise<VerifyCustomerAccountMutation>;\n    },\n    updateCustomer(variables: UpdateCustomerMutationVariables, options?: C): Promise<UpdateCustomerMutation> {\n      return requester<UpdateCustomerMutation, UpdateCustomerMutationVariables>(UpdateCustomerDocument, variables, options) as Promise<UpdateCustomerMutation>;\n    },\n    requestUpdateCustomerEmailAddress(variables: RequestUpdateCustomerEmailAddressMutationVariables, options?: C): Promise<RequestUpdateCustomerEmailAddressMutation> {\n      return requester<RequestUpdateCustomerEmailAddressMutation, RequestUpdateCustomerEmailAddressMutationVariables>(RequestUpdateCustomerEmailAddressDocument, variables, options) as Promise<RequestUpdateCustomerEmailAddressMutation>;\n    },\n    updateCustomerEmailAddress(variables: UpdateCustomerEmailAddressMutationVariables, options?: C): Promise<UpdateCustomerEmailAddressMutation> {\n      return requester<UpdateCustomerEmailAddressMutation, UpdateCustomerEmailAddressMutationVariables>(UpdateCustomerEmailAddressDocument, variables, options) as Promise<UpdateCustomerEmailAddressMutation>;\n    },\n    updateCustomerAddress(variables: UpdateCustomerAddressMutationVariables, options?: C): Promise<UpdateCustomerAddressMutation> {\n      return requester<UpdateCustomerAddressMutation, UpdateCustomerAddressMutationVariables>(UpdateCustomerAddressDocument, variables, options) as Promise<UpdateCustomerAddressMutation>;\n    },\n    createCustomerAddress(variables: CreateCustomerAddressMutationVariables, options?: C): Promise<CreateCustomerAddressMutation> {\n      return requester<CreateCustomerAddressMutation, CreateCustomerAddressMutationVariables>(CreateCustomerAddressDocument, variables, options) as Promise<CreateCustomerAddressMutation>;\n    },\n    deleteCustomerAddress(variables: DeleteCustomerAddressMutationVariables, options?: C): Promise<DeleteCustomerAddressMutation> {\n      return requester<DeleteCustomerAddressMutation, DeleteCustomerAddressMutationVariables>(DeleteCustomerAddressDocument, variables, options) as Promise<DeleteCustomerAddressMutation>;\n    },\n    updateCustomerPassword(variables: UpdateCustomerPasswordMutationVariables, options?: C): Promise<UpdateCustomerPasswordMutation> {\n      return requester<UpdateCustomerPasswordMutation, UpdateCustomerPasswordMutationVariables>(UpdateCustomerPasswordDocument, variables, options) as Promise<UpdateCustomerPasswordMutation>;\n    },\n    activeChannel(variables?: ActiveChannelQueryVariables, options?: C): Promise<ActiveChannelQuery> {\n      return requester<ActiveChannelQuery, ActiveChannelQueryVariables>(ActiveChannelDocument, variables, options) as Promise<ActiveChannelQuery>;\n    },\n    eligibleShippingMethods(variables?: EligibleShippingMethodsQueryVariables, options?: C): Promise<EligibleShippingMethodsQuery> {\n      return requester<EligibleShippingMethodsQuery, EligibleShippingMethodsQueryVariables>(EligibleShippingMethodsDocument, variables, options) as Promise<EligibleShippingMethodsQuery>;\n    },\n    eligiblePaymentMethods(variables?: EligiblePaymentMethodsQueryVariables, options?: C): Promise<EligiblePaymentMethodsQuery> {\n      return requester<EligiblePaymentMethodsQuery, EligiblePaymentMethodsQueryVariables>(EligiblePaymentMethodsDocument, variables, options) as Promise<EligiblePaymentMethodsQuery>;\n    },\n    nextOrderStates(variables?: NextOrderStatesQueryVariables, options?: C): Promise<NextOrderStatesQuery> {\n      return requester<NextOrderStatesQuery, NextOrderStatesQueryVariables>(NextOrderStatesDocument, variables, options) as Promise<NextOrderStatesQuery>;\n    },\n    availableCountries(variables?: AvailableCountriesQueryVariables, options?: C): Promise<AvailableCountriesQuery> {\n      return requester<AvailableCountriesQuery, AvailableCountriesQueryVariables>(AvailableCountriesDocument, variables, options) as Promise<AvailableCountriesQuery>;\n    },\n    addPaymentToOrder(variables: AddPaymentToOrderMutationVariables, options?: C): Promise<AddPaymentToOrderMutation> {\n      return requester<AddPaymentToOrderMutation, AddPaymentToOrderMutationVariables>(AddPaymentToOrderDocument, variables, options) as Promise<AddPaymentToOrderMutation>;\n    },\n    transitionOrderToState(variables: TransitionOrderToStateMutationVariables, options?: C): Promise<TransitionOrderToStateMutation> {\n      return requester<TransitionOrderToStateMutation, TransitionOrderToStateMutationVariables>(TransitionOrderToStateDocument, variables, options) as Promise<TransitionOrderToStateMutation>;\n    },\n    createStripePaymentIntent(variables?: CreateStripePaymentIntentMutationVariables, options?: C): Promise<CreateStripePaymentIntentMutation> {\n      return requester<CreateStripePaymentIntentMutation, CreateStripePaymentIntentMutationVariables>(CreateStripePaymentIntentDocument, variables, options) as Promise<CreateStripePaymentIntentMutation>;\n    },\n    generateBraintreeClientToken(variables?: GenerateBraintreeClientTokenQueryVariables, options?: C): Promise<GenerateBraintreeClientTokenQuery> {\n      return requester<GenerateBraintreeClientTokenQuery, GenerateBraintreeClientTokenQueryVariables>(GenerateBraintreeClientTokenDocument, variables, options) as Promise<GenerateBraintreeClientTokenQuery>;\n    },\n    collections(variables?: CollectionsQueryVariables, options?: C): Promise<CollectionsQuery> {\n      return requester<CollectionsQuery, CollectionsQueryVariables>(CollectionsDocument, variables, options) as Promise<CollectionsQuery>;\n    },\n    collection(variables?: CollectionQueryVariables, options?: C): Promise<CollectionQuery> {\n      return requester<CollectionQuery, CollectionQueryVariables>(CollectionDocument, variables, options) as Promise<CollectionQuery>;\n    },\n    activeCustomer(variables?: ActiveCustomerQueryVariables, options?: C): Promise<ActiveCustomerQuery> {\n      return requester<ActiveCustomerQuery, ActiveCustomerQueryVariables>(ActiveCustomerDocument, variables, options) as Promise<ActiveCustomerQuery>;\n    },\n    activeCustomerDetails(variables?: ActiveCustomerDetailsQueryVariables, options?: C): Promise<ActiveCustomerDetailsQuery> {\n      return requester<ActiveCustomerDetailsQuery, ActiveCustomerDetailsQueryVariables>(ActiveCustomerDetailsDocument, variables, options) as Promise<ActiveCustomerDetailsQuery>;\n    },\n    activeCustomerAddresses(variables?: ActiveCustomerAddressesQueryVariables, options?: C): Promise<ActiveCustomerAddressesQuery> {\n      return requester<ActiveCustomerAddressesQuery, ActiveCustomerAddressesQueryVariables>(ActiveCustomerAddressesDocument, variables, options) as Promise<ActiveCustomerAddressesQuery>;\n    },\n    activeCustomerOrderList(variables?: ActiveCustomerOrderListQueryVariables, options?: C): Promise<ActiveCustomerOrderListQuery> {\n      return requester<ActiveCustomerOrderListQuery, ActiveCustomerOrderListQueryVariables>(ActiveCustomerOrderListDocument, variables, options) as Promise<ActiveCustomerOrderListQuery>;\n    },\n    setCustomerForOrder(variables: SetCustomerForOrderMutationVariables, options?: C): Promise<SetCustomerForOrderMutation> {\n      return requester<SetCustomerForOrderMutation, SetCustomerForOrderMutationVariables>(SetCustomerForOrderDocument, variables, options) as Promise<SetCustomerForOrderMutation>;\n    },\n    setOrderShippingAddress(variables: SetOrderShippingAddressMutationVariables, options?: C): Promise<SetOrderShippingAddressMutation> {\n      return requester<SetOrderShippingAddressMutation, SetOrderShippingAddressMutationVariables>(SetOrderShippingAddressDocument, variables, options) as Promise<SetOrderShippingAddressMutation>;\n    },\n    setOrderShippingMethod(variables: SetOrderShippingMethodMutationVariables, options?: C): Promise<SetOrderShippingMethodMutation> {\n      return requester<SetOrderShippingMethodMutation, SetOrderShippingMethodMutationVariables>(SetOrderShippingMethodDocument, variables, options) as Promise<SetOrderShippingMethodMutation>;\n    },\n    addItemToOrder(variables: AddItemToOrderMutationVariables, options?: C): Promise<AddItemToOrderMutation> {\n      return requester<AddItemToOrderMutation, AddItemToOrderMutationVariables>(AddItemToOrderDocument, variables, options) as Promise<AddItemToOrderMutation>;\n    },\n    removeOrderLine(variables: RemoveOrderLineMutationVariables, options?: C): Promise<RemoveOrderLineMutation> {\n      return requester<RemoveOrderLineMutation, RemoveOrderLineMutationVariables>(RemoveOrderLineDocument, variables, options) as Promise<RemoveOrderLineMutation>;\n    },\n    adjustOrderLine(variables: AdjustOrderLineMutationVariables, options?: C): Promise<AdjustOrderLineMutation> {\n      return requester<AdjustOrderLineMutation, AdjustOrderLineMutationVariables>(AdjustOrderLineDocument, variables, options) as Promise<AdjustOrderLineMutation>;\n    },\n    activeOrder(variables?: ActiveOrderQueryVariables, options?: C): Promise<ActiveOrderQuery> {\n      return requester<ActiveOrderQuery, ActiveOrderQueryVariables>(ActiveOrderDocument, variables, options) as Promise<ActiveOrderQuery>;\n    },\n    orderByCode(variables: OrderByCodeQueryVariables, options?: C): Promise<OrderByCodeQuery> {\n      return requester<OrderByCodeQuery, OrderByCodeQueryVariables>(OrderByCodeDocument, variables, options) as Promise<OrderByCodeQuery>;\n    },\n    product(variables?: ProductQueryVariables, options?: C): Promise<ProductQuery> {\n      return requester<ProductQuery, ProductQueryVariables>(ProductDocument, variables, options) as Promise<ProductQuery>;\n    },\n    search(variables: SearchQueryVariables, options?: C): Promise<SearchQuery> {\n      return requester<SearchQuery, SearchQueryVariables>(SearchDocument, variables, options) as Promise<SearchQuery>;\n    },\n    searchFacetValues(variables: SearchFacetValuesQueryVariables, options?: C): Promise<SearchFacetValuesQuery> {\n      return requester<SearchFacetValuesQuery, SearchFacetValuesQueryVariables>(SearchFacetValuesDocument, variables, options) as Promise<SearchFacetValuesQuery>;\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;", "import {\n  IS_CF_PAGES,\n  safeRequireNodeDependency,\n} from '~/utils/platform-adapter';\nimport { SessionStorage } from '@remix-run/server-runtime/dist/sessions';\nimport { ErrorResult } from '~/generated/graphql';\nimport { createCookieSessionStorage } from '@remix-run/cloudflare';\nimport { CreateCookieSessionStorageFunction } from '@remix-run/server-runtime';\n\nasync function getCookieSessionStorageFactory(): Promise<CreateCookieSessionStorageFunction> {\n  if (IS_CF_PAGES) {\n    return createCookieSessionStorage;\n  } else {\n    return safeRequireNodeDependency('@remix-run/node').then(\n      (module) => module.createCookieSessionStorage,\n    );\n  }\n}\nlet sessionStorage: SessionStorage<\n  { activeOrderError: ErrorResult } & Record<string, any>\n>;\n\nexport async function getSessionStorage() {\n  if (sessionStorage) {\n    return sessionStorage;\n  }\n  const factory = await getCookieSessionStorageFactory();\n  sessionStorage = factory({\n    cookie: {\n      name: 'vendure_remix_session',\n      httpOnly: true,\n      path: '/',\n      sameSite: 'lax',\n      secrets: ['awdbhbjahdbaw'],\n    },\n  });\n  return sessionStorage;\n}\n", "import gql from 'graphql-tag';\nimport { QueryOptions, sdk } from '~/graphqlWrapper';\n\nexport function activeChannel(options: QueryOptions) {\n  return sdk\n    .activeChannel(undefined, options)\n    .then(({ activeChannel }) => activeChannel);\n}\n\ngql`\n  query activeChannel {\n    activeChannel {\n      id\n      currencyCode\n    }\n  }\n`;\n", "import { Fragment } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { CartContents } from './CartContents';\nimport { Link, useLocation } from '@remix-run/react';\nimport { Price } from '~/components/products/Price';\nimport { CartLoaderData } from '~/routes/api.active-order';\nimport { CurrencyCode } from '~/generated/graphql';\nimport { useTranslation } from 'react-i18next';\n\nexport function CartTray({\n  open,\n  onClose,\n  activeOrder,\n  adjustOrderLine,\n  removeItem,\n}: {\n  open: boolean;\n  onClose: (closed: boolean) => void;\n  activeOrder: CartLoaderData['activeOrder'];\n  adjustOrderLine?: (lineId: string, quantity: number) => void;\n  removeItem?: (lineId: string) => void;\n}) {\n  const currencyCode = activeOrder?.currencyCode || CurrencyCode.Usd;\n  const location = useLocation();\n  const editable = !location.pathname.startsWith('/checkout');\n  const { t } = useTranslation();\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"fixed inset-0 overflow-hidden z-20\"\n        onClose={onClose}\n      >\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-in-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in-out duration-300\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-y-0 right-0 pl-10 max-w-full flex\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"transform transition ease-in-out duration-300 sm:duration-300\"\n              enterFrom=\"translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transform transition ease-in-out duration-300 sm:duration-300\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"translate-x-full\"\n            >\n              <div className=\"w-screen max-w-md\">\n                <div className=\"h-full flex flex-col bg-white shadow-xl overflow-y-scroll\">\n                  <div className=\"flex-1 py-6 overflow-y-auto px-4 sm:px-6\">\n                    <div className=\"flex items-start justify-between\">\n                      <Dialog.Title className=\"text-lg font-medium text-gray-900\">\n                        {t('cart.title')}\n                      </Dialog.Title>\n                      <div className=\"ml-3 h-7 flex items-center\">\n                        <button\n                          type=\"button\"\n                          className=\"-m-2 p-2 text-gray-400 hover:text-gray-500\"\n                          onClick={() => onClose(false)}\n                        >\n                          <span className=\"sr-only\">\n                            {t('common.closePanel')}\n                          </span>\n                          <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-8\">\n                      {activeOrder?.totalQuantity ? (\n                        <CartContents\n                          orderLines={activeOrder?.lines ?? []}\n                          currencyCode={currencyCode!}\n                          editable={editable}\n                          removeItem={removeItem}\n                          adjustOrderLine={adjustOrderLine}\n                        ></CartContents>\n                      ) : (\n                        <div className=\"flex items-center justify-center h-48 text-xl text-gray-400\">\n                          {t('cart.empty')}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {activeOrder?.totalQuantity && editable && (\n                    <div className=\"border-t border-gray-200 py-6 px-4 sm:px-6\">\n                      <div className=\"flex justify-between text-base font-medium text-gray-900\">\n                        <p>{t('common.subtotal')}</p>\n                        <p>\n                          {currencyCode && (\n                            <Price\n                              priceWithTax={activeOrder?.subTotalWithTax ?? 0}\n                              currencyCode={currencyCode}\n                            />\n                          )}\n                        </p>\n                      </div>\n                      <p className=\"mt-0.5 text-sm text-gray-500\">\n                        {t('cart.shippingMessage')}\n                      </p>\n                      <div className=\"mt-6\">\n                        <Link\n                          to=\"/checkout\"\n                          onClick={() => onClose(false)}\n                          className=\"flex justify-center items-center px-6 py-3 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-primary-600 hover:bg-primary-700\"\n                        >\n                          {t('cart.checkout')}\n                        </Link>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n", "import { Form, Link } from '@remix-run/react';\nimport { Price } from '~/components/products/Price';\nimport { ActiveOrderQuery, CurrencyCode } from '~/generated/graphql';\nimport { useTranslation } from 'react-i18next';\n\nexport function CartContents({\n  orderLines,\n  currencyCode,\n  editable = true,\n  adjustOrderLine,\n  removeItem,\n}: {\n  orderLines: NonNullable<ActiveOrderQuery['activeOrder']>['lines'];\n  currencyCode: CurrencyCode;\n  editable: boolean;\n  adjustOrderLine?: (lineId: string, quantity: number) => void;\n  removeItem?: (lineId: string) => void;\n}) {\n  const { t } = useTranslation();\n  const isEditable = editable !== false;\n\n  return (\n    <div className=\"flow-root\">\n      <ul role=\"list\" className=\"-my-6 divide-y divide-gray-200\">\n        {(orderLines ?? []).map((line) => (\n          <li key={line.id} className=\"py-6 flex\">\n            <div className=\"flex-shrink-0 w-24 h-24 border border-gray-200 rounded-md overflow-hidden\">\n              <img\n                src={line.featuredAsset?.preview + '?preset=thumb'}\n                alt={line.productVariant.name}\n                className=\"w-full h-full object-center object-cover\"\n              />\n            </div>\n\n            <div className=\"ml-4 flex-1 flex flex-col\">\n              <div>\n                <div className=\"flex justify-between text-base font-medium text-gray-900\">\n                  <h3>\n                    <Link to={`/products/${line.productVariant.product.slug}`}>\n                      {line.productVariant.name}\n                    </Link>\n                  </h3>\n                  <p className=\"ml-4\">\n                    <Price\n                      priceWithTax={line.linePriceWithTax}\n                      currencyCode={currencyCode}\n                    ></Price>\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex-1 flex items-center text-sm\">\n                {editable ? (\n                  <Form>\n                    <label htmlFor={`quantity-${line.id}`} className=\"mr-2\">\n                      {t('common.quantity')}\n                    </label>\n                    <select\n                      disabled={!isEditable}\n                      id={`quantity-${line.id}`}\n                      name={`quantity-${line.id}`}\n                      value={line.quantity}\n                      onChange={(e) =>\n                        adjustOrderLine &&\n                        adjustOrderLine(line.id, +e.target.value)\n                      }\n                      className=\"max-w-full rounded-md border border-gray-300 py-1.5 text-base leading-5 font-medium text-gray-700 text-left shadow-sm focus:outline-none focus:ring-1 focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                    >\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5</option>\n                      <option value={6}>6</option>\n                      <option value={7}>7</option>\n                      <option value={8}>8</option>\n                    </select>\n                  </Form>\n                ) : (\n                  <div className=\"text-gray-800\">\n                    <span className=\"mr-1\">{t('common.quantity')}</span>\n                    <span className=\"font-medium\">{line.quantity}</span>\n                  </div>\n                )}\n                <div className=\"flex-1\"></div>\n                <div className=\"flex\">\n                  {isEditable && (\n                    <button\n                      type=\"submit\"\n                      name=\"removeItem\"\n                      value={line.id}\n                      className=\"font-medium text-primary-600 hover:text-primary-500\"\n                      onClick={() => removeItem && removeItem(line.id)}\n                    >\n                      {t('common.remove')}\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n", "import { CurrencyCode } from '~/generated/graphql';\nimport { ProductCardProps } from './ProductCard';\n\nexport function Price({\n  priceWithTax,\n  currencyCode,\n}: {\n  priceWithTax?: number | ProductCardProps['priceWithTax'];\n  currencyCode?: ProductCardProps['currencyCode'];\n}) {\n  if (priceWithTax == null || !currencyCode) {\n    return <></>;\n  }\n  if (typeof priceWithTax === 'number') {\n    return <>{formatPrice(priceWithTax, currencyCode)}</>;\n  }\n  if ('value' in priceWithTax) {\n    return <>{formatPrice(priceWithTax.value, currencyCode)}</>;\n  }\n  if (priceWithTax.min === priceWithTax.max) {\n    return <>{formatPrice(priceWithTax.min, currencyCode)}</>;\n  }\n  return (\n    <>\n      {formatPrice(priceWithTax.min, currencyCode)} -{' '}\n      {formatPrice(priceWithTax.max, currencyCode)}\n    </>\n  );\n}\n\nexport function formatPrice(value: number, currency: CurrencyCode) {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n  }).format(value / 100);\n}\n", "import gql from 'graphql-tag';\nimport { QueryOptions, sdk } from '~/graphqlWrapper';\nimport { OrderListOptions, CustomerOrdersArgs } from '~/generated/graphql';\n\nexport function getActiveCustomer(options: QueryOptions) {\n  return sdk.activeCustomer(undefined, options);\n}\n\nexport function getActiveCustomerDetails(options: QueryOptions) {\n  return sdk.activeCustomerDetails(undefined, options);\n}\n\nexport function getActiveCustomerAddresses(options: QueryOptions) {\n  return sdk.activeCustomerAddresses(undefined, options);\n}\n\nexport function getActiveCustomerOrderList(orderListOptions: OrderListOptions, options: QueryOptions) {\n  return sdk.activeCustomerOrderList({orderListOptions}, options);\n}\n\ngql`\n  query activeCustomer {\n    activeCustomer {\n      id\n      firstName\n      lastName\n    }\n  }\n`;\n\ngql`\n  query activeCustomerDetails {\n    activeCustomer {\n      id\n      title\n      firstName\n      lastName\n      phoneNumber\n      emailAddress\n    }\n  }\n`;\n\ngql`\n  query activeCustomerAddresses {\n    activeCustomer {\n      id\n      addresses {\n        id\n        company\n        fullName\n        streetLine1\n        streetLine2\n        city\n        province\n        postalCode\n        country {\n          id\n          code\n          name\n        }\n        phoneNumber\n        defaultShippingAddress\n        defaultBillingAddress\n      }\n    }\n  }\n`;\n\ngql`\n  query activeCustomerOrderList($orderListOptions: OrderListOptions) {\n    activeCustomer {\n      orders(options: $orderListOptions) {\n        totalItems\n        items {\n          code\n          state\n          orderPlacedAt\n          currencyCode\n          subTotal\n          subTotalWithTax\n          total\n          totalWithTax\n          shippingWithTax\n          shippingLines {\n            priceWithTax\n          }\n          taxSummary {\n            taxBase\n            taxTotal\n          }\n          discounts {\n            amountWithTax\n          }\n          fulfillments {\n            trackingCode\n          }\n          lines {\n            quantity\n            discountedLinePriceWithTax\n            discountedUnitPriceWithTax\n            fulfillmentLines {\n              quantity\n              fulfillment {\n                state\n                updatedAt\n              }\n            }\n            featuredAsset {\n              name\n              source\n              preview\n            }\n            productVariant {\n              name\n              sku\n              currencyCode\n              priceWithTax\n              product {\n                slug\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n", "import { RootLoaderData } from '~/root';\nimport { Link } from '@remix-run/react';\nimport { useTranslation } from 'react-i18next';\n\nconst navigation = {\n  support: [\n    { page: 'help', href: '#' },\n    { page: 'trackOrder', href: '#' },\n    { page: 'shipping', href: '#' },\n    { page: 'returns', href: '#' },\n  ],\n  company: [\n    { page: 'about', href: '#' },\n    { page: 'blog', href: '#' },\n    { page: 'responsibility', href: '#' },\n    { page: 'press', href: '#' },\n  ],\n};\n\nexport default function Footer({\n  collections,\n}: {\n  collections: RootLoaderData['collections'];\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <footer\n      className=\"mt-24 border-t bg-gray-50\"\n      aria-labelledby=\"footer-heading\"\n    >\n      <h2 id=\"footer-heading\" className=\"sr-only\">\n        {t('footer.title')}\n      </h2>\n      <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 \">\n        <div className=\"xl:grid xl:grid-cols-3 xl:gap-8\">\n          <div className=\"grid grid-cols-2 gap-8 xl:col-span-2\">\n            <div className=\"md:grid md:grid-cols-2 md:gap-8\">\n              <div>\n                <h3 className=\"text-sm font-semibold text-gray-500 tracking-wider uppercase\">\n                  {t('footer.shop')}\n                </h3>\n                <ul role=\"list\" className=\"mt-4 space-y-4\">\n                  {collections.map((collection) => (\n                    <li key={collection.id}>\n                      <Link\n                        className=\"text-base text-gray-500 hover:text-gray-600\"\n                        to={'/collections/' + collection.slug}\n                        prefetch=\"intent\"\n                        key={collection.id}\n                      >\n                        {collection.name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"mt-12 md:mt-0\">\n                <h3 className=\"text-sm font-semibold text-gray-500 tracking-wider uppercase\">\n                  {t('footer.support')}\n                </h3>\n                <ul role=\"list\" className=\"mt-4 space-y-4\">\n                  {navigation.support.map(({ page, href }) => (\n                    <li key={page}>\n                      <a\n                        href={href}\n                        className=\"text-base text-gray-500 hover:text-gray-600\"\n                      >\n                        {t(`navigation.support.${page}`)}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n            <div className=\"md:grid md:grid-cols-2 md:gap-8\">\n              <div>\n                <h3 className=\"text-sm font-semibold text-gray-500 tracking-wider uppercase\">\n                  {t('account.company')}\n                </h3>\n                <ul role=\"list\" className=\"mt-4 space-y-4\">\n                  {navigation.company.map(({ page, href }) => (\n                    <li key={page}>\n                      <a\n                        href={href}\n                        className=\"text-base text-gray-500 hover:text-gray-600\"\n                      >\n                        {t(`navigation.company.${page}`)}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-8 xl:mt-0\">\n            <h3 className=\"text-sm font-semibold text-gray-500 tracking-wider uppercase\">\n              {t('footer.subscribeHeader')}\n            </h3>\n            <p className=\"mt-4 text-base text-gray-500\">\n              {t('footer.subscribeIntro')}\n            </p>\n            <form className=\"mt-4 sm:flex sm:max-w-md\">\n              <label htmlFor=\"email-address\" className=\"sr-only\">\n                {t('acount.emailAddress')}\n              </label>\n              <input\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none min-w-0 w-full bg-white border border-gray-300 rounded-md py-2 px-4 text-base text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white focus:border-white focus:placeholder-gray-400\"\n                placeholder={t('footer.emailPlaceholder')}\n              />\n              <div className=\"mt-3 rounded-md sm:mt-0 sm:ml-3 sm:flex-shrink-0\">\n                <button\n                  type=\"submit\"\n                  className=\"w-full bg-primary-500 border border-transparent rounded-md py-2 px-4 flex items-center justify-center text-base font-medium text-white hover:bg-primary-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-primary-500\"\n                >\n                  {t('footer.subscribe')}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n", "import { useFetcher } from '@remix-run/react';\nimport { CartLoaderData } from '~/routes/api.active-order';\nimport { useEffect } from 'react';\n\nexport function useActiveOrder() {\n  const activeOrderFetcher = useFetcher<CartLoaderData>();\n  useEffect(() => {\n    if (activeOrderFetcher.state === 'idle' && !activeOrderFetcher.data) {\n      activeOrderFetcher.load('/api/active-order');\n    }\n  }, [activeOrderFetcher]);\n\n  function refresh() {\n    activeOrderFetcher.load('/api/active-order');\n  }\n\n  const { activeOrder } = activeOrderFetcher.data ?? {};\n  const removeItem = (lineId: string) => {\n    activeOrderFetcher.submit(\n      {\n        action: 'removeItem',\n        lineId,\n      },\n      {\n        method: 'post',\n        action: '/api/active-order',\n      },\n    );\n  };\n  const adjustOrderLine = (lineId: string, quantity: number) => {\n    activeOrderFetcher.submit(\n      {\n        action: 'adjustItem',\n        lineId,\n        quantity: quantity.toString(),\n      },\n      {\n        method: 'post',\n        action: '/api/active-order',\n      },\n    );\n  };\n  return {\n    activeOrderFetcher,\n    activeOrder,\n    removeItem,\n    adjustOrderLine,\n    refresh,\n  };\n}\n", "import { DataFunctionArgs } from '@remix-run/server-runtime';\nimport { getOrderByCode } from '~/providers/orders/order';\nimport { useLoaderData } from '@remix-run/react';\nimport { CartContents } from '~/components/cart/CartContents';\nimport { CartTotals } from '~/components/cart/CartTotals';\nimport { CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { InformationCircleIcon } from '@heroicons/react/24/solid';\nimport { useRevalidator } from '@remix-run/react';\nimport { useEffect, useState } from 'react';\nimport { OrderDetailFragment } from '~/generated/graphql';\nimport { useTranslation } from 'react-i18next';\n\nexport async function loader({ params, request }: DataFunctionArgs) {\n  try {\n    const order = await getOrderByCode(params.orderCode!, { request });\n    return {\n      order,\n      error: false,\n    };\n  } catch (ex) {\n    return {\n      order: null,\n      error: true,\n    };\n  }\n}\n\nexport default function CheckoutConfirmation() {\n  const { order, error } = useLoaderData<typeof loader>();\n  const revalidator = useRevalidator();\n  const [retries, setRetries] = useState(1);\n  const { t } = useTranslation();\n\n  const orderNotFound = !order && !error;\n  const orderErrored = !order && error;\n  const maxRetries = 5;\n  const retriesExhausted = retries >= maxRetries;\n  const retryTimeout = 2500;\n\n  const retry = () => {\n    if (!window) return;\n    setRetries(retries + 1);\n    window.setTimeout(() => {\n      if (retries > maxRetries) return;\n      revalidator.revalidate();\n    }, retryTimeout);\n  };\n\n  useEffect(() => {\n    if (orderErrored) {\n      retry();\n    }\n  }, [order]);\n\n  useEffect(() => {\n    if (\n      revalidator.state === 'idle' &&\n      orderErrored &&\n      retries <= maxRetries &&\n      retries > 1\n    ) {\n      retry();\n    }\n  }, [revalidator.state]);\n\n  if (orderNotFound) {\n    return (\n      <div>\n        <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          {t('checkout.orderNotFound')}\n        </h2>\n      </div>\n    );\n  }\n\n  if (orderErrored && retriesExhausted) {\n    return (\n      <div>\n        <h2 className=\"text-3xl flex items-center space-x-2 sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          <XCircleIcon className=\"text-red-600 w-8 h-8 sm:w-12 sm:h-12\"></XCircleIcon>\n          <span>{t('checkout.orderErrorTitle')}</span>\n        </h2>\n        <p className=\"text-lg text-gray-700\">\n          {t('checkout.orderErrorMessage')}\n        </p>\n      </div>\n    );\n  }\n\n  if (orderErrored) {\n    return (\n      <div>\n        <h2 className=\"text-3xl flex items-center space-x-2 sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          {t('checkout.orderProcessing')}\n        </h2>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-3xl flex items-center space-x-2 sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n        <CheckCircleIcon className=\"text-green-600 w-8 h-8 sm:w-12 sm:h-12\"></CheckCircleIcon>\n        <span>{t('order.summary')}</span>\n      </h2>\n      <p className=\"text-lg text-gray-700\">\n        {t('checkout.orderSuccessMessage')}{' '}\n        <span className=\"font-bold\">{order!.code}</span>\n      </p>\n      {order!.active && (\n        <div className=\"rounded-md bg-blue-50 p-4 my-8\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <InformationCircleIcon\n                className=\"h-5 w-5 text-blue-400\"\n                aria-hidden=\"true\"\n              />\n            </div>\n            <div className=\"ml-3 flex-1 md:flex md:justify-between\">\n              <p className=\"text-sm text-blue-700\">\n                {t('checkout.paymentMessage')}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className=\"mt-12\">\n        <div className=\"mb-6\">\n          <CartContents\n            orderLines={order!.lines}\n            currencyCode={order!.currencyCode}\n            editable={false}\n          />\n        </div>\n        <CartTotals order={order as OrderDetailFragment}></CartTotals>\n      </div>\n    </div>\n  );\n}\n", "import gql from 'graphql-tag';\nimport { QueryOptions, sdk } from '../../graphqlWrapper';\nimport { CreateAddressInput, CreateCustomerInput } from '~/generated/graphql';\n\nexport function getActiveOrder(options: QueryOptions) {\n  return sdk\n    .activeOrder(undefined, options)\n    .then(({ activeOrder }) => activeOrder);\n}\n\nexport function getOrderByCode(code: string, options: QueryOptions) {\n  return sdk\n    .orderByCode({ code }, options)\n    .then(({ orderByCode }) => orderByCode);\n}\n\nexport function addItemToOrder(\n  productVariantId: string,\n  quantity: number,\n  options: QueryOptions,\n) {\n  return sdk.addItemToOrder(\n    {\n      productVariantId,\n      quantity,\n    },\n    options,\n  );\n}\n\nexport function removeOrderLine(lineId: string, options: QueryOptions) {\n  return sdk.removeOrderLine({ orderLineId: lineId }, options);\n}\n\nexport function adjustOrderLine(\n  lineId: string,\n  quantity: number,\n  options: QueryOptions,\n) {\n  return sdk.adjustOrderLine({ orderLineId: lineId, quantity }, options);\n}\n\nexport function setCustomerForOrder(\n  input: CreateCustomerInput,\n  options: QueryOptions,\n) {\n  return sdk.setCustomerForOrder({ input }, options);\n}\n\nexport function setOrderShippingAddress(\n  input: CreateAddressInput,\n  options: QueryOptions,\n) {\n  return sdk.setOrderShippingAddress({ input }, options);\n}\n\nexport function setOrderShippingMethod(\n  shippingMethodId: string,\n  options: QueryOptions,\n) {\n  return sdk.setOrderShippingMethod({ shippingMethodId }, options);\n}\n\ngql`\n  mutation setCustomerForOrder($input: CreateCustomerInput!) {\n    setCustomerForOrder(input: $input) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation setOrderShippingAddress($input: CreateAddressInput!) {\n    setOrderShippingAddress(input: $input) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\ngql`\n  mutation setOrderShippingMethod($shippingMethodId: [ID!]!) {\n    setOrderShippingMethod(shippingMethodId: $shippingMethodId) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation addPaymentToOrder($input: PaymentInput!) {\n    addPaymentToOrder(input: $input) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation addItemToOrder($productVariantId: ID!, $quantity: Int!) {\n    addItemToOrder(productVariantId: $productVariantId, quantity: $quantity) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation removeOrderLine($orderLineId: ID!) {\n    removeOrderLine(orderLineId: $orderLineId) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation adjustOrderLine($orderLineId: ID!, $quantity: Int!) {\n    adjustOrderLine(orderLineId: $orderLineId, quantity: $quantity) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  fragment OrderDetail on Order {\n    __typename\n    id\n    code\n    active\n    createdAt\n    state\n    currencyCode\n    totalQuantity\n    subTotal\n    subTotalWithTax\n    taxSummary {\n      description\n      taxRate\n      taxTotal\n    }\n    shippingWithTax\n    totalWithTax\n    customer {\n      id\n      firstName\n      lastName\n      emailAddress\n    }\n    shippingAddress {\n      fullName\n      streetLine1\n      streetLine2\n      company\n      city\n      province\n      postalCode\n      countryCode\n      phoneNumber\n    }\n    shippingLines {\n      shippingMethod {\n        id\n        name\n      }\n      priceWithTax\n    }\n    lines {\n      id\n      unitPriceWithTax\n      linePriceWithTax\n      quantity\n      featuredAsset {\n        id\n        preview\n      }\n      productVariant {\n        id\n        name\n        price\n        product {\n          id\n          slug\n        }\n      }\n    }\n    payments {\n      id\n      state\n      method\n      amount\n      metadata\n    }\n  }\n`;\n\ngql`\n  query activeOrder {\n    activeOrder {\n      ...OrderDetail\n    }\n  }\n`;\n\ngql`\n  query orderByCode($code: String!) {\n    orderByCode(code: $code) {\n      ...OrderDetail\n    }\n  }\n`;\n", "import { Price } from '~/components/products/Price';\nimport { OrderDetailFragment } from '~/generated/graphql';\nimport { useTranslation } from 'react-i18next';\n\nexport function CartTotals({ order }: { order?: OrderDetailFragment | null }) {\n  const { t } = useTranslation();\n\n  return (\n    <dl className=\"border-t mt-6 border-gray-200 py-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <dt className=\"text-sm\">{t('common.subtotal')}</dt>\n        <dd className=\"text-sm font-medium text-gray-900\">\n          <Price\n            priceWithTax={order?.subTotalWithTax}\n            currencyCode={order?.currencyCode}\n          ></Price>\n        </dd>\n      </div>\n      <div className=\"flex items-center justify-between\">\n        <dt className=\"text-sm\">{t('common.shipping')}</dt>\n        <dd className=\"text-sm font-medium text-gray-900\">\n          <Price\n            priceWithTax={order?.shippingWithTax ?? 0}\n            currencyCode={order?.currencyCode}\n          ></Price>\n        </dd>\n      </div>\n      <div className=\"flex items-center justify-between border-t border-gray-200 pt-6\">\n        <dt className=\"text-base font-medium\">{t('common.total')}</dt>\n        <dd className=\"text-base font-medium text-gray-900\">\n          <Price\n            priceWithTax={order?.totalWithTax}\n            currencyCode={order?.currencyCode}\n          ></Price>\n        </dd>\n      </div>\n    </dl>\n  );\n}\n", "import {\n  useActionData,\n  useLoaderData,\n  useNavigate,\n  useSubmit,\n  useNavigation,\n} from '@remix-run/react';\nimport { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport { useRef, useEffect } from 'react';\nimport { validationError } from 'remix-validated-form';\nimport { Button } from '~/components/Button';\nimport Modal from '~/components/modal/Modal';\nimport { HighlightedButton } from '~/components/HighlightedButton';\nimport { Address } from '~/generated/graphql';\nimport useToggleState from '~/utils/use-toggle-state';\nimport CustomerAddressForm, {\n  validator,\n} from '~/components/account/CustomerAddressForm';\nimport { updateCustomerAddress } from '~/providers/account/account';\nimport { getAvailableCountries } from '~/providers/checkout/checkout';\nimport { getActiveCustomerAddresses } from '~/providers/customer/customer';\nimport { useTranslation } from 'react-i18next';\n\nexport async function loader({ request, params }: DataFunctionArgs) {\n  const { activeCustomer } = await getActiveCustomerAddresses({ request });\n  const address = activeCustomer?.addresses?.find(\n    (address) => address.id === params.addressId,\n  );\n\n  if (!address) {\n    return redirect('/account/addresses');\n  }\n\n  const { availableCountries } = await getAvailableCountries({ request });\n\n  return json({ address, availableCountries });\n}\n\nexport async function action({ request, params }: DataFunctionArgs) {\n  const body = await request.formData();\n\n  const result = await validator.validate(body);\n  if (result.error) {\n    return validationError(result.error);\n  }\n\n  const { data } = result;\n  await updateCustomerAddress(\n    {\n      id: params.addressId!,\n      city: data.city,\n      company: data.company,\n      countryCode: data.countryCode,\n      fullName: data.fullName,\n      phoneNumber: data.phone,\n      postalCode: data.postalCode,\n      province: data.province,\n      streetLine1: data.streetLine1,\n      streetLine2: data.streetLine2,\n    },\n    { request },\n  );\n\n  return json({\n    saved: true,\n  });\n}\n\nexport default function EditAddress() {\n  const { address, availableCountries } = useLoaderData<typeof loader>();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const navigate = useNavigate();\n  const { state, close } = useToggleState(true);\n  const formRef = useRef<HTMLFormElement>(null);\n  const { t } = useTranslation();\n\n  const submit = useSubmit();\n\n  useEffect(() => {\n    if (actionData?.saved) {\n      close();\n    }\n  }, [actionData]);\n\n  const submitForm = () => {\n    submit(formRef.current);\n  };\n\n  const afterClose = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div>\n      <Modal isOpen={state} close={close} afterClose={afterClose}>\n        <Modal.Title>{t('address.edit')}</Modal.Title>\n        <Modal.Body>\n          <CustomerAddressForm\n            address={address as Address}\n            availableCountries={availableCountries}\n            formRef={formRef}\n            submit={submitForm}\n          ></CustomerAddressForm>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"button\" onClick={close}>\n            {t('common.cancel')}\n          </Button>\n          <HighlightedButton\n            isSubmitting={navigation.state === 'submitting'}\n            type=\"submit\"\n            onClick={submitForm}\n          >\n            {t('common.save')}\n          </HighlightedButton>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n", "import clsx from 'clsx';\n\nexport function Button(\n  props: React.PropsWithChildren<React.ButtonHTMLAttributes<HTMLButtonElement>>,\n) {\n  return (\n    <button\n      {...props}\n      className={clsx(\n        'hover:text-white hover:bg-primary-600 focus:outline-none focus:z-10 focus:ring-2 focus:ring-offset-0 focus:ring-gray-800',\n        'bg-gray-100 border rounded-md py-2 px-4 text-base font-medium text-black',\n        'flex items-center justify-around gap-2',\n        'disabled:cursor-not-allowed disabled:bg-gray-200 disabled:text-gray-400',\n        props.className,\n      )}\n    >\n      {props.children}\n    </button>\n  );\n}\n", "import { Dialog, Transition } from '@headlessui/react';\nimport { XMarkIcon } from '@heroicons/react/24/solid';\nimport { ModalProvider, useModal } from './modal-context';\nimport clsx from 'clsx';\nimport React, { Fragment, PropsWithChildren } from 'react';\n\ntype ModalProps = {\n  isOpen: boolean;\n  close: () => void;\n  size?: 'small' | 'medium' | 'large';\n  afterClose?: () => void;\n  afterOpen?: () => void;\n};\n\nconst Modal: React.FC<PropsWithChildren<ModalProps>> & {\n  Title: React.FC<PropsWithChildren>;\n  Description: React.FC<PropsWithChildren>;\n  Body: React.FC<PropsWithChildren>;\n  Footer: React.FC<PropsWithChildren>;\n} = ({ isOpen, close, size = 'medium', children, afterClose, afterOpen }) => {\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-[75]\" onClose={close}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n          afterEnter={afterOpen}\n          afterLeave={afterClose}\n        >\n          <div className=\"fixed inset-0 bg-gray-700 bg-opacity-75 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel\n                className={clsx(\n                  'flex flex-col justify-start w-full h-full overflow-auto transform bg-white p-10 text-left align-middle shadow-xl transition-all',\n                  {\n                    'max-w-md': size === 'small',\n                    'max-w-xl': size === 'medium',\n                    'max-w-3xl': size === 'large',\n                  },\n                )}\n              >\n                <ModalProvider close={close}>{children}</ModalProvider>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nconst Title: React.FC<PropsWithChildren> = ({ children }) => {\n  const { close } = useModal();\n\n  return (\n    <Dialog.Title className=\"flex items-center justify-between\">\n      <div className=\"text-large-semi\">{children}</div>\n      <div>\n        <button onClick={close} type=\"button\">\n          {/* <X size={20} /> */}\n          <XMarkIcon className=\"w-6 h-6\"></XMarkIcon>\n        </button>\n      </div>\n    </Dialog.Title>\n  );\n};\n\nconst Description: React.FC<PropsWithChildren> = ({ children }) => {\n  return (\n    <Dialog.Description className=\"flex text-small-regular text-gray-700 items-center justify-center pt-2 pb-4 h-full\">\n      {children}\n    </Dialog.Description>\n  );\n};\n\nconst Body: React.FC<PropsWithChildren> = ({ children }) => {\n  return <div className=\"flex-1\">{children}</div>;\n};\n\nconst Footer: React.FC<PropsWithChildren> = ({ children }) => {\n  return (\n    <div className=\"flex items-center justify-end gap-x-4\">{children}</div>\n  );\n};\n\nModal.Title = Title;\nModal.Description = Description;\nModal.Body = Body;\nModal.Footer = Footer;\n\nexport default Modal;\n", "import React, { createContext, useContext } from \"react\"\n\ninterface ModalContext {\n  close: () => void\n}\n\nconst ModalContext = createContext<ModalContext | null>(null)\n\ninterface ModalProviderProps {\n  children?: React.ReactNode\n  close: () => void\n}\n\nexport const ModalProvider = ({ children, close }: ModalProviderProps) => {\n  return (\n    <ModalContext.Provider\n      value={{\n        close,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  )\n}\n\nexport const useModal = () => {\n  const context = useContext(ModalContext)\n  if (context === null) {\n    throw new Error(\"useModal must be used within a ModalProvider\")\n  }\n  return context\n}\n", "import { ArrowPathIcon } from '@heroicons/react/24/outline';\nimport clsx from 'clsx';\n\ntype HighlightedButtonProps = React.PropsWithChildren<React.ButtonHTMLAttributes<HTMLButtonElement>> & {\n  isSubmitting?: boolean;\n}\n\nexport function HighlightedButton(\n  { isSubmitting = false, ...props }: HighlightedButtonProps,\n) {\n  return (\n    <button\n      disabled={isSubmitting}\n      {...props}\n      className={clsx(\n        'bg-primary-500 border border-transparent rounded-md py-2 px-4 text-base font-medium text-white',\n        'focus:outline-none focus:ring-2 focus:ring-offset-0 focus:ring-gray-800 hover:bg-primary-600',\n        'disabled:opacity-50 disabled:hover:opacity-30',\n        'flex items-center justify-around gap-2',\n        props.className,\n      )}\n    >\n      {props.children}\n      {isSubmitting && <ArrowPathIcon className='w-4 h-4 animate-spin'></ArrowPathIcon>}\n    </button>\n  );\n}\n", "import { useState } from 'react';\n\nexport type StateType = [boolean, () => void, () => void, () => void] & {\n  state: boolean;\n  open: () => void;\n  close: () => void;\n  toggle: () => void;\n};\n\n/**\n *\n * @param initialState - boolean\n * @returns An array like object with `state`, `open`, `close`, and `toggle` properties\n *  to allow both object and array destructuring\n *\n * ```\n *  const [showModal, openModal, closeModal, toggleModal] = useToggleState()\n *  // or\n *  const { state, open, close, toggle } = useToggleState()\n * ```\n */\n\nconst useToggleState = (initialState = false) => {\n  const [state, setState] = useState<boolean>(initialState);\n\n  const close = () => {\n    setState(false);\n  };\n\n  const open = () => {\n    setState(true);\n  };\n\n  const toggle = () => {\n    setState((state) => !state);\n  };\n\n  const hookData = [state, open, close, toggle] as StateType;\n  hookData.state = state;\n  hookData.open = open;\n  hookData.close = close;\n  hookData.toggle = toggle;\n  return hookData;\n};\n\nexport default useToggleState;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * Creates a function with `data-first` and `data-last` signatures.\n *\n * `purry` is a dynamic function and it's not type safe. It should be wrapped by a function that have proper typings.\n * Refer to the example below for correct usage.\n *\n * @param fn the function to purry.\n * @param args the arguments\n * @signature R.purry(fn, arguments);\n * @example-raw\n *    function _findIndex(array, fn) {\n *      for (let i = 0; i < array.length; i++) {\n *        if (fn(array[i])) {\n *          return i;\n *        }\n *      }\n *      return -1;\n *    }\n *\n *    // data-first\n *    function findIndex<T>(array: T[], fn: (item: T) => boolean): number;\n *\n *    // data-last\n *    function findIndex<T>(fn: (item: T) => boolean): (array: T[]) => number;\n *\n *    function findIndex() {\n *      return R.purry(_findIndex, arguments);\n *    }\n * @category Function\n */\nexport function purry(fn, args, lazy) {\n    var diff = fn.length - args.length;\n    var arrayArgs = Array.from(args);\n    if (diff === 0) {\n        return fn.apply(void 0, arrayArgs);\n    }\n    if (diff === 1) {\n        var ret = function (data) { return fn.apply(void 0, __spreadArray([data], arrayArgs, false)); };\n        if (lazy || fn.lazy) {\n            ret.lazy = lazy || fn.lazy;\n            ret.lazyArgs = args;\n        }\n        return ret;\n    }\n    throw new Error('Wrong number of arguments');\n}\n", "import { purry } from './purry';\n// from https://github.com/epoberezkin/fast-deep-equal/blob/master/index.js\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nexport function equals() {\n    return purry(_equals, arguments);\n}\nfunction _equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n        var arrA = isArray(a);\n        var arrB = isArray(b);\n        var i = void 0;\n        var length = void 0;\n        var key = void 0;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length !== b.length) {\n                return false;\n            }\n            for (i = length; i-- !== 0;) {\n                if (!equals(a[i], b[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (arrA !== arrB) {\n            return false;\n        }\n        var dateA = a instanceof Date;\n        var dateB = b instanceof Date;\n        if (dateA !== dateB) {\n            return false;\n        }\n        if (dateA && dateB) {\n            return a.getTime() === b.getTime();\n        }\n        var regexpA = a instanceof RegExp;\n        var regexpB = b instanceof RegExp;\n        if (regexpA !== regexpB) {\n            return false;\n        }\n        if (regexpA && regexpB) {\n            return a.toString() === b.toString();\n        }\n        var keys = keyList(a);\n        length = keys.length;\n        if (length !== keyList(b).length) {\n            return false;\n        }\n        for (i = length; i-- !== 0;) {\n            if (!hasProp.call(b, keys[i])) {\n                return false;\n            }\n        }\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!equals(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n", "import * as R from \"remeda\";\nimport { createValidator, FieldErrors, Validator } from \"remix-validated-form\";\nimport { stringToPathArray } from \"set-get\";\nimport type { z } from \"zod\";\n\nconst getIssuesForError = (err: z.ZodError<any>): z.ZodIssue[] => {\n  return err.issues.flatMap((issue) => {\n    if (\"unionErrors\" in issue) {\n      return issue.unionErrors.flatMap((err) => getIssuesForError(err));\n    } else {\n      return [issue];\n    }\n  });\n};\n\nfunction pathToString(array: (string | number)[]): string {\n  return array.reduce(function (string: string, item: string | number) {\n    const prefix = string === \"\" ? \"\" : \".\";\n    return string + (isNaN(Number(item)) ? prefix + item : \"[\" + item + \"]\");\n  }, \"\");\n}\n\n/**\n * Create a validator using a `zod` schema.\n */\nexport function withZod<T, U extends z.ZodTypeDef>(\n  zodSchema: z.Schema<T, U, unknown>,\n  parseParams?: Partial<z.ParseParams>\n): Validator<T> {\n  return createValidator({\n    validate: async (value) => {\n      const result = await zodSchema.safeParseAsync(value, parseParams);\n      if (result.success) return { data: result.data, error: undefined };\n\n      const fieldErrors: FieldErrors = {};\n      getIssuesForError(result.error).forEach((issue) => {\n        const path = pathToString(issue.path);\n        if (!fieldErrors[path]) fieldErrors[path] = issue.message;\n      });\n      return { error: fieldErrors, data: undefined };\n    },\n    validateField: async (data, field) => {\n      const result = await zodSchema.safeParseAsync(data, parseParams);\n      if (result.success) return { error: undefined };\n      return {\n        error: getIssuesForError(result.error).find((issue) =>\n          R.equals(issue.path, stringToPathArray(field))\n        )?.message,\n      };\n    },\n  });\n}\n", "export const stringToPathArray = <T extends string>(\n  path: T\n): (string | number)[] => {\n  if (path.length === 0) return [];\n\n  const match =\n    path.match(/^\\[(.+?)\\](.*)$/) || path.match(/^\\.?([^\\.\\[\\]]+)(.*)$/);\n  if (match) {\n    const [_, key, rest] = match;\n    return [/^\\d+$/.test(key) ? Number(key) : key, ...stringToPathArray(rest)];\n  }\n  return [path];\n};\n", "import get from \"lodash.get\";\n\nexport const getPath = (object: any, path: string) => {\n  return get(object, path);\n};\n", "import { withZod } from '@remix-validated-form/with-zod';\nimport { z } from 'zod';\nimport { RefObject } from 'react';\nimport { ValidatedForm } from 'remix-validated-form';\nimport { Address, AvailableCountriesQuery } from '~/generated/graphql';\nimport { Input } from '~/components/Input';\nimport { Select } from '~/components/Select';\nimport { useTranslation } from 'react-i18next';\n\nexport const validator = withZod(\n  z.object({\n    fullName: z.string().min(1, { message: 'Name is required' }),\n    city: z.string(),\n    countryCode: z.string().min(1, { message: 'Country is required' }),\n    postalCode: z.string(),\n    province: z.string(),\n    streetLine1: z.string().min(1, { message: 'Address is required' }),\n    streetLine2: z.string(),\n    phone: z.string(),\n    company: z.string(),\n  }),\n);\n\nexport default function CustomerAddressForm({\n  address,\n  formRef,\n  submit,\n  availableCountries,\n}: {\n  address?: Address;\n  formRef: RefObject<HTMLFormElement>;\n  submit: () => void;\n  availableCountries: AvailableCountriesQuery['availableCountries'];\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <ValidatedForm\n      id=\"editAddressForm\"\n      validator={validator}\n      formRef={formRef}\n      method=\"post\"\n      onSubmit={submit}\n      defaultValues={{\n        fullName: address?.fullName || undefined,\n        city: address?.city || undefined,\n        streetLine1: address?.streetLine1 || undefined,\n        streetLine2: address?.streetLine2 || undefined,\n        countryCode: address?.country?.code || undefined,\n        postalCode: address?.postalCode || undefined,\n        phone: address?.phoneNumber || undefined,\n        company: address?.company || undefined,\n        province: address?.province || undefined,\n      }}\n    >\n      <input type=\"hidden\" name=\"intent\" value=\"updateAddress\" />\n      <div className=\"grid grid-cols-1 gap-y-2 my-8\">\n        <div className=\"grid grid-cols-2 gap-x-2\">\n          <Input\n            label={t('account.fullName')}\n            name=\"fullName\"\n            required\n            autoComplete=\"full-name\"\n          />\n        </div>\n        <Input label={t('address.company')} name=\"company\" />\n        <Input\n          label={t('address.streetLine1')}\n          name=\"streetLine1\"\n          required\n          autoComplete=\"address-line1\"\n        />\n        <Input\n          label={t('address.streetLine2')}\n          name=\"streetLine2\"\n          autoComplete=\"address-line2\"\n        />\n        <div className=\"grid grid-cols-[144px_1fr] gap-x-2\">\n          <Input\n            label={t('address.postalCode')}\n            name=\"postalCode\"\n            required\n            autoComplete=\"postal-code\"\n          />\n          <Input\n            label={t('address.city')}\n            name=\"city\"\n            required\n            autoComplete=\"locality\"\n          />\n        </div>\n        <Input\n          label={t('address.province')}\n          name=\"province\"\n          autoComplete=\"address-level1\"\n        />\n        <Select\n          name=\"countryCode\"\n          autoComplete=\"country\"\n          placeholder={t('address.selectCountry')}\n          required\n          label=\"Country\"\n        >\n          {availableCountries?.map((country) => (\n            <option key={country.id} value={country.code}>\n              {country.name}\n            </option>\n          ))}\n        </Select>\n        <Input\n          label={t('address.phoneNumber')}\n          name=\"phone\"\n          autoComplete=\"phone\"\n        />\n        <input type=\"submit\" hidden />\n      </div>\n    </ValidatedForm>\n  );\n}\n", "import clsx from 'clsx';\nimport React from 'react';\nimport { useField } from 'remix-validated-form';\nimport FormElement from './FormElement';\n\ntype InputProps = Omit<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  'placeholder'\n> & {\n  label?: string;\n  name: string;\n};\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ name, label, required, ...props }, ref) => {\n    const { error, getInputProps } = useField(name);\n\n    return (\n      <FormElement name={name} label={label} required={required}>\n        <input\n          ref={ref}\n          {...props}\n          {...getInputProps()}\n          className={clsx(\n            'block w-full py-2 px-4 shadow-sm border bg-white rounded-md text-base sm:text-sm text-gray-900 border-gray-300 placeholder-gray-500',\n            'focus:ring-primary-500 focus:border-primary-500 focus:outline-none focus:ring-2 focus:placeholder-gray-400',\n            {\n              'border-rose-500 focus:border-rose-500': error,\n            },\n            props.className,\n          )}\n        >\n          {props.children}\n        </input>\n      </FormElement>\n    );\n  },\n);\n", "import clsx from 'clsx';\nimport React, { PropsWithChildren } from 'react';\nimport { useField } from 'remix-validated-form';\n\ntype FormElementProps = {\n  name: string;\n  label?: string;\n  required?: boolean;\n};\n\nconst FormElement: React.FC<PropsWithChildren<FormElementProps>> = ({\n  children,\n  label,\n  name,\n  required = false,\n}) => {\n  const { error } = useField(name);\n\n  return (\n    <div>\n      {label && (\n        <label htmlFor={name} className={clsx('text-sm text-gray-500')}>\n          {label}\n          {required && <span className=\"text-rose-500\">*</span>}\n        </label>\n      )}\n      <div className={label && \"mt-1\"}>{children}</div>\n      {error && (\n        <div className=\"pt-1 text-rose-500 text-sm\">\n          <span>{error}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FormElement;", "import React, { SelectHTMLAttributes } from 'react';\nimport { useField } from 'remix-validated-form';\nimport FormElement from './FormElement';\nimport { useTranslation } from 'react-i18next';\n\nexport type SelectProps = {\n  placeholder?: string;\n  noPlaceholder?: boolean;\n  label?: string;\n  name: string;\n} & SelectHTMLAttributes<HTMLSelectElement>;\n\nexport const Select = React.forwardRef<HTMLSelectElement, SelectProps>(\n  (\n    {\n      name,\n      label,\n      required,\n      defaultValue,\n      placeholder = '',\n      noPlaceholder = false,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const { getInputProps } = useField(name);\n    const { t } = useTranslation();\n\n    return (\n      <FormElement name={name} label={label} required={required}>\n        <select\n          ref={ref}\n          {...props}\n          defaultValue={defaultValue}\n          className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          {...getInputProps({})}\n        >\n          {!noPlaceholder && (\n            <option value=\"\">{placeholder ?? t('common.select')}</option>\n          )}\n          {children}\n        </select>\n      </FormElement>\n    );\n  },\n);\n", "import gql from 'graphql-tag';\nimport {\n  CreateAddressInput,\n  LoginMutation,\n  LogoutMutation,\n  RegisterCustomerAccountMutation,\n  RegisterCustomerAccountMutationVariables,\n  UpdateAddressInput,\n  UpdateCustomerInput,\n  VerifyCustomerAccountMutation,\n} from '~/generated/graphql';\nimport { QueryOptions, sdk, WithHeaders } from '~/graphqlWrapper';\n\nexport const login = async (\n  email: string,\n  password: string,\n  rememberMe: boolean,\n  options: QueryOptions,\n): Promise<WithHeaders<LoginMutation['login']>> => {\n  return sdk.login({ email, password, rememberMe }, options).then((res) => ({\n    ...res.login,\n    _headers: res._headers,\n  }));\n};\n\nexport const logout = async (\n  options: QueryOptions,\n): Promise<WithHeaders<LogoutMutation['logout']>> => {\n  return sdk.logout({}, options).then((res) => ({\n    ...res.logout,\n    _headers: res._headers,\n  }));\n};\n\nexport const registerCustomerAccount = async (\n  options: QueryOptions,\n  variables: RegisterCustomerAccountMutationVariables,\n): Promise<\n  WithHeaders<RegisterCustomerAccountMutation['registerCustomerAccount']>\n> => {\n  return sdk.registerCustomerAccount(variables, options).then((res) => ({\n    ...res.registerCustomerAccount,\n    _headers: res._headers,\n  }));\n};\n\nexport const verifyCustomerAccount = async (\n  options: QueryOptions,\n  token: string,\n  password?: string,\n): Promise<\n  WithHeaders<VerifyCustomerAccountMutation['verifyCustomerAccount']>\n> => {\n  return sdk\n    .verifyCustomerAccount({ token, password }, options)\n    .then((res) => ({\n      ...res.verifyCustomerAccount,\n      _headers: res._headers,\n    }));\n};\n\nexport async function updateCustomer(\n  input: UpdateCustomerInput,\n  options: QueryOptions,\n) {\n  return sdk.updateCustomer({ input }, options);\n}\n\nexport async function requestUpdateCustomerEmailAddress(\n  password: string,\n  newEmailAddress: string,\n  options: QueryOptions,\n) {\n  return sdk\n    .requestUpdateCustomerEmailAddress({ password, newEmailAddress }, options)\n    .then((res) => res.requestUpdateCustomerEmailAddress);\n}\n\nexport async function updateCustomerEmailAddress(\n  token: string,\n  options: QueryOptions,\n) {\n  return sdk\n    .updateCustomerEmailAddress({ token }, options)\n    .then((res) => res.updateCustomerEmailAddress);\n}\n\nexport async function updateCustomerAddress(\n  input: UpdateAddressInput,\n  options: QueryOptions,\n) {\n  return sdk\n    .updateCustomerAddress({ input }, options)\n    .then((res) => res.updateCustomerAddress);\n}\n\nexport async function createCustomerAddress(\n  input: CreateAddressInput,\n  options: QueryOptions,\n) {\n  return sdk\n    .createCustomerAddress({ input }, options)\n    .then((res) => res.createCustomerAddress);\n}\n\nexport async function deleteCustomerAddress(id: string, options: QueryOptions) {\n  return sdk\n    .deleteCustomerAddress({ id }, options)\n    .then((res) => res.deleteCustomerAddress);\n}\n\nexport async function updateCustomerPassword(\n  input: { currentPassword: string; newPassword: string },\n  options: QueryOptions,\n) {\n  return sdk\n    .updateCustomerPassword(input, options)\n    .then((res) => res.updateCustomerPassword);\n}\n\ngql`\n  mutation login($email: String!, $password: String!, $rememberMe: Boolean) {\n    login(username: $email, password: $password, rememberMe: $rememberMe) {\n      __typename\n      ... on CurrentUser {\n        id\n        identifier\n      }\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation logout {\n    logout {\n      success\n    }\n  }\n`;\n\ngql`\n  mutation registerCustomerAccount($input: RegisterCustomerInput!) {\n    registerCustomerAccount(input: $input) {\n      __typename\n      ... on Success {\n        success\n      }\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation verifyCustomerAccount($token: String!, $password: String) {\n    verifyCustomerAccount(token: $token, password: $password) {\n      __typename\n      ... on CurrentUser {\n        id\n        identifier\n      }\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation updateCustomer($input: UpdateCustomerInput!) {\n    updateCustomer(input: $input) {\n      __typename\n    }\n  }\n`;\n\ngql`\n  mutation requestUpdateCustomerEmailAddress(\n    $password: String!\n    $newEmailAddress: String!\n  ) {\n    requestUpdateCustomerEmailAddress(\n      password: $password\n      newEmailAddress: $newEmailAddress\n    ) {\n      __typename\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation updateCustomerEmailAddress($token: String!) {\n    updateCustomerEmailAddress(token: $token) {\n      __typename\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation updateCustomerAddress($input: UpdateAddressInput!) {\n    updateCustomerAddress(input: $input) {\n      __typename\n    }\n  }\n`;\n\ngql`\n  mutation createCustomerAddress($input: CreateAddressInput!) {\n    createCustomerAddress(input: $input) {\n      __typename\n    }\n  }\n`;\n\ngql`\n  mutation deleteCustomerAddress($id: ID!) {\n    deleteCustomerAddress(id: $id) {\n      success\n    }\n  }\n`;\n\ngql`\n  mutation updateCustomerPassword(\n    $currentPassword: String!\n    $newPassword: String!\n  ) {\n    updateCustomerPassword(\n      currentPassword: $currentPassword\n      newPassword: $newPassword\n    ) {\n      __typename\n      ... on Success {\n        success\n      }\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n", "import gql from 'graphql-tag';\nimport { QueryOptions, sdk } from '../../graphqlWrapper';\nimport { PaymentInput } from '~/generated/graphql';\n\nexport function getAvailableCountries(options: QueryOptions) {\n  return sdk.availableCountries({}, options);\n}\n\nexport function getEligibleShippingMethods(options: QueryOptions) {\n  return sdk.eligibleShippingMethods({}, options);\n}\n\nexport function getEligiblePaymentMethods(options: QueryOptions) {\n  return sdk.eligiblePaymentMethods({}, options);\n}\n\nexport function generateBraintreeClientToken(options: QueryOptions) {\n  return sdk.generateBraintreeClientToken({}, options);\n}\n\nexport function createStripePaymentIntent(options: QueryOptions) {\n  return sdk.createStripePaymentIntent({}, options);\n}\n\nexport function getNextOrderStates(options: QueryOptions) {\n  return sdk.nextOrderStates({}, options);\n}\n\nexport function addPaymentToOrder(input: PaymentInput, options: QueryOptions) {\n  return sdk.addPaymentToOrder({ input }, options);\n}\n\nexport function transitionOrderToState(state: string, options: QueryOptions) {\n  return sdk.transitionOrderToState({ state }, options);\n}\n\ngql`\n  query eligibleShippingMethods {\n    eligibleShippingMethods {\n      id\n      name\n      description\n      metadata\n      price\n      priceWithTax\n    }\n  }\n`;\n\ngql`\n  query eligiblePaymentMethods {\n    eligiblePaymentMethods {\n      id\n      code\n      name\n      description\n      eligibilityMessage\n      isEligible\n    }\n  }\n`;\n\ngql`\n  query nextOrderStates {\n    nextOrderStates\n  }\n`;\n\ngql`\n  query availableCountries {\n    availableCountries {\n      id\n      name\n      code\n    }\n  }\n`;\n\ngql`\n  mutation addPaymentToOrder($input: PaymentInput!) {\n    addPaymentToOrder(input: $input) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation transitionOrderToState($state: String!) {\n    transitionOrderToState(state: $state) {\n      ...OrderDetail\n      ... on ErrorResult {\n        errorCode\n        message\n      }\n    }\n  }\n`;\n\ngql`\n  mutation createStripePaymentIntent {\n    createStripePaymentIntent\n  }\n`;\n\ngql`\n  query generateBraintreeClientToken {\n    generateBraintreeClientToken\n  }\n`;\n", "import { useEffect, useRef } from 'react';\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\nimport { ActionFunctionArgs, redirect } from '@remix-run/server-runtime';\nimport { CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { updateCustomerEmailAddress } from '~/providers/account/account';\nimport { useTranslation } from 'react-i18next';\nimport { getFixedT } from '~/i18next.server';\nimport { LoaderFunctionArgs } from '@remix-run/router';\n\ntype LoaderReturnType = {\n  success: boolean;\n  error?: string;\n};\n\nexport async function loader({\n  request,\n}: LoaderFunctionArgs): Promise<LoaderReturnType> {\n  const url = new URL(request.url);\n  const token = url.searchParams.get('token');\n  const t = await getFixedT(request);\n\n  if (!token) {\n    return {\n      success: false,\n      error: t('tokenError'),\n    };\n  }\n\n  const result = await updateCustomerEmailAddress(token, { request });\n  if (result.__typename !== 'Success') {\n    return { success: false, error: result.message };\n  }\n  return { success: true };\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const body = await request.formData();\n  const redirectTarget = body.get('redirect') as string;\n\n  return redirect(redirectTarget);\n}\n\nexport default function VerifyEmailAddressChangeTokenPage() {\n  const [searchParams] = useSearchParams();\n  const result = useLoaderData<LoaderReturnType>();\n  const btnRef = useRef<HTMLButtonElement>(null);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (!result.success || !btnRef.current) {\n      return;\n    }\n\n    const submitBtn = btnRef.current;\n    setTimeout(() => submitBtn.click(), 5000);\n  }, [result]);\n\n  return (\n    <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {result.success ? (\n            <div className=\"rounded-md bg-green-100 p-4\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0\">\n                  <CheckCircleIcon\n                    className=\"h-5 w-5 text-green-600\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-green-700\">\n                    {t('account.verifyEmailMessage')}\n                  </p>\n                </div>\n                <form method=\"post\">\n                  <input\n                    type=\"hidden\"\n                    name=\"redirect\"\n                    value={searchParams.get('redirectTo') || '/'}\n                  />\n                  <button\n                    ref={btnRef}\n                    type=\"submit\"\n                    style={{ display: 'none ' }}\n                  />\n                </form>\n              </div>\n            </div>\n          ) : (\n            <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <XCircleIcon\n                    className=\"h-5 w-5 text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-red-700\">{result.error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import {\n  useActionData,\n  useLoaderData,\n  useNavigate,\n  useNavigation,\n  useSubmit,\n} from '@remix-run/react';\nimport { DataFunctionArgs, json } from '@remix-run/server-runtime';\nimport { useRef, useEffect } from 'react';\nimport { validationError } from 'remix-validated-form';\nimport { Button } from '~/components/Button';\nimport Modal from '~/components/modal/Modal';\nimport { HighlightedButton } from '~/components/HighlightedButton';\nimport useToggleState from '~/utils/use-toggle-state';\nimport CustomerAddressForm, {\n  validator,\n} from '~/components/account/CustomerAddressForm';\nimport { createCustomerAddress } from '~/providers/account/account';\nimport { getAvailableCountries } from '~/providers/checkout/checkout';\nimport { useTranslation } from 'react-i18next';\n\nexport async function loader({ request, params }: DataFunctionArgs) {\n  const { availableCountries } = await getAvailableCountries({ request });\n\n  return json({ availableCountries });\n}\n\nexport async function action({ request, params }: DataFunctionArgs) {\n  const body = await request.formData();\n\n  const result = await validator.validate(body);\n  if (result.error) {\n    return validationError(result.error);\n  }\n\n  const { data } = result;\n  await createCustomerAddress(\n    {\n      city: data.city,\n      company: data.company,\n      countryCode: data.countryCode,\n      fullName: data.fullName,\n      phoneNumber: data.phone,\n      postalCode: data.postalCode,\n      province: data.province,\n      streetLine1: data.streetLine1,\n      streetLine2: data.streetLine2,\n    },\n    { request },\n  );\n\n  return json({\n    saved: true,\n  });\n}\n\nexport default function NewAddress() {\n  const { availableCountries } = useLoaderData<typeof loader>();\n  const navigation = useNavigation();\n  const actionData = useActionData<typeof action>();\n  const navigate = useNavigate();\n  const { state, close } = useToggleState(true);\n  const { t } = useTranslation();\n\n  const formRef = useRef<HTMLFormElement>(null);\n  const submit = useSubmit();\n\n  useEffect(() => {\n    if (actionData?.saved) {\n      close();\n    }\n  }, [actionData]);\n\n  const submitForm = () => {\n    submit(formRef.current);\n  };\n\n  const afterClose = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div>\n      <Modal isOpen={state} close={close} afterClose={afterClose}>\n        <Modal.Title>{t('address.new')}</Modal.Title>\n        <Modal.Body>\n          <CustomerAddressForm\n            availableCountries={availableCountries}\n            formRef={formRef}\n            submit={submitForm}\n          ></CustomerAddressForm>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"button\" onClick={close}>\n            {t('common.cancel')}\n          </Button>\n          <HighlightedButton\n            isSubmitting={navigation.state === 'submitting'}\n            type=\"submit\"\n            onClick={submitForm}\n          >\n            {t('common.save')}\n          </HighlightedButton>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n", "import { Outlet, useLoaderData } from '@remix-run/react';\nimport { ActionFunctionArgs, json } from '@remix-run/server-runtime';\nimport AddAddressCard from '~/components/account/AddAddressCard';\nimport EditAddressCard from '~/components/account/EditAddressCard';\nimport { Address, ErrorCode, ErrorResult } from '~/generated/graphql';\nimport {\n  deleteCustomerAddress,\n  updateCustomerAddress,\n} from '~/providers/account/account';\nimport { getActiveCustomerAddresses } from '~/providers/customer/customer';\nimport { getFixedT } from '~/i18next.server';\nimport { LoaderFunctionArgs } from '@remix-run/router';\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const res = await getActiveCustomerAddresses({ request });\n  const activeCustomerAddresses = res.activeCustomer;\n  return json({ activeCustomerAddresses });\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const id = formData.get('id') as string | null;\n  const _action = formData.get('_action');\n  const t = await getFixedT(request);\n\n  // Verify that id is set\n  if (!id || id.length === 0) {\n    return json<ErrorResult>(\n      {\n        errorCode: ErrorCode.IdentifierChangeTokenInvalidError, // TODO: I dont think this error is 100% appropriate - decide later\n        message: t('address.idError'),\n      },\n      {\n        status: 400, // Bad request\n      },\n    );\n  }\n\n  if (_action === 'setDefaultShipping') {\n    updateCustomerAddress({ id, defaultShippingAddress: true }, { request });\n    return null;\n  }\n\n  if (_action === 'setDefaultBilling') {\n    updateCustomerAddress({ id, defaultBillingAddress: true }, { request });\n    return null;\n  }\n\n  if (_action === 'deleteAddress') {\n    const { success } = await deleteCustomerAddress(id, { request });\n    return json(null, { status: success ? 200 : 400 });\n  }\n\n  return json<ErrorResult>(\n    {\n      message: t('common.unknowError'),\n      errorCode: ErrorCode.UnknownError,\n    },\n    {\n      status: 400,\n    },\n  );\n}\n\nexport default function AccountAddresses() {\n  const { activeCustomerAddresses } = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      <Outlet></Outlet>\n      <div className=\"w-full\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 flex-1 mt-4\">\n          <AddAddressCard />\n          {activeCustomerAddresses?.addresses!.map((address) => {\n            return (\n              <EditAddressCard address={address as Address} key={address.id} />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { PlusIcon } from '@heroicons/react/24/outline';\nimport { Link } from '@remix-run/react';\nimport { useTranslation } from 'react-i18next';\n\nexport default function AddAddressCard() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Link\n        preventScrollReset\n        className=\"border border-gray-200 p-5 min-h-[220px] h-full w-full flex flex-col justify-between\"\n        to=\"/account/addresses/new\"\n      >\n        <span className=\"text-base-semi\">{t('address.new')}</span>\n        <PlusIcon className=\"w-6 h-6\"></PlusIcon>\n      </Link>\n    </>\n  );\n}\n", "import {\n  ArrowPathIcon,\n  CreditCardIcon,\n  PencilIcon,\n  TrashIcon,\n  TruckIcon,\n} from '@heroicons/react/24/outline';\nimport { Link, useFetcher } from '@remix-run/react';\nimport clsx from 'clsx';\nimport { useState } from 'react';\nimport { Address, ErrorResult } from '~/generated/graphql';\nimport { Button } from '../Button';\nimport { ErrorMessage } from '../ErrorMessage';\nimport { HighlightedButton } from '../HighlightedButton';\nimport Modal from '../modal/Modal';\nimport { useTranslation } from 'react-i18next';\n\ntype EditAddressProps = {\n  address: Address;\n  isActive?: boolean;\n};\n\nexport default function EditAddressCard({\n  address,\n  isActive = false,\n}: EditAddressProps) {\n  const setShipping = useFetcher();\n  const setBilling = useFetcher();\n  const deleteAddress = useFetcher<ErrorResult>();\n  const [isDeleteModalVisible, setDeleteModalVisible] =\n    useState<boolean>(false);\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {/* Note: Only allow closing when it isnt loading to prevent accidental closing via outside-click */}\n      <Modal\n        isOpen={isDeleteModalVisible}\n        close={() =>\n          setDeleteModalVisible(deleteAddress.state === 'idle' ? false : true)\n        }\n      >\n        <deleteAddress.Form method=\"post\" preventScrollReset>\n          <Modal.Title>{t('address.deleteModal.title')}</Modal.Title>\n          <Modal.Body>\n            <div className=\"space-y-4 my-4\">\n              {t('address.deleteModal.confirmation')}\n              <input type=\"hidden\" name=\"id\" value={address.id} />\n              {deleteAddress.data && (\n                <ErrorMessage\n                  heading={t('address.deleteModal.error')}\n                  message={\n                    deleteAddress.data?.message ?? t('common.defaultError')\n                  }\n                />\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              type=\"button\"\n              onClick={() => setDeleteModalVisible(false)}\n              disabled={deleteAddress.state !== 'idle'}\n            >\n              {t('common.cancel')}\n            </Button>\n            <HighlightedButton\n              type=\"submit\"\n              name=\"_action\"\n              value=\"deleteAddress\"\n              disabled={deleteAddress.state !== 'idle'}\n              isSubmitting={deleteAddress.state !== 'idle'}\n            >\n              {t('common.yes')}\n            </HighlightedButton>\n          </Modal.Footer>\n        </deleteAddress.Form>\n      </Modal>\n      <div\n        className={clsx(\n          'border border-gray-200 p-5 min-h-[220px] h-full w-full flex flex-col justify-between gap-8 transition-colors',\n          {\n            'border-gray-900': isActive,\n          },\n        )}\n      >\n        <div className=\"flex justify-between\">\n          {/* Customer Data Section */}\n          <div className=\"flex flex-col\">\n            <span className=\"text-left text-base-semi\">{address.fullName}</span>\n            {address.company && (\n              <span className=\"text-small-regular text-gray-700\">\n                {address.company}\n              </span>\n            )}\n            <div className=\"flex flex-col text-left text-base-regular mt-2\">\n              <span>\n                {address.streetLine1}\n                {address.streetLine2 && <span>, {address.streetLine2}</span>}\n              </span>\n              <span>\n                {address.postalCode}, {address.city}\n              </span>\n              <span>\n                {address.province && `${address.province}, `}\n                {address.country?.code?.toUpperCase()}\n              </span>\n            </div>\n          </div>\n          {/* Default Shipping/Billing Section */}\n          {(address.defaultShippingAddress ||\n            address.defaultBillingAddress) && (\n            <div className=\"text-end text-gray-500 uppercase tracking-wider\">\n              <span className=\"block text-sm font-medium\">\n                {t('common.default')}\n              </span>\n              <span className=\"block text-xs mt-1\">\n                {address.defaultShippingAddress && t('common.shipping')}\n                {address.defaultShippingAddress &&\n                  address.defaultBillingAddress && (\n                    <>\n                      <br />\n                      &amp;&nbsp;\n                    </>\n                  )}\n                {address.defaultBillingAddress && t('common.billing')}\n              </span>\n            </div>\n          )}\n        </div>\n        {/* CRUD Actions */}\n        <div className=\"flex flex-col md:flex-row items-start gap-4\">\n          <div className=\"flex items-center gap-4\">\n            <Link\n              role=\"button\"\n              preventScrollReset\n              className=\"text-gray-700 flex items-center gap-x-2\"\n              to={`/account/addresses/${address.id}`}\n            >\n              <PencilIcon className=\"w-4 h-4\"></PencilIcon>\n              {t('common.edit')}\n            </Link>\n            <button\n              type=\"button\"\n              title=\"Delete this address\"\n              className=\"text-gray-700 flex items-center gap-x-2\"\n              disabled={deleteAddress.state !== 'idle'}\n              onClick={() => setDeleteModalVisible(true)}\n            >\n              {deleteAddress.state === 'idle' ? (\n                <TrashIcon className=\"w-4 h-4\"></TrashIcon>\n              ) : (\n                <ArrowPathIcon className=\"w-4 h-4 animate-spin\"></ArrowPathIcon>\n              )}\n              {t('common.remove')}\n            </button>\n          </div>\n          {(!address.defaultShippingAddress ||\n            !address.defaultBillingAddress) && (\n            <div>\n              <span className=\"text-gray-500 flex gap-4\">\n                {/* Default shipping */}\n                {!address.defaultShippingAddress && (\n                  <setShipping.Form method=\"post\">\n                    <input type=\"hidden\" name=\"id\" value={address.id} />\n                    <button\n                      name=\"_action\"\n                      value=\"setDefaultShipping\"\n                      type=\"submit\"\n                      title=\"Set as default shipping address\"\n                      className=\"text-gray-700 flex items-center gap-2\"\n                      disabled={setShipping.state !== 'idle'}\n                    >\n                      {setShipping.state === 'idle' ? (\n                        <TruckIcon className=\"w-4 h-4\"></TruckIcon>\n                      ) : (\n                        <ArrowPathIcon className=\"w-4 h-4 animate-spin\"></ArrowPathIcon>\n                      )}\n                      {t('common.shipping')}\n                    </button>\n                  </setShipping.Form>\n                )}\n\n                {!address.defaultBillingAddress && (\n                  <setBilling.Form method=\"post\">\n                    <input type=\"hidden\" name=\"id\" value={address.id} />\n                    <button\n                      name=\"_action\"\n                      value=\"setDefaultBilling\"\n                      type=\"submit\"\n                      title=\"Set as default billing address\"\n                      className=\"text-gray-700 flex items-center gap-2\"\n                      disabled={setBilling.state !== 'idle'}\n                    >\n                      {setBilling.state === 'idle' ? (\n                        <CreditCardIcon className=\"w-4 h-4\"></CreditCardIcon>\n                      ) : (\n                        <ArrowPathIcon className=\"w-4 h-4 animate-spin\"></ArrowPathIcon>\n                      )}\n                      {t('common.billing')}\n                    </button>\n                  </setBilling.Form>\n                )}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { XCircleIcon } from '@heroicons/react/24/solid';\n\nexport function ErrorMessage({\n  heading,\n  message,\n}: {\n  heading: string;\n  message: string;\n}) {\n  return (\n    <div className=\"rounded-md bg-red-50 p-4 max-w-lg\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800\">{heading}</h3>\n          <p className=\"text-sm text-red-700 mt-2\">{message}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { MetaFunction, useLoaderData, useSubmit } from '@remix-run/react';\nimport { DataFunctionArgs } from '@remix-run/server-runtime';\nimport { withZod } from '@remix-validated-form/with-zod';\nimport { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ValidatedForm } from 'remix-validated-form';\nimport { Breadcrumbs } from '~/components/Breadcrumbs';\nimport { CollectionCard } from '~/components/collections/CollectionCard';\nimport { FacetFilterTracker } from '~/components/facet-filter/facet-filter-tracker';\nimport { FiltersButton } from '~/components/FiltersButton';\nimport { FilterableProductGrid } from '~/components/products/FilterableProductGrid';\nimport { APP_META_TITLE } from '~/constants';\nimport { filteredSearchLoaderFromPagination } from '~/utils/filtered-search-loader';\nimport { sdk } from '../graphqlWrapper';\n\nexport const meta: MetaFunction = ({ data }) => {\n  return [\n    {\n      title: data?.collection\n        ? `${data.collection?.name} - ${APP_META_TITLE}`\n        : APP_META_TITLE,\n    },\n  ];\n};\n\nconst paginationLimitMinimumDefault = 25;\nconst allowedPaginationLimits = new Set<number>([\n  paginationLimitMinimumDefault,\n  50,\n  100,\n]);\nconst { validator, filteredSearchLoader } = filteredSearchLoaderFromPagination(\n  allowedPaginationLimits,\n  paginationLimitMinimumDefault,\n);\n\nexport async function loader({ params, request, context }: DataFunctionArgs) {\n  const {\n    result,\n    resultWithoutFacetValueFilters,\n    facetValueIds,\n    appliedPaginationLimit,\n    appliedPaginationPage,\n    term,\n  } = await filteredSearchLoader({\n    params,\n    request,\n    context,\n  });\n  const collection = (await sdk.collection({ slug: params.slug })).collection;\n  if (!collection?.id || !collection?.name) {\n    throw new Response('Not Found', {\n      status: 404,\n    });\n  }\n\n  return {\n    term,\n    collection,\n    result,\n    resultWithoutFacetValueFilters,\n    facetValueIds,\n    appliedPaginationLimit,\n    appliedPaginationPage,\n  };\n}\n\nexport default function CollectionSlug() {\n  const loaderData = useLoaderData<typeof loader>();\n  const { collection, result, resultWithoutFacetValueFilters, facetValueIds } =\n    loaderData;\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false);\n  const facetValuesTracker = useRef(new FacetFilterTracker());\n  facetValuesTracker.current.update(\n    result,\n    resultWithoutFacetValueFilters,\n    facetValueIds,\n  );\n  const submit = useSubmit();\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"max-w-6xl mx-auto px-4\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          {collection.name}\n        </h2>\n\n        <FiltersButton\n          filterCount={facetValueIds.length}\n          onClick={() => setMobileFiltersOpen(true)}\n        />\n      </div>\n\n      <Breadcrumbs items={collection.breadcrumbs}></Breadcrumbs>\n      {collection.children?.length ? (\n        <div className=\"max-w-2xl mx-auto py-16 sm:py-16 lg:max-w-none border-b mb-16\">\n          <h2 className=\"text-2xl font-light text-gray-900\">\n            {t('product.collections')}\n          </h2>\n          <div className=\"mt-6 grid max-w-xs sm:max-w-none mx-auto sm:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-4\">\n            {collection.children.map((child) => (\n              <CollectionCard\n                key={child.id}\n                collection={child}\n              ></CollectionCard>\n            ))}\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n\n      <ValidatedForm\n        validator={withZod(validator)}\n        method=\"get\"\n        onChange={(e) => submit(e.currentTarget, { preventScrollReset: true })}\n      >\n        <FilterableProductGrid\n          allowedPaginationLimits={allowedPaginationLimits}\n          mobileFiltersOpen={mobileFiltersOpen}\n          setMobileFiltersOpen={setMobileFiltersOpen}\n          {...loaderData}\n        />\n      </ValidatedForm>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"max-w-6xl mx-auto px-4\">\n      <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n        {t('product.collectionNotFound')}\n      </h2>\n      <div className=\"mt-6 grid sm:grid-cols-5 gap-x-4\">\n        <div className=\"space-y-6\">\n          <div className=\"h-2 bg-slate-200 rounded col-span-1\"></div>\n          <div className=\"h-2 bg-slate-200 rounded col-span-1\"></div>\n          <div className=\"h-2 bg-slate-200 rounded col-span-1\"></div>\n        </div>\n        <div className=\"sm:col-span-5 lg:col-span-4\">\n          <div className=\"grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8\">\n            <div className=\"h-64 bg-slate-200 rounded\"></div>\n            <div className=\"h-64 bg-slate-200 rounded\"></div>\n            <div className=\"h-64 bg-slate-200 rounded\"></div>\n            <div className=\"h-64 bg-slate-200 rounded\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { HomeIcon } from '@heroicons/react/24/solid';\nimport { Link } from '@remix-run/react';\nimport { useTranslation } from 'react-i18next';\n\nexport function Breadcrumbs({\n  items,\n}: {\n  items: { name: string; slug: string; id: string }[];\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <nav className=\"flex\" aria-label=\"Breadcrumb\">\n      <ol role=\"list\" className=\"flex items-center space-x-1 md:space-x-4\">\n        <li>\n          <div>\n            <Link to=\"/\" className=\"text-gray-400 hover:text-gray-500\">\n              <HomeIcon className=\"flex-shrink-0 h-5 w-5\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">{t('home')}</span>\n            </Link>\n          </div>\n        </li>\n        {items\n          .filter((item) => item.name !== '__root_collection__')\n          .map((item, index) => (\n            <li key={item.name}>\n              <div className=\"flex items-center\">\n                <svg\n                  className=\"flex-shrink-0 h-5 w-5 text-gray-300\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  aria-hidden=\"true\"\n                >\n                  <path d=\"M5.555 17.776l8-16 .894.448-8 16-.894-.448z\" />\n                </svg>\n                <Link\n                  to={'/collections/' + item.slug}\n                  className=\"ml-2 md:ml-4 text-xs md:text-sm font-medium text-gray-500 hover:text-gray-700\"\n                >\n                  {item.name}\n                </Link>\n              </div>\n            </li>\n          ))}\n      </ol>\n    </nav>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport { CollectionsQuery } from '~/generated/graphql';\n\nexport function CollectionCard({\n  collection,\n}: {\n  collection: CollectionsQuery['collections']['items'][number];\n}) {\n  return (\n    <Link\n      to={'/collections/' + collection.slug}\n      prefetch=\"intent\"\n      key={collection.id}\n      className=\"max-w-[300px] relative rounded-lg overflow-hidden hover:opacity-75 xl:w-auto\"\n    >\n      <span aria-hidden=\"true\" className=\"\">\n        <div className=\"w-full h-full object-center object-cover\">\n          <img src={collection.featuredAsset?.preview + '?w=300&h=300'} />\n        </div>\n      </span>\n      <span\n        aria-hidden=\"true\"\n        className=\"absolute w-full bottom-x-0 bottom-0 h-2/3 bg-gradient-to-t from-gray-800 opacity-50\"\n      />\n      <span className=\"absolute w-full bottom-2 mt-auto text-center text-xl font-bold text-white\">\n        {collection.name}\n      </span>\n    </Link>\n  );\n}\n", "import { SearchFacetValuesQuery, SearchQuery } from '~/generated/graphql';\n\nexport interface FacetWithValues {\n  id: string;\n  name: string;\n  values: Array<{\n    id: string;\n    name: string;\n    selected: boolean;\n  }>;\n}\n\nexport class FacetFilterTracker {\n  private _facetsWithValues: FacetWithValues[] = [];\n\n  get facetsWithValues() {\n    return this._facetsWithValues;\n  }\n\n  update(\n    searchResult: SearchQuery['search'],\n    resultWithoutFacetValueFilters: SearchFacetValuesQuery['search'],\n    activeFacetValueIds: string[],\n  ) {\n    this._facetsWithValues = this.groupFacetValues(\n      resultWithoutFacetValueFilters,\n      searchResult.facetValues,\n      activeFacetValueIds,\n    );\n  }\n\n  private groupFacetValues(\n    withoutFilters: SearchFacetValuesQuery['search'],\n    current: SearchQuery['search']['facetValues'] | null,\n    activeFacetValueIds: string[],\n  ): FacetWithValues[] {\n    if (!current) {\n      return [];\n    }\n    const facetMap = new Map<string, FacetWithValues>();\n    for (const {\n      facetValue: { id, name, facet },\n      count,\n    } of withoutFilters.facetValues) {\n      if (count === withoutFilters.totalItems) {\n        continue;\n      }\n      const facetFromMap = facetMap.get(facet.id);\n      const selected = activeFacetValueIds.includes(id);\n      if (facetFromMap) {\n        facetFromMap.values.push({ id, name, selected });\n      } else {\n        facetMap.set(facet.id, {\n          id: facet.id,\n          name: facet.name,\n          values: [{ id, name, selected }],\n        });\n      }\n    }\n    return Array.from(facetMap.values());\n  }\n}\n", "import { FunnelIcon } from '@heroicons/react/24/solid';\nimport { useTranslation } from 'react-i18next';\n\nexport function FiltersButton({\n  filterCount,\n  onClick,\n}: {\n  filterCount: number;\n  onClick: () => void;\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"flex space-x-2 items-center border rounded p-2 ml-4 sm:ml-6 text-gray-400 hover:text-gray-500 lg:hidden\"\n      onClick={onClick}\n    >\n      {!!filterCount ? (\n        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-200 text-primary-800\">\n          {filterCount}\n        </span>\n      ) : (\n        ''\n      )}\n      <span>{t('common.filters')}</span>\n      <FunnelIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n    </button>\n  );\n}\n", "import { Fragment } from 'react';\nimport { Dialog, Disclosure, Transition } from '@headlessui/react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { MinusSmallIcon, PlusSmallIcon } from '@heroicons/react/24/solid';\nimport { useSearchParams } from '@remix-run/react';\nimport { FacetFilterTracker } from '~/components/facet-filter/facet-filter-tracker';\nimport { useTranslation } from 'react-i18next';\n\nexport default function FacetFilterControls({\n  facetFilterTracker,\n  mobileFiltersOpen,\n  setMobileFiltersOpen,\n}: {\n  facetFilterTracker: FacetFilterTracker;\n  mobileFiltersOpen: boolean;\n  setMobileFiltersOpen: (value: boolean) => void;\n}) {\n  const [searchParams] = useSearchParams();\n  const q = searchParams.getAll('q');\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {/* Mobile filter dialog */}\n      <Transition.Root show={mobileFiltersOpen} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"relative z-40 lg:hidden\"\n          onClose={setMobileFiltersOpen}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"transition-opacity ease-linear duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"transition-opacity ease-linear duration-300\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 flex z-40\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"translate-x-full\"\n            >\n              <Dialog.Panel className=\"ml-auto relative max-w-xs w-full h-full bg-white shadow-xl py-4 pb-12 flex flex-col overflow-y-auto\">\n                <div className=\"px-4 flex items-center justify-between\">\n                  <h2 className=\"text-lg font-medium text-gray-900\">\n                    {t('common.filters')}\n                  </h2>\n                  <button\n                    type=\"button\"\n                    className=\"-mr-2 w-10 h-10 bg-white p-2 rounded-md flex items-center justify-center text-gray-400\"\n                    onClick={() => setMobileFiltersOpen(false)}\n                  >\n                    <span className=\"sr-only\">{t('common.closeMenu')}</span>\n                    <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n                <div className=\"mt-4 border-t border-gray-200\">\n                  <input type=\"hidden\" name=\"q\" value={q} />\n                  {facetFilterTracker.facetsWithValues.map((facet) => (\n                    <Disclosure\n                      as=\"div\"\n                      key={facet.id}\n                      defaultOpen={true}\n                      className=\"border-t border-gray-200 px-4 py-6\"\n                    >\n                      {({ open }) => (\n                        <>\n                          <h3 className=\"-mx-2 -my-3 flow-root\">\n                            <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                              <span className=\"font-medium text-gray-900 uppercase\">\n                                {facet.name}\n                              </span>\n                              <span className=\"ml-6 flex items-center\">\n                                {open ? (\n                                  <MinusSmallIcon\n                                    className=\"h-5 w-5\"\n                                    aria-hidden=\"true\"\n                                  />\n                                ) : (\n                                  <PlusSmallIcon\n                                    className=\"h-5 w-5\"\n                                    aria-hidden=\"true\"\n                                  />\n                                )}\n                              </span>\n                            </Disclosure.Button>\n                          </h3>\n                          <Disclosure.Panel className=\"pt-6\">\n                            <div className=\"space-y-6\">\n                              {facet.values.map((value, optionIdx) => (\n                                <div\n                                  key={value.id}\n                                  className=\"flex items-center\"\n                                >\n                                  <input\n                                    id={`filter-mobile-${facet.id}-${optionIdx}`}\n                                    defaultValue={value.id}\n                                    type=\"checkbox\"\n                                    checked={value.selected}\n                                    onChange={(ev) => {\n                                      // FIXME: ugly workaround because the dialog is in a portal not within the intended form\n                                      (\n                                        document.getElementById(\n                                          `filter-${facet.id}-${optionIdx}`,\n                                        ) as HTMLInputElement\n                                      ).checked = ev.target.checked;\n                                    }}\n                                    className=\"h-4 w-4 border-gray-300 rounded text-primary-600 focus:ring-primary-500\"\n                                  />\n                                  <label\n                                    htmlFor={`filter-mobile-${facet.id}-${optionIdx}`}\n                                    className=\"ml-3 min-w-0 flex-1 text-gray-500\"\n                                  >\n                                    {value.name}\n                                  </label>\n                                </div>\n                              ))}\n                            </div>\n                          </Disclosure.Panel>\n                        </>\n                      )}\n                    </Disclosure>\n                  ))}\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition.Root>\n\n      <div className=\"hidden lg:block\">\n        <input type=\"hidden\" name=\"q\" value={q} />\n        {facetFilterTracker.facetsWithValues.map((facet) => (\n          <Disclosure\n            as=\"div\"\n            key={facet.id}\n            defaultOpen={true}\n            className=\"border-b border-gray-200 py-6\"\n          >\n            {({ open }) => (\n              <>\n                <h3 className=\"-my-3 flow-root\">\n                  <Disclosure.Button className=\"py-3 bg-white w-full flex items-center justify-between text-sm text-gray-400 hover:text-gray-500\">\n                    <span className=\"font-medium text-gray-900 uppercase\">\n                      {facet.name}\n                    </span>\n                    <span className=\"ml-6 flex items-center\">\n                      {open ? (\n                        <MinusSmallIcon\n                          className=\"h-5 w-5\"\n                          aria-hidden=\"true\"\n                        />\n                      ) : (\n                        <PlusSmallIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                      )}\n                    </span>\n                  </Disclosure.Button>\n                </h3>\n                <Disclosure.Panel className=\"pt-6\">\n                  <div className=\"space-y-4\">\n                    {facet.values.map((value, optionIdx) => (\n                      <div key={value.id} className=\"flex items-center\">\n                        <input\n                          id={`filter-${facet.id}-${optionIdx}`}\n                          name={`fvid`}\n                          defaultValue={value.id}\n                          type=\"checkbox\"\n                          checked={value.selected}\n                          onChange={() => {}}\n                          className=\"h-4 w-4 border-gray-300 rounded text-primary-600 focus:ring-primary-500\"\n                        />\n                        <label\n                          htmlFor={`filter-${facet.id}-${optionIdx}`}\n                          className=\"ml-3 text-sm text-gray-600\"\n                        >\n                          {value.name}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </Disclosure.Panel>\n              </>\n            )}\n          </Disclosure>\n        ))}\n      </div>\n    </>\n  );\n}\n", "import { SearchQuery } from '~/generated/graphql';\nimport { Link } from '@remix-run/react';\nimport { Price } from './Price';\n\nexport type ProductCardProps = SearchQuery['search']['items'][number];\nexport function ProductCard({\n  productAsset,\n  productName,\n  slug,\n  priceWithTax,\n  currencyCode,\n}: ProductCardProps) {\n  return (\n    <Link className=\"flex flex-col\" prefetch=\"intent\" to={`/products/${slug}`}>\n      <img\n        className=\"rounded-xl flex-grow object-cover aspect-[7/8]\"\n        alt=\"\"\n        src={productAsset?.preview + '?w=300&h=400'}\n      />\n      <div className=\"h-2\" />\n      <div className=\"text-sm text-gray-700\">{productName}</div>\n      <div className=\"text-sm font-medium text-gray-900\">\n        <Price priceWithTax={priceWithTax} currencyCode={currencyCode} />\n      </div>\n    </Link>\n  );\n}\n", "import { z } from 'zod';\n\nexport function paginationValidationSchema(\n  allowedPaginationLimits: Set<number>,\n) {\n  const paginationLimitsAsArray = Array.from(allowedPaginationLimits);\n  const paginationLimitDerivedMin = Math.min(...paginationLimitsAsArray);\n  const paginationLimitDerivedMax = Math.max(...paginationLimitsAsArray);\n\n  const paginationLimitSchema = z\n    .number({\n      required_error: 'Limit is required',\n      invalid_type_error: 'Limit must be a number',\n      coerce: true,\n    })\n    .int()\n    .min(paginationLimitDerivedMin, {\n      message: `Limit must be at least ${paginationLimitDerivedMin}`,\n    })\n    .max(paginationLimitDerivedMax, {\n      message: `Maximum limit is ${paginationLimitDerivedMax}`,\n    })\n    .refine((x) => allowedPaginationLimits.has(x));\n\n  const paginationPageSchema = z\n    .number({\n      required_error: 'Page is required',\n      invalid_type_error: 'Page must be a number',\n      coerce: true,\n    })\n    .int()\n    .min(1, { message: 'Page must be at least 1' })\n    .max(1000, { message: \"Page can't be over 1000\" });\n\n  return z.object({\n    limit: paginationLimitSchema,\n    page: paginationPageSchema,\n  });\n}\n\nexport function translatePaginationFrom(\n  appliedPaginationPage: number,\n  appliedPaginationLimit: number,\n) {\n  return (appliedPaginationPage - 1) * appliedPaginationLimit + 1;\n}\n\nexport function translatePaginationTo(\n  appliedPaginationPage: number,\n  appliedPaginationLimit: number,\n  totalItems: number,\n) {\n  return (\n    translatePaginationFrom(appliedPaginationPage, appliedPaginationLimit) +\n    totalItems -\n    1\n  );\n}\n", "import { ArrowPathIcon } from '@heroicons/react/24/solid';\nimport { Select } from '~/components/Select';\nimport { Button } from '~/components/Button';\nimport { ComponentProps } from 'react';\nimport { useNavigation } from '@remix-run/react';\nimport clsx from 'clsx';\nimport { useTranslation } from 'react-i18next';\n\nexport type PaginationProps = {\n  appliedPaginationLimit: number;\n  allowedPaginationLimits: Set<number>;\n  totalItems: number;\n  appliedPaginationPage: number;\n};\n\nexport function Pagination({\n  appliedPaginationLimit,\n  allowedPaginationLimits,\n  totalItems,\n  appliedPaginationPage,\n  ...props\n}: PaginationProps & ComponentProps<'div'>) {\n  const navigation = useNavigation();\n  const { t } = useTranslation();\n\n  return (\n    <div\n      {...props}\n      className={clsx(\n        'flex flex-col md:flex-row justify-center items-end md:items-center gap-4 lg:gap-6',\n        props.className,\n      )}\n    >\n      <span className=\"flex gap-4 items-center\">\n        {navigation.state !== 'idle' && (\n          <ArrowPathIcon className=\"animate-spin h-6 w-6 text-gray-500\" />\n        )}\n        <Select\n          name=\"limit\"\n          required\n          noPlaceholder\n          defaultValue={appliedPaginationLimit}\n        >\n          {Array.from(allowedPaginationLimits).map((x) => (\n            <option key={x} value={x}>\n              {x} {t('common.perPage')}\n            </option>\n          ))}\n        </Select>\n      </span>\n\n      <div className=\"flex\" role=\"group\">\n        <Button\n          name=\"page\"\n          type=\"submit\"\n          value={appliedPaginationPage - 1}\n          disabled={appliedPaginationPage <= 1 || navigation.state !== 'idle'}\n          className=\"!text-sm rounded-r-none border-r-0\"\n        >\n          {t('common.prev')}\n        </Button>\n        <Button\n          name=\"page\"\n          type=\"submit\"\n          value={appliedPaginationPage + 1}\n          disabled={\n            appliedPaginationPage * appliedPaginationLimit >= totalItems ||\n            navigation.state !== 'idle'\n          }\n          className=\"!text-sm rounded-l-none\"\n        >\n          {t('common.next')}\n        </Button>\n      </div>\n    </div>\n  );\n}\n", "import { FacetFilterTracker } from '~/components/facet-filter/facet-filter-tracker';\nimport { ComponentProps } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport function NoResultsHint({\n  facetFilterTracker,\n  ...props\n}: { facetFilterTracker?: FacetFilterTracker } & ComponentProps<'div'>) {\n  const { t } = useTranslation();\n\n  return (\n    <div {...props}>\n      <h2 className=\"text-2xl sm:text-4xl font-light tracking-tight text-gray-900\">\n        {t('product.noResults')}\n      </h2>\n      {facetFilterTracker?.facetsWithValues.some((f) =>\n        f.values.some((v) => v.selected),\n      ) && (\n        <h3 className=\"text-lg sm:text-2xl font-light tracking-tight text-gray-900\">\n          {t('product.filterTip')}\n        </h3>\n      )}\n    </div>\n  );\n}\n", "import FacetFilterControls from '~/components/facet-filter/FacetFilterControls';\nimport { ProductCard } from '~/components/products/ProductCard';\nimport {\n  translatePaginationFrom,\n  translatePaginationTo,\n} from '~/utils/pagination';\nimport { Pagination } from '~/components/Pagination';\nimport { NoResultsHint } from '~/components/products/NoResultsHint';\nimport { useRef } from 'react';\nimport { FacetFilterTracker } from '~/components/facet-filter/facet-filter-tracker';\nimport { filteredSearchLoaderFromPagination } from '~/utils/filtered-search-loader';\nimport { useTranslation } from 'react-i18next';\n\nexport function FilterableProductGrid({\n  result,\n  resultWithoutFacetValueFilters,\n  facetValueIds,\n  appliedPaginationPage,\n  appliedPaginationLimit,\n  allowedPaginationLimits,\n  mobileFiltersOpen,\n  setMobileFiltersOpen,\n}: Awaited<\n  ReturnType<\n    ReturnType<\n      typeof filteredSearchLoaderFromPagination\n    >['filteredSearchLoader']\n  >\n> & {\n  allowedPaginationLimits: Set<number>;\n  mobileFiltersOpen: boolean;\n  setMobileFiltersOpen: (arg0: boolean) => void;\n}) {\n  const { t } = useTranslation();\n  const facetValuesTracker = useRef(new FacetFilterTracker());\n  facetValuesTracker.current.update(\n    result,\n    resultWithoutFacetValueFilters,\n    facetValueIds,\n  );\n\n  return (\n    <div className=\"mt-6 grid sm:grid-cols-5 gap-x-4\">\n      <FacetFilterControls\n        facetFilterTracker={facetValuesTracker.current}\n        mobileFiltersOpen={mobileFiltersOpen}\n        setMobileFiltersOpen={setMobileFiltersOpen}\n      />\n      {result.items.length > 0 ? (\n        <div className=\"sm:col-span-5 lg:col-span-4 space-y-6\">\n          <div className=\"grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8\">\n            {result.items.map((item) => (\n              <ProductCard key={item.productId} {...item} />\n            ))}\n          </div>\n\n          <div className=\"flex flex-row justify-between items-center gap-4\">\n            <span className=\"self-start text-gray-500 text-sm mt-2\">\n              {t('product.showing')}{' '}\n              {translatePaginationFrom(\n                appliedPaginationPage,\n                appliedPaginationLimit,\n              )}{' '}\n              {t('product.to')}{' '}\n              {translatePaginationTo(\n                appliedPaginationPage,\n                appliedPaginationLimit,\n                result.items.length,\n              )}\n            </span>\n            <Pagination\n              appliedPaginationLimit={appliedPaginationLimit}\n              allowedPaginationLimits={allowedPaginationLimits}\n              totalItems={result.totalItems}\n              appliedPaginationPage={appliedPaginationPage}\n            />\n          </div>\n        </div>\n      ) : (\n        <NoResultsHint\n          facetFilterTracker={facetValuesTracker.current}\n          className={'sm:col-span-4 sm:p-4'}\n        />\n      )}\n    </div>\n  );\n}\n", "import gql from 'graphql-tag';\nimport { QueryOptions, sdk } from '../../graphqlWrapper';\nimport { SearchQueryVariables } from '~/generated/graphql';\n\nexport function search(variables: SearchQueryVariables, options: QueryOptions) {\n  return sdk.search(variables, options);\n}\n\nexport function searchFacetValues(\n  variables: SearchQueryVariables,\n  options: QueryOptions,\n) {\n  return sdk.searchFacetValues(variables, options);\n}\n\nexport function getProductBySlug(slug: string, options: QueryOptions) {\n  return sdk.product({ slug }, options);\n}\n\nexport const detailedProductFragment = gql`\n  fragment DetailedProduct on Product {\n    id\n    name\n    description\n    collections {\n      id\n      slug\n      name\n      breadcrumbs {\n        id\n        name\n        slug\n      }\n    }\n    facetValues {\n      facet {\n        id\n        code\n        name\n      }\n      id\n      code\n      name\n    }\n    featuredAsset {\n      id\n      preview\n    }\n    assets {\n      id\n      preview\n    }\n    variants {\n      id\n      name\n      priceWithTax\n      currencyCode\n      sku\n      stockLevel\n      featuredAsset {\n        id\n        preview\n      }\n    }\n  }\n`;\n\ngql`\n  query product($slug: String, $id: ID) {\n    product(slug: $slug, id: $id) {\n      ...DetailedProduct\n    }\n  }\n`;\n\nexport const listedProductFragment = gql`\n  fragment ListedProduct on SearchResult {\n    productId\n    productName\n    slug\n    productAsset {\n      id\n      preview\n    }\n    currencyCode\n    priceWithTax {\n      ... on PriceRange {\n        min\n        max\n      }\n      ... on SinglePrice {\n        value\n      }\n    }\n  }\n`;\n\ngql`\n  query search($input: SearchInput!) {\n    search(input: $input) {\n      totalItems\n      items {\n        ...ListedProduct\n      }\n      facetValues {\n        count\n        facetValue {\n          id\n          name\n          facet {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n  ${listedProductFragment}\n`;\n\ngql`\n  query searchFacetValues($input: SearchInput!) {\n    search(input: $input) {\n      totalItems\n      facetValues {\n        count\n        facetValue {\n          id\n          name\n          facet {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n  ${listedProductFragment}\n`;\n", "import { search, searchFacetValues } from '~/providers/products/products';\nimport { redirect } from '@remix-run/server-runtime';\n\nimport { paginationValidationSchema } from '~/utils/pagination';\nimport { LoaderFunctionArgs } from '@remix-run/router';\n\n/**\n * This loader deals with loading product searches, which is used in both the search page and the\n * category list page.\n */\nexport function filteredSearchLoaderFromPagination(\n  allowedPaginationLimits: Set<number>,\n  paginationLimitMinimumDefault: number,\n) {\n  const searchPaginationSchema = paginationValidationSchema(\n    allowedPaginationLimits,\n  );\n\n  return {\n    validator: searchPaginationSchema,\n    filteredSearchLoader: async ({ params, request }: LoaderFunctionArgs) => {\n      const url = new URL(request.url);\n      const term = url.searchParams.get('q');\n      const facetValueIds = url.searchParams.getAll('fvid');\n      const limit =\n        url.searchParams.get('limit') ?? paginationLimitMinimumDefault;\n      const page = url.searchParams.get('page') ?? 1;\n\n      const zodResult = searchPaginationSchema.safeParse({ limit, page });\n      if (!zodResult.success) {\n        url.search = '';\n        throw redirect(url.href);\n      }\n\n      let resultPromises: [\n        ReturnType<typeof search>,\n        ReturnType<typeof searchFacetValues>,\n      ];\n      const searchResultPromise = search(\n        {\n          input: {\n            groupByProduct: true,\n            term,\n            facetValueFilters: [{ or: facetValueIds }],\n            collectionSlug: params.slug,\n            take: zodResult.data.limit,\n            skip: (zodResult.data.page - 1) * zodResult.data.limit,\n          },\n        },\n        { request },\n      );\n      if (facetValueIds.length) {\n        resultPromises = [\n          searchResultPromise,\n          searchFacetValues(\n            {\n              input: {\n                groupByProduct: true,\n                term,\n                collectionSlug: params.slug,\n              },\n            },\n            { request },\n          ),\n        ];\n      } else {\n        resultPromises = [searchResultPromise, searchResultPromise];\n      }\n      const [result, resultWithoutFacetValueFilters] = await Promise.all(\n        resultPromises,\n      );\n      return {\n        term,\n        facetValueIds,\n        result: result.search,\n        resultWithoutFacetValueFilters: resultWithoutFacetValueFilters.search,\n        appliedPaginationLimit: zodResult.data.limit,\n        appliedPaginationPage: zodResult.data.page,\n      };\n    },\n  };\n}\n", "import { PencilIcon } from '@heroicons/react/24/outline';\nimport { useActionData, useNavigation } from '@remix-run/react';\nimport { DataFunctionArgs, json } from '@remix-run/server-runtime';\nimport { withZod } from '@remix-validated-form/with-zod';\nimport { useEffect, useRef, useState } from 'react';\nimport { ValidatedForm, validationError } from 'remix-validated-form';\nimport { z } from 'zod';\nimport { Button } from '~/components/Button';\nimport { ErrorMessage } from '~/components/ErrorMessage';\nimport { HighlightedButton } from '~/components/HighlightedButton';\nimport { Input } from '~/components/Input';\nimport { SuccessMessage } from '~/components/SuccessMessage';\nimport { updateCustomerPassword } from '~/providers/account/account';\nimport {\n  isErrorResult,\n  isValidationErrorResponseData,\n} from '~/utils/validation-helper';\nimport { useTranslation } from 'react-i18next';\n\nexport const validator = withZod(\n  z\n    .object({\n      currentPassword: z.string().min(1, { message: 'Password is required' }),\n      newPassword: z.string().min(1, { message: 'Password is required' }),\n      confirmPassword: z.string().min(1, { message: 'Password is required' }),\n    })\n    .refine(\n      ({ newPassword, confirmPassword }) => newPassword === confirmPassword,\n      {\n        path: ['confirmPassword'],\n        message: 'Passwords must match',\n      },\n    ),\n);\n\nexport async function action({ request }: DataFunctionArgs) {\n  const body = await request.formData();\n\n  const result = await validator.validate(body);\n  if (result.error) {\n    return validationError(result.error);\n  }\n\n  const { currentPassword, newPassword } = result.data;\n\n  const res = await updateCustomerPassword(\n    { currentPassword, newPassword },\n    { request },\n  );\n\n  if (res.__typename !== 'Success') {\n    return json(res, { status: 401 });\n  }\n\n  return json(res);\n}\n\nexport default function AccountPassword() {\n  const [editing, setEditing] = useState(false);\n  const [isSaved, setIsSaved] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const actionDataHook = useActionData<typeof action>();\n  const { state } = useNavigation();\n  const formRef = useRef<HTMLFormElement>(null);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (isValidationErrorResponseData(actionDataHook)) {\n      // no additional handling\n      return;\n    }\n\n    if (isErrorResult(actionDataHook)) {\n      // set error message\n      setErrorMessage(actionDataHook.message);\n      setIsSaved(false);\n      return;\n    }\n\n    if (actionDataHook?.success) {\n      // show success message and reset form\n      setErrorMessage(undefined);\n      setIsSaved(true);\n      setEditing(false);\n      formRef.current?.reset();\n    }\n  }, [actionDataHook]);\n\n  return (\n    <ValidatedForm validator={validator} method=\"post\" formRef={formRef}>\n      <div className=\"p-4 space-y-4\">\n        {editing && (\n          <>\n            <div className=\"gap-4 grid grid-cols-1 md:grid-cols-2\">\n              <div>\n                <Input\n                  required\n                  label={t('account.currentPassword')}\n                  name=\"currentPassword\"\n                  type=\"password\"\n                />\n              </div>\n            </div>\n            <div className=\"gap-4 grid grid-cols-1 md:grid-cols-2\">\n              <div>\n                <Input\n                  required\n                  label={t('account.newPassword')}\n                  name=\"newPassword\"\n                  type=\"password\"\n                />\n              </div>\n              <div>\n                <Input\n                  required\n                  label={t('account.confirmPassword')}\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                />\n              </div>\n            </div>\n          </>\n        )}\n        {isSaved && (\n          <SuccessMessage\n            heading={t('account.pwdSuccessHeading')}\n            message={t('account.pwdSuccessMessage')}\n          />\n        )}\n        {errorMessage && (\n          <ErrorMessage\n            heading={t('account.pwdErrorMessage')}\n            message={errorMessage}\n          />\n        )}\n        {editing ? (\n          <div className=\"flex gap-3\">\n            <HighlightedButton\n              type=\"submit\"\n              isSubmitting={state === 'submitting'}\n            >\n              {t('account.savePassword')}\n            </HighlightedButton>\n            <Button type=\"reset\" onClick={() => setEditing(false)}>\n              {t('common.cancel')}\n            </Button>\n          </div>\n        ) : (\n          <>\n            <HighlightedButton type=\"button\" onClick={() => setEditing(true)}>\n              <PencilIcon className=\"w-4 h-4\" /> {t('account.changePassword')}\n            </HighlightedButton>\n          </>\n        )}\n      </div>\n    </ValidatedForm>\n  );\n}\n", "import { CheckIcon } from '@heroicons/react/24/solid';\n\nexport function SuccessMessage({\n  heading,\n  message,\n}: {\n  heading: string;\n  message: string;\n}) {\n  return (\n    <div className=\"rounded-md bg-green-50 p-4 max-w-lg\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <CheckIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-green-800\">{heading}</h3>\n          <p className=\"text-sm text-green-700 mt-2\">{message}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { ValidationErrorResponseData } from \"remix-validated-form\";\nimport { ErrorResult } from \"~/generated/graphql\";\n\nexport function isErrorResult(input: any): input is ErrorResult {\n    return input && (input as ErrorResult).message !== undefined && (input as ErrorResult).errorCode !== undefined;\n}\n\nexport function isValidationErrorResponseData(input: any): input is ValidationErrorResponseData {\n    return input && (input as ValidationErrorResponseData).fieldErrors !== undefined;\n}", "import {\n  addItemToOrder,\n  adjustOrderLine,\n  getActiveOrder,\n  removeOrderLine,\n  setCustomerForOrder,\n  setOrderShippingAddress,\n  setOrderShippingMethod,\n} from '~/providers/orders/order';\nimport { DataFunctionArgs, json } from '@remix-run/server-runtime';\nimport {\n  CreateAddressInput,\n  CreateCustomerInput,\n  ErrorCode,\n  ErrorResult,\n  OrderDetailFragment,\n} from '~/generated/graphql';\nimport { getSessionStorage } from '~/sessions';\nimport { shippingFormDataIsValid } from '~/utils/validation';\n\nexport type CartLoaderData = Awaited<ReturnType<typeof loader>>;\n\nexport async function loader({ request }: DataFunctionArgs) {\n  return {\n    activeOrder: await getActiveOrder({ request }),\n  };\n}\n\nexport async function action({ request, params }: DataFunctionArgs) {\n  const body = await request.formData();\n  const formAction = body.get('action');\n  let activeOrder: OrderDetailFragment | undefined = undefined;\n  let error: ErrorResult = {\n    errorCode: ErrorCode.NoActiveOrderError,\n    message: '',\n  };\n  switch (formAction) {\n    case 'setCheckoutShipping':\n      if (shippingFormDataIsValid(body)) {\n        const shippingFormData = Object.fromEntries<any>(\n          body.entries(),\n        ) as CreateAddressInput;\n        const result = await setOrderShippingAddress(\n          {\n            city: shippingFormData.city,\n            company: shippingFormData.company,\n            countryCode: shippingFormData.countryCode,\n            customFields: shippingFormData.customFields,\n            fullName: shippingFormData.fullName,\n            phoneNumber: shippingFormData.phoneNumber,\n            postalCode: shippingFormData.postalCode,\n            province: shippingFormData.province,\n            streetLine1: shippingFormData.streetLine1,\n            streetLine2: shippingFormData.streetLine2,\n          },\n          { request },\n        );\n        if (result.setOrderShippingAddress.__typename === 'Order') {\n          activeOrder = result.setOrderShippingAddress;\n        } else {\n          error = result.setOrderShippingAddress;\n        }\n      }\n      break;\n    case 'setOrderCustomer': {\n      const customerData = Object.fromEntries<any>(\n        body.entries(),\n      ) as CreateCustomerInput;\n      const result = await setCustomerForOrder(\n        {\n          emailAddress: customerData.emailAddress,\n          firstName: customerData.firstName,\n          lastName: customerData.lastName,\n        },\n        { request },\n      );\n      if (result.setCustomerForOrder.__typename === 'Order') {\n        activeOrder = result.setCustomerForOrder;\n      } else {\n        error = result.setCustomerForOrder;\n      }\n      break;\n    }\n    case 'setShippingMethod': {\n      const shippingMethodId = body.get('shippingMethodId');\n      if (typeof shippingMethodId === 'string') {\n        const result = await setOrderShippingMethod(shippingMethodId, {\n          request,\n        });\n        if (result.setOrderShippingMethod.__typename === 'Order') {\n          activeOrder = result.setOrderShippingMethod;\n        } else {\n          error = result.setOrderShippingMethod;\n        }\n      }\n      break;\n    }\n    case 'removeItem': {\n      const lineId = body.get('lineId');\n      const result = await removeOrderLine(lineId?.toString() ?? '', {\n        request,\n      });\n      if (result.removeOrderLine.__typename === 'Order') {\n        activeOrder = result.removeOrderLine;\n      } else {\n        error = result.removeOrderLine;\n      }\n      break;\n    }\n    case 'adjustItem': {\n      const lineId = body.get('lineId');\n      const quantity = body.get('quantity');\n      if (lineId && quantity != null) {\n        const result = await adjustOrderLine(lineId?.toString(), +quantity, {\n          request,\n        });\n        if (result.adjustOrderLine.__typename === 'Order') {\n          activeOrder = result.adjustOrderLine;\n        } else {\n          error = result.adjustOrderLine;\n        }\n      }\n      break;\n    }\n    case 'addItemToOrder': {\n      const variantId = body.get('variantId')?.toString();\n      const quantity = Number(body.get('quantity')?.toString() ?? 1);\n      if (!variantId || !(quantity > 0)) {\n        throw new Error(\n          `Invalid input: variantId ${variantId}, quantity ${quantity}`,\n        );\n      }\n      const result = await addItemToOrder(variantId, quantity, {\n        request,\n      });\n      if (result.addItemToOrder.__typename === 'Order') {\n        activeOrder = result.addItemToOrder;\n      } else {\n        error = result.addItemToOrder;\n      }\n      break;\n    }\n    case 'addPaymentToOrder': {\n    }\n    default:\n    // Don't do anything\n  }\n  let headers: ResponseInit['headers'] = {};\n  const sessionStorage = await getSessionStorage();\n  const session = await sessionStorage.getSession(\n    request?.headers.get('Cookie'),\n  );\n  session.flash('activeOrderError', error);\n  headers = {\n    'Set-Cookie': await sessionStorage.commitSession(session),\n  };\n  return json(\n    { activeOrder: activeOrder || (await getActiveOrder({ request })) },\n    {\n      headers,\n    },\n  );\n}\n", "import { ShippingFormData } from '~/types';\n\nexport function shippingFormDataIsValid(\n  data: FormData | Record<string, string>,\n): boolean {\n  const shippingFormData = (\n    data instanceof FormData ? Object.fromEntries<any>(data.entries()) : data\n  ) as ShippingFormData;\n  return !!(\n    shippingFormData.streetLine1 &&\n    shippingFormData.city &&\n    shippingFormData.countryCode &&\n    shippingFormData.postalCode\n  );\n}\n\nexport function replaceEmptyString(input: string | undefined | null) {\n  if (!input || input.trim().length == 0) {\n    return '-';\n  }\n  return input;\n}", "import { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport {\n  addPaymentToOrder,\n  createStripePaymentIntent,\n  generateBraintreeClientToken,\n  getEligiblePaymentMethods,\n  getNextOrderStates,\n  transitionOrderToState,\n} from '~/providers/checkout/checkout';\nimport { useLoaderData, useOutletContext } from '@remix-run/react';\nimport { OutletContext } from '~/types';\nimport { CurrencyCode, ErrorCode, ErrorResult } from '~/generated/graphql';\nimport { StripePayments } from '~/components/checkout/stripe/StripePayments';\nimport { DummyPayments } from '~/components/checkout/DummyPayments';\nimport { BraintreeDropIn } from '~/components/checkout/braintree/BraintreePayments';\nimport { getActiveOrder } from '~/providers/orders/order';\nimport { getSessionStorage } from '~/sessions';\nimport { useTranslation } from 'react-i18next';\n\nexport async function loader({ params, request }: DataFunctionArgs) {\n  const session = await getSessionStorage().then((sessionStorage) =>\n    sessionStorage.getSession(request?.headers.get('Cookie')),\n  );\n  const activeOrder = await getActiveOrder({ request });\n\n  //check if there is an active order if not redirect to homepage\n  if (\n    !session ||\n    !activeOrder ||\n    !activeOrder.active ||\n    activeOrder.lines.length === 0\n  ) {\n    return redirect('/');\n  }\n\n  const { eligiblePaymentMethods } = await getEligiblePaymentMethods({\n    request,\n  });\n  const error = session.get('activeOrderError');\n  let stripePaymentIntent: string | undefined;\n  let stripePublishableKey: string | undefined;\n  let stripeError: string | undefined;\n  if (eligiblePaymentMethods.find((method) => method.code.includes('stripe'))) {\n    try {\n      const stripePaymentIntentResult = await createStripePaymentIntent({\n        request,\n      });\n      stripePaymentIntent =\n        stripePaymentIntentResult.createStripePaymentIntent ?? undefined;\n      stripePublishableKey = process.env.STRIPE_PUBLISHABLE_KEY;\n    } catch (e: any) {\n      stripeError = e.message;\n    }\n  }\n\n  let brainTreeKey: string | undefined;\n  let brainTreeError: string | undefined;\n  if (\n    eligiblePaymentMethods.find((method) => method.code.includes('braintree'))\n  ) {\n    try {\n      const generateBrainTreeTokenResult = await generateBraintreeClientToken({\n        request,\n      });\n      brainTreeKey =\n        generateBrainTreeTokenResult.generateBraintreeClientToken ?? '';\n    } catch (e: any) {\n      brainTreeError = e.message;\n    }\n  }\n  return json({\n    eligiblePaymentMethods,\n    stripePaymentIntent,\n    stripePublishableKey,\n    stripeError,\n    brainTreeKey,\n    brainTreeError,\n    error,\n  });\n}\n\nexport async function action({ params, request }: DataFunctionArgs) {\n  const body = await request.formData();\n  const paymentMethodCode = body.get('paymentMethodCode');\n  const paymentNonce = body.get('paymentNonce');\n  if (typeof paymentMethodCode === 'string') {\n    const { nextOrderStates } = await getNextOrderStates({\n      request,\n    });\n    if (nextOrderStates.includes('ArrangingPayment')) {\n      const transitionResult = await transitionOrderToState(\n        'ArrangingPayment',\n        { request },\n      );\n      if (transitionResult.transitionOrderToState?.__typename !== 'Order') {\n        throw new Response('Not Found', {\n          status: 400,\n          statusText: transitionResult.transitionOrderToState?.message,\n        });\n      }\n    }\n\n    const result = await addPaymentToOrder(\n      { method: paymentMethodCode, metadata: { nonce: paymentNonce } },\n      { request },\n    );\n    if (result.addPaymentToOrder.__typename === 'Order') {\n      return redirect(\n        `/checkout/confirmation/${result.addPaymentToOrder.code}`,\n      );\n    } else {\n      throw new Response('Not Found', {\n        status: 400,\n        statusText: result.addPaymentToOrder?.message,\n      });\n    }\n  }\n}\n\nexport default function CheckoutPayment() {\n  const {\n    eligiblePaymentMethods,\n    stripePaymentIntent,\n    stripePublishableKey,\n    stripeError,\n    brainTreeKey,\n    brainTreeError,\n    error,\n  } = useLoaderData<typeof loader>();\n  const { activeOrderFetcher, activeOrder } = useOutletContext<OutletContext>();\n  const { t } = useTranslation();\n\n  const paymentError = getPaymentError(error);\n\n  return (\n    <div className=\"flex flex-col items-center divide-gray-200 divide-y\">\n      {eligiblePaymentMethods.map((paymentMethod) =>\n        paymentMethod.code.includes('braintree') ? (\n          <div className=\"py-3 w-full\" key={paymentMethod.id}>\n            {brainTreeError ? (\n              <div>\n                <p className=\"text-red-700 font-bold\">\n                  {t('checkout.braintreeError')}\n                </p>\n                <p className=\"text-sm\">{brainTreeError}</p>\n              </div>\n            ) : (\n              <BraintreeDropIn\n                fullAmount={activeOrder?.totalWithTax ?? 0}\n                currencyCode={\n                  activeOrder?.currencyCode ?? ('USD' as CurrencyCode)\n                }\n                show={true}\n                authorization={brainTreeKey!}\n              />\n            )}\n          </div>\n        ) : paymentMethod.code.includes('stripe') ? (\n          <div className=\"py-12\" key={paymentMethod.id}>\n            {stripeError ? (\n              <div>\n                <p className=\"text-red-700 font-bold\">\n                  {t('checkout.stripeError')}\n                </p>\n                <p className=\"text-sm\">{stripeError}</p>\n              </div>\n            ) : (\n              <StripePayments\n                orderCode={activeOrder?.code ?? ''}\n                clientSecret={stripePaymentIntent!}\n                publishableKey={stripePublishableKey!}\n              ></StripePayments>\n            )}\n          </div>\n        ) : (\n          <div className=\"py-12\" key={paymentMethod.id}>\n            <DummyPayments\n              paymentMethod={paymentMethod}\n              paymentError={paymentError}\n            />\n          </div>\n        ),\n      )}\n    </div>\n  );\n}\n\nfunction getPaymentError(error?: ErrorResult): string | undefined {\n  if (!error || !error.errorCode) {\n    return undefined;\n  }\n  switch (error.errorCode) {\n    case ErrorCode.OrderPaymentStateError:\n    case ErrorCode.IneligiblePaymentMethodError:\n    case ErrorCode.PaymentFailedError:\n    case ErrorCode.PaymentDeclinedError:\n    case ErrorCode.OrderStateTransitionError:\n    case ErrorCode.NoActiveOrderError:\n      return error.message;\n  }\n}\n", "import { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe, Stripe } from '@stripe/stripe-js';\nimport { CheckoutForm } from '~/components/checkout/stripe/CheckoutForm';\n\nlet _stripe: Promise<Stripe | null>;\nfunction getStripe(publishableKey: string) {\n  if (!_stripe) {\n    _stripe = loadStripe(publishableKey);\n  }\n  return _stripe;\n}\n\nexport function StripePayments({\n  clientSecret,\n  publishableKey,\n  orderCode,\n}: {\n  clientSecret: string;\n  publishableKey: string;\n  orderCode: string;\n}) {\n  const options = {\n    // passing the client secret obtained from the server\n    clientSecret,\n  };\n  const stripePromise = getStripe(publishableKey);\n\n  return (\n    <Elements stripe={stripePromise} options={options}>\n      <CheckoutForm orderCode={orderCode} />\n    </Elements>\n  );\n}\n", "import {\n  useStripe,\n  useElements,\n  PaymentElement,\n} from '@stripe/react-stripe-js';\nimport { FormEvent } from 'react';\nimport { CreditCardIcon } from '@heroicons/react/24/solid';\nimport { useTranslation } from 'react-i18next';\n\nexport const CheckoutForm = ({ orderCode }: { orderCode: string }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const { t } = useTranslation();\n\n  const handleSubmit = async (event: FormEvent) => {\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const result = await stripe.confirmPayment({\n      //`Elements` instance that was used to create the Payment Element\n      elements,\n      confirmParams: {\n        return_url: location.origin + `/checkout/confirmation/${orderCode}`,\n      },\n    });\n\n    if (result.error) {\n      // Show error to your customer (for example, payment details incomplete)\n      console.log(result.error.message);\n    } else {\n      // Your customer will be redirected to your `return_url`. For some payment\n      // methods like iDEAL, your customer will be redirected to an intermediate\n      // site first to authorize the payment, then redirected to the `return_url`.\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <PaymentElement />\n      <button\n        disabled={!stripe}\n        className=\"flex w-full px-6 bg-primary-600 hover:bg-primary-700 items-center justify-center space-x-2 py-3 my-4 border border-transparent text-base font-medium rounded-md shadow-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n      >\n        <CreditCardIcon className=\"w-5 h-5\"></CreditCardIcon>\n        <span>{t('checkout.payWith')} Stripe</span>\n      </button>\n    </form>\n  );\n};\n", "import { CreditCardIcon, XCircleIcon } from '@heroicons/react/24/solid';\nimport { Form } from '@remix-run/react';\nimport { EligiblePaymentMethodsQuery } from '~/generated/graphql';\nimport { useTranslation } from 'react-i18next';\n\nexport function DummyPayments({\n  paymentMethod,\n  paymentError,\n}: {\n  paymentMethod: EligiblePaymentMethodsQuery['eligiblePaymentMethods'][number];\n  paymentError?: string;\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <p className=\"text-gray-600 text-sm p-6\">{t('checkout.dummyPayment')}</p>\n      {paymentError && (\n        <div className=\"rounded-md bg-red-50 p-4 mb-8\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <XCircleIcon\n                className=\"h-5 w-5 text-red-400\"\n                aria-hidden=\"true\"\n              />\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">\n                {t('checkout.paymentErrorMessage')}\n              </h3>\n              <div className=\"mt-2 text-sm text-red-700\">{paymentError}</div>\n            </div>\n          </div>\n        </div>\n      )}\n      <Form method=\"post\">\n        <input\n          type=\"hidden\"\n          name=\"paymentMethodCode\"\n          value={paymentMethod.code}\n        />\n        <button\n          type=\"submit\"\n          className=\"flex px-6 bg-primary-600 hover:bg-primary-700 items-center justify-center space-x-2 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n        >\n          <CreditCardIcon className=\"w-5 h-5\"></CreditCardIcon>\n          <span>\n            {t('checkout.payWith')} {paymentMethod.name}\n          </span>\n        </button>\n      </Form>\n    </div>\n  );\n}\n", "import { useEffect, useState } from 'react';\nimport dropin, { Dropin } from 'braintree-web-drop-in';\nimport { classNames } from '~/utils/class-names';\nimport { useSubmit } from '@remix-run/react';\nimport { addPaymentToOrder } from '~/providers/checkout/checkout';\nimport { CurrencyCode } from '~/generated/graphql';\nimport { useTranslation } from 'react-i18next';\n\nexport function BraintreeDropIn(props: {\n  show: boolean;\n  authorization: string;\n  fullAmount: number;\n  currencyCode: CurrencyCode;\n}) {\n  const { show, authorization, fullAmount, currencyCode } = props;\n  const { t } = useTranslation();\n\n  const [braintreeInstance, setBraintreeInstance] = useState<Dropin>();\n  const [enablePaymentButton, setEnablePaymentButton] = useState<boolean>();\n  const [processing, setProcessing] = useState<boolean>(false);\n\n  const submit = useSubmit();\n\n  const submitPayment = async () => {\n    setProcessing(true);\n    if (braintreeInstance) {\n      try {\n        const result = await braintreeInstance.requestPaymentMethod();\n\n        const formData = new FormData();\n        formData.set('paymentMethodCode', 'braintree');\n        formData.set('paymentNonce', result.nonce);\n\n        let request: Request;\n        request = new Request('');\n\n        await addPaymentToOrder(\n          { method: 'braintree', metadata: result },\n          { request },\n        );\n\n        submit(formData, { method: 'post' });\n      } catch (e) {\n        alert(e);\n        setProcessing(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (show) {\n      const initializeBraintree = () =>\n        dropin.create(\n          {\n            authorization: authorization,\n            container: '#braintree-drop-in-div',\n            paypal: {\n              flow: 'checkout',\n              amount: fullAmount / 100,\n              currency: currencyCode.toString(),\n            },\n          },\n          function (error, instance) {\n            if (error) console.error(error);\n            else if (instance != null) {\n              setBraintreeInstance(instance);\n              instance.on('paymentMethodRequestable', (payload) => {\n                setEnablePaymentButton(true);\n              });\n              instance.on('noPaymentMethodRequestable', () => {\n                setEnablePaymentButton(false);\n              });\n            }\n          },\n        );\n\n      if (braintreeInstance) {\n        braintreeInstance.teardown().then(() => {\n          initializeBraintree();\n        });\n      } else {\n        initializeBraintree();\n      }\n    }\n  }, [show]);\n\n  return (\n    <div\n      style={{ display: `${show ? 'block' : 'none'}` }}\n      className={'w-full h-full'}\n    >\n      <div id={'braintree-drop-in-div'} />\n\n      <input type=\"hidden\" name=\"paymentMethodCode\" value=\"braintree\" />\n      <button\n        onClick={submitPayment}\n        className={classNames(\n          enablePaymentButton && !processing\n            ? 'bg-primary-600 hover:bg-primary-700'\n            : 'bg-gray-400',\n          'flex w-full items-center justify-center space-x-2 mt-24 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500',\n        )}\n        disabled={!braintreeInstance || !enablePaymentButton}\n      >\n        {processing\n          ? t('checkout.paymentProcessing')\n          : !braintreeInstance\n          ? t('checkout.paymentLoading')\n          : t('checkout.pay')}\n        {processing ? (\n          <svg\n            aria-hidden=\"true\"\n            className=\"ml-3 w-4 h-4 text-indigo-100 animate-spin dark:text-gray-100 fill-white\"\n            viewBox=\"0 0 100 101\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n              fill=\"currentColor\"\n            />\n            <path\n              d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n              fill=\"currentFill\"\n            />\n          </svg>\n        ) : (\n          ''\n        )}\n      </button>\n    </div>\n  );\n}\n", "import { useLoaderData, useNavigation, useSubmit } from '@remix-run/react';\nimport { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport OrderHistoryItem from '~/components/account/OrderHistoryItem';\nimport { getActiveCustomerOrderList } from '~/providers/customer/customer';\nimport { OrderListOptions, SortOrder } from '~/generated/graphql';\nimport { Pagination } from '~/components/Pagination';\nimport { ValidatedForm } from 'remix-validated-form';\nimport { withZod } from '@remix-validated-form/with-zod';\nimport {\n  translatePaginationFrom,\n  translatePaginationTo,\n  paginationValidationSchema,\n} from '~/utils/pagination';\nimport { useTranslation } from 'react-i18next';\n\nconst paginationLimitMinimumDefault = 10;\nconst allowedPaginationLimits = new Set<number>([\n  paginationLimitMinimumDefault,\n  20,\n  30,\n]);\nconst orderPaginationSchema = paginationValidationSchema(\n  allowedPaginationLimits,\n);\n\nexport async function loader({ request }: DataFunctionArgs) {\n  const url = new URL(request.url);\n  // Careful params are user controllable data - never blindly trust it!\n  // Use the .default fallbacks in case that params are undefined i.e. `null`\n  const limit = url.searchParams.get('limit') ?? paginationLimitMinimumDefault;\n  const page = url.searchParams.get('page') ?? 1;\n\n  // Validate, if we fail we redirect to default params\n  // We could provide error information but under normal usage this shouldnt happen because\n  // we also validate on client side, which means we should only land here if the user\n  // opens a manually modified or no longer supported url\n  const zodResult = orderPaginationSchema.safeParse({ limit, page });\n  if (!zodResult.success) {\n    url.search = '';\n    return redirect(url.href);\n  }\n\n  // From here on data is safe - Construct the options for vendure\n  const orderListOptions: OrderListOptions = {\n    take: zodResult.data.limit,\n    skip: (zodResult.data.page - 1) * zodResult.data.limit, // Page is one-base-indexed so we gotta decrement first\n    sort: { createdAt: SortOrder.Desc },\n    filter: { active: { eq: false } },\n  };\n\n  const res = await getActiveCustomerOrderList(orderListOptions, { request });\n  if (!res.activeCustomer) {\n    return redirect('/sign-in');\n  }\n  return json({\n    orderList: res.activeCustomer.orders,\n    appliedPaginationLimit: zodResult.data.limit,\n    appliedPaginationPage: zodResult.data.page,\n  });\n}\n\nexport default function AccountHistory() {\n  const { orderList, appliedPaginationLimit, appliedPaginationPage } =\n    useLoaderData<typeof loader>();\n  const submit = useSubmit();\n  const navigation = useNavigation();\n  const { t } = useTranslation();\n  const showingOrdersFrom = translatePaginationFrom(\n    appliedPaginationPage,\n    appliedPaginationLimit,\n  );\n  const showingOrdersTo = translatePaginationTo(\n    appliedPaginationPage,\n    appliedPaginationLimit,\n    orderList.items.length,\n  );\n\n  return (\n    <div className=\"pt-10 relative\">\n      {/* Loading-Overlay */}\n      {navigation.state !== 'idle' && (\n        <div className=\"absolute top-0 left-0 w-full h-full z-100 bg-white bg-opacity-75\"></div>\n      )}\n\n      {orderList.items.length === 0 && (\n        <div className=\"py-16 text-3xl text-center italic text-gray-300 select-none flex justify-center items-center\">\n          {orderList.totalItems === 0\n            ? t('order.historyEmpty')\n            : t('order.historyEnd')}\n        </div>\n      )}\n      {/* The actual orders */}\n      {orderList.items?.map((item) => (\n        <OrderHistoryItem\n          key={item.code}\n          // @ts-ignore\n          order={item}\n          isInitiallyExpanded={true}\n          className=\"mb-10\"\n        />\n      ))}\n\n      {/* Pagination */}\n      <div className=\"flex flex-row justify-between items-center gap-4\">\n        <span className=\"self-start text-gray-500 text-sm ml-4 lg:ml-6 mt-2\">\n          Showing orders {showingOrdersFrom} to {showingOrdersTo} of{' '}\n          {orderList.totalItems}\n        </span>\n\n        <ValidatedForm\n          validator={withZod(\n            paginationValidationSchema(allowedPaginationLimits),\n          )}\n          method=\"get\"\n          onChange={(e) =>\n            submit(e.currentTarget, { preventScrollReset: true })\n          }\n          preventScrollReset\n        >\n          <Pagination\n            appliedPaginationLimit={appliedPaginationLimit}\n            allowedPaginationLimits={allowedPaginationLimits}\n            totalItems={orderList.totalItems}\n            appliedPaginationPage={appliedPaginationPage}\n          />\n        </ValidatedForm>\n      </div>\n    </div>\n  );\n}\n", "import { useState } from 'react';\nimport { Button } from '~/components/Button';\nimport { Price } from '~/components/products/Price';\nimport { ActiveCustomerOrderListQuery } from '~/generated/graphql';\nimport { OrderStateBadge } from '~/components/account/OrderStateBadge';\nimport { ChevronRightIcon } from '@heroicons/react/24/solid';\nimport { EllipsisVerticalIcon } from '@heroicons/react/24/outline';\nimport { Link } from '@remix-run/react';\nimport { useTranslation } from 'react-i18next';\n\ntype OrderHistoryItemProps = {\n  order?: NonNullable<\n    ActiveCustomerOrderListQuery['activeCustomer']\n  >['orders']['items'][number];\n  isInitiallyExpanded?: boolean;\n  areDetailsInitiallyExpanded?: boolean;\n  className?: string;\n};\n\nexport default function OrderHistoryItem({\n  order,\n  isInitiallyExpanded = false,\n  areDetailsInitiallyExpanded = false,\n  className,\n}: OrderHistoryItemProps) {\n  const [isExpanded, setIsExpanded] = useState<boolean>(isInitiallyExpanded);\n  const [areDetailsExpanded, setAreDetailsExpanded] = useState<boolean>(\n    areDetailsInitiallyExpanded,\n  );\n  const [isLineCalcExpanded, setIsLineCalcExpanded] = useState<boolean>(false);\n  const { t } = useTranslation();\n\n  return (\n    <div className={`border rounded-lg overflow-hidden ${className}`}>\n      {/* Upper Summary */}\n      <div\n        className=\"p-4 lg:p-6\n            flex flex-row justify-between items-center\n            bg-gray-50 border-b\n        \"\n      >\n        {/* Infos */}\n        <div className=\"flex flex-col md:flex-row gap-4 md:gap-8 lg:gap-16 text-sm\">\n          {/* Info - Date */}\n          <div>\n            <span className=\"block font-medium\">{t('order.placedAt')}</span>\n            <span\n              className=\"text-gray-500\"\n              title={new Date(order?.orderPlacedAt).toLocaleString()}\n            >\n              {order?.orderPlacedAt\n                ? new Date(order.orderPlacedAt).toLocaleDateString(undefined, {\n                    day: 'numeric',\n                    month: 'long',\n                    year: 'numeric',\n                  })\n                : '--'}\n            </span>\n          </div>\n          {/* Info - Total sum */}\n          <div>\n            <span className=\"block font-medium\">{t('order.totalSum')}</span>\n            <span className=\"text-gray-500\">\n              <Price\n                currencyCode={order?.currencyCode}\n                priceWithTax={order?.totalWithTax}\n              ></Price>\n            </span>\n          </div>\n          {/* Info - Order number */}\n          <div>\n            <span className=\"block font-medium\">{t('order.number')}</span>\n            <span className=\"text-gray-500\">{order?.code || '--'}</span>\n          </div>\n        </div>\n\n        {/* Status + Actions */}\n        <div className=\"gap-4 lg:gap-6 flex flex-col items-end self-stretch justify-between md:flex-row md:items-center self-start\">\n          <OrderStateBadge state={order?.state} />\n          <div className=\"flex\" role=\"group\">\n            <Button\n              title={t('order.actionsMessage')}\n              className=\"bg-white text-sm rounded-r-none border-r-0\"\n            >\n              <span className=\"text-xs hidden\">{t('order.actions')}</span>\n              <EllipsisVerticalIcon className=\"w-5 h-5\" />\n            </Button>\n            <Button\n              className=\"bg-white text-sm rounded-l-none\"\n              onClick={() => setIsExpanded(!isExpanded)}\n              title={t('order.expand')}\n            >\n              <ChevronRightIcon\n                className={`w-5 h-5 transition-transform duration-100 ${\n                  isExpanded && 'rotate-90'\n                }`}\n              />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Collapsable details */}\n      {isExpanded && (\n        <div className=\"flex flex-col\">\n          {order?.lines.map((line, key) => (\n            <div\n              key={key}\n              className=\"p-4 lg:p-6 border-b flex flex-row gap-8 justify-between group\"\n            >\n              {/* Product */}\n              <div className=\"inline-flex justify-center items-center justify gap-4\">\n                <Link\n                  to={`/products/${line.productVariant.product.slug}`}\n                  className=\"hover:opacity-50 transition-opacity\"\n                >\n                  <img\n                    src={line.featuredAsset?.source}\n                    className=\"w-24 h-24 object-cover rounded-md\"\n                  />\n                </Link>\n                <span className=\"flex flex-1 flex-col gap-0\">\n                  {/* Product name */}\n                  <Link\n                    to={`/products/${line.productVariant.product.slug}`}\n                    className=\"text-black text-sm font-semibold line-clamp-3 md:line-clamp-2 max-w-md hover:text-black/50\"\n                    title={line.productVariant.name}\n                  >\n                    {line.productVariant.name}\n                  </Link>\n                  {/* Price and quantity */}\n                  <button\n                    className=\"inline-flex gap-2 items-center w-fit text-gray-500 text-sm mt-1\"\n                    onClick={() => setIsLineCalcExpanded(!isLineCalcExpanded)}\n                  >\n                    {isLineCalcExpanded && (\n                      <>\n                        <span title={t('common.quantity')}>\n                          {line.quantity}\n                        </span>\n                        <span className=\"text-gray-300 select-none\">\u00D7</span>\n                        <span title=\"Price per unit\">\n                          <Price\n                            currencyCode={line.productVariant.currencyCode}\n                            priceWithTax={line.discountedUnitPriceWithTax}\n                          ></Price>\n                        </span>\n                        <span className=\"text-gray-300 select-none\">\u039E</span>\n                      </>\n                    )}\n                    <span title=\"Subtotal\">\n                      <Price\n                        currencyCode={line.productVariant.currencyCode}\n                        priceWithTax={line.discountedLinePriceWithTax}\n                      ></Price>\n                    </span>\n                  </button>\n                  {/* Shipment status */}\n                  <span className=\"text-gray-500 text-xs mt-2 tracking-wide\">\n                    {line.fulfillmentLines?.reduce(\n                      (acc, fLine) => acc + fLine.quantity,\n                      0,\n                    ) === 0\n                      ? t('order.notShipped')\n                      : `${line.fulfillmentLines?.reduce(\n                          (acc, fLine) => acc + fLine.quantity,\n                          0,\n                        )} ${t('common.or')} ${line.quantity} ${t(\n                          'order.items.fulfilled',\n                        )}`}\n                    {line.fulfillmentLines\n                      ?.filter((fLine) => fLine.quantity > 0)\n                      .map((fLine, key) => (\n                        <span\n                          key={key}\n                          className=\"block first:mt-2\"\n                          title={new Date(\n                            fLine.fulfillment.updatedAt,\n                          ).toLocaleString()}\n                        >\n                          {fLine.fulfillment.state}:{' '}\n                          {new Intl.DateTimeFormat(undefined, {\n                            dateStyle: 'medium',\n                          }).format(new Date(fLine.fulfillment.updatedAt))}\n                        </span>\n                      ))}\n                  </span>\n                </span>\n              </div>\n            </div>\n          ))}\n\n          {/* Per order actions */}\n          <div className=\"p-2 lg:py-3 lg:px-6 gap-2 lg:gap-6 grid grid-cols-2 sm:flex justify-end items-center\">\n            {order?.fulfillments?.map((f, i) => (\n              <Button\n                key={i}\n                onClickCapture={() =>\n                  alert(`${t('trackAlert')} \"${f.trackingCode}\"`)\n                }\n                className=\"text-xs\"\n              >\n                {/* Only show package number if there are more than one: Looks cleaner */}\n                {t('order.trackPackage')}{' '}\n                {order.fulfillments?.length == 1 ? '' : `#${i + 1}`}\n              </Button>\n            ))}\n            <Button\n              onClick={() => setAreDetailsExpanded(!areDetailsExpanded)}\n              className=\"col-start-2\"\n            >\n              <span className=\"text-xs\">{t('order.detailedOverview')}</span>\n              <ChevronRightIcon\n                className={`w-5 h-5 transition-transform duration-100 ${\n                  areDetailsExpanded && 'rotate-90'\n                }`}\n              />\n            </Button>\n          </div>\n\n          {/* More details - Could be expanded with shipping adresses, payment option, etc. */}\n          {areDetailsExpanded && (\n            <div className=\"p-2 lg:p-3 grid grid-cols-2 gap-1 text-sm max-w-sm self-center md:self-end\">\n              <h6 className=\"font-medium col-span-full\">\n                {t('order.summary')}\n              </h6>\n              <span>{t('order.items.subtotal')}</span>\n              <span className=\"text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.subTotalWithTax}\n                ></Price>\n              </span>\n\n              <span>{t('order.shippingAndHandling')}</span>\n              <span className=\"text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.shippingLines.reduce(\n                    (acc, s) => acc + s.priceWithTax,\n                    0,\n                  )}\n                ></Price>\n              </span>\n\n              <span>{t('order.totalWithoutTax')}</span>\n              <span className=\"text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.taxSummary.reduce(\n                    (acc, t) => acc + t.taxBase,\n                    0,\n                  )}\n                ></Price>\n              </span>\n\n              <span>{t('order.estimatedTax')}</span>\n              <span className=\"text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.taxSummary.reduce(\n                    (acc, t) => acc + t.taxTotal,\n                    0,\n                  )}\n                ></Price>\n              </span>\n\n              <span>{t('order.total')}</span>\n              {order?.totalWithTax && order.discounts ? (\n                <span className=\"text-end\">\n                  <Price\n                    currencyCode={order?.currencyCode}\n                    priceWithTax={\n                      order.totalWithTax -\n                      order?.discounts.reduce(\n                        (acc, curr) => acc + curr.amountWithTax,\n                        0,\n                      )\n                    }\n                  ></Price>\n                </span>\n              ) : (\n                <span className=\"text-end\">--</span>\n              )}\n\n              <span>{t('order.appliedCoupons')}</span>\n              <span className=\"text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.discounts.reduce(\n                    (acc, curr) => acc + curr.amountWithTax,\n                    0,\n                  )}\n                ></Price>\n              </span>\n\n              <span className=\"font-medium\">{t('order.grandTotal')}</span>\n              <span className=\"font-medium text-end\">\n                <Price\n                  currencyCode={order?.currencyCode}\n                  priceWithTax={order?.totalWithTax}\n                ></Price>\n              </span>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n", "import { useTranslation } from 'react-i18next';\n\n// Copied from https://www.vendure.io/docs/typescript-api/orders/order-state/\ntype OrderState =\n  | 'Created'\n  | 'Draft'\n  | 'AddingItems'\n  | 'ArrangingPayment'\n  | 'PaymentAuthorized'\n  | 'PaymentSettled'\n  | 'PartiallyShipped'\n  | 'Shipped'\n  | 'PartiallyDelivered'\n  | 'Delivered'\n  | 'Modifying'\n  | 'ArrangingAdditionalPayment'\n  | 'Cancelled';\n\nexport function OrderStateBadge({ state }: { state?: string }) {\n  const { t } = useTranslation();\n\n  let colorClasses = '';\n  switch (state as OrderState) {\n    default:\n    case 'Draft':\n    case 'AddingItems':\n      colorClasses = 'bg-gray-100 text-gray-800';\n      break;\n    case 'PaymentAuthorized':\n    case 'PaymentSettled':\n    case 'Shipped':\n      colorClasses = 'bg-blue-100 text-blue-800';\n      break;\n    case 'Delivered':\n      colorClasses = 'bg-green-100 text-green-800';\n      break;\n    case 'PartiallyShipped':\n    case 'PartiallyDelivered':\n    case 'Modifying':\n    case 'ArrangingPayment':\n    case 'ArrangingAdditionalPayment':\n      colorClasses = 'bg-yellow-100 text-yellow-800';\n      break;\n    case 'Cancelled':\n      colorClasses = 'bg-red-100 text-red-800';\n      break;\n  }\n\n  return (\n    <span\n      className={`text-xs font-medium px-2.5 py-0.5 rounded uppercase whitespace-nowrap ${colorClasses}`}\n    >\n      {t(`order.states.${state}`) ?? t(`order.states.Unknown`)}\n    </span>\n  );\n}\n", "import { FormEvent, useState } from 'react';\nimport { LockClosedIcon } from '@heroicons/react/24/solid';\nimport {\n  Form,\n  useLoaderData,\n  useNavigate,\n  useOutletContext,\n} from '@remix-run/react';\nimport { OutletContext } from '~/types';\nimport { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport {\n  getAvailableCountries,\n  getEligibleShippingMethods,\n} from '~/providers/checkout/checkout';\nimport { shippingFormDataIsValid } from '~/utils/validation';\nimport { getSessionStorage } from '~/sessions';\nimport { classNames } from '~/utils/class-names';\nimport { getActiveCustomerAddresses } from '~/providers/customer/customer';\nimport { AddressForm } from '~/components/account/AddressForm';\nimport { ShippingMethodSelector } from '~/components/checkout/ShippingMethodSelector';\nimport { ShippingAddressSelector } from '~/components/checkout/ShippingAddressSelector';\nimport { getActiveOrder } from '~/providers/orders/order';\nimport { useTranslation } from 'react-i18next';\n\nexport async function loader({ request }: DataFunctionArgs) {\n  const session = await getSessionStorage().then((sessionStorage) =>\n    sessionStorage.getSession(request?.headers.get('Cookie')),\n  );\n\n  const activeOrder = await getActiveOrder({ request });\n\n  //check if there is an active order if not redirect to homepage\n  if (\n    !session ||\n    !activeOrder ||\n    !activeOrder.active ||\n    activeOrder.lines.length === 0\n  ) {\n    return redirect('/');\n  }\n  const { availableCountries } = await getAvailableCountries({ request });\n  const { eligibleShippingMethods } = await getEligibleShippingMethods({\n    request,\n  });\n  const { activeCustomer } = await getActiveCustomerAddresses({ request });\n  const error = session.get('activeOrderError');\n  return json({\n    availableCountries,\n    eligibleShippingMethods,\n    activeCustomer,\n    error,\n  });\n}\n\nexport default function CheckoutShipping() {\n  const { availableCountries, eligibleShippingMethods, activeCustomer, error } =\n    useLoaderData<typeof loader>();\n  const { activeOrderFetcher, activeOrder } = useOutletContext<OutletContext>();\n  const [customerFormChanged, setCustomerFormChanged] = useState(false);\n  const [addressFormChanged, setAddressFormChanged] = useState(false);\n  const [selectedAddressIndex, setSelectedAddressIndex] = useState(0);\n  let navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const { customer, shippingAddress } = activeOrder ?? {};\n  const isSignedIn = !!activeCustomer?.id;\n  const addresses = activeCustomer?.addresses ?? [];\n  const defaultFullName =\n    shippingAddress?.fullName ??\n    (customer ? `${customer.firstName} ${customer.lastName}` : ``);\n  const canProceedToPayment =\n    customer &&\n    ((shippingAddress?.streetLine1 && shippingAddress?.postalCode) ||\n      selectedAddressIndex != null) &&\n    activeOrder?.shippingLines?.length &&\n    activeOrder?.lines?.length;\n\n  const submitCustomerForm = (event: FormEvent<HTMLFormElement>) => {\n    const formData = new FormData(event.currentTarget);\n    const { emailAddress, firstName, lastName } = Object.fromEntries<any>(\n      formData.entries(),\n    );\n    const isValid = event.currentTarget.checkValidity();\n    if (\n      customerFormChanged &&\n      isValid &&\n      emailAddress &&\n      firstName &&\n      lastName\n    ) {\n      activeOrderFetcher.submit(formData, {\n        method: 'post',\n        action: '/api/active-order',\n      });\n      setCustomerFormChanged(false);\n    }\n  };\n  const submitAddressForm = (event: FormEvent<HTMLFormElement>) => {\n    const formData = new FormData(event.currentTarget);\n    const isValid = event.currentTarget.checkValidity();\n    if (addressFormChanged && isValid) {\n      setShippingAddress(formData);\n    }\n  };\n  const submitSelectedAddress = (index: number) => {\n    const selectedAddress = activeCustomer?.addresses?.[index];\n    if (selectedAddress) {\n      setSelectedAddressIndex(index);\n      const formData = new FormData();\n      Object.keys(selectedAddress).forEach((key) =>\n        formData.append(key, (selectedAddress as any)[key]),\n      );\n      formData.append('countryCode', selectedAddress.country.code);\n      formData.append('action', 'setCheckoutShipping');\n      setShippingAddress(formData);\n    }\n  };\n\n  function setShippingAddress(formData: FormData) {\n    if (shippingFormDataIsValid(formData)) {\n      activeOrderFetcher.submit(formData, {\n        method: 'post',\n        action: '/api/active-order',\n      });\n      setAddressFormChanged(false);\n    }\n  }\n\n  const submitSelectedShippingMethod = (value?: string) => {\n    if (value) {\n      activeOrderFetcher.submit(\n        {\n          action: 'setShippingMethod',\n          shippingMethodId: value,\n        },\n        {\n          method: 'post',\n          action: '/api/active-order',\n        },\n      );\n    }\n  };\n\n  function navigateToPayment() {\n    navigate('./payment');\n  }\n\n  return (\n    <div>\n      <div>\n        <h2 className=\"text-lg font-medium text-gray-900\">\n          {t('checkout.detailsTitle')}\n        </h2>\n\n        {isSignedIn ? (\n          <div>\n            <p className=\"mt-2 text-gray-600\">\n              {customer?.firstName} {customer?.lastName}\n            </p>\n            <p>{customer?.emailAddress}</p>\n          </div>\n        ) : (\n          <Form\n            method=\"post\"\n            action=\"/api/active-order\"\n            onBlur={submitCustomerForm}\n            onChange={() => setCustomerFormChanged(true)}\n            hidden={isSignedIn}\n          >\n            <input type=\"hidden\" name=\"action\" value=\"setOrderCustomer\" />\n            <div className=\"mt-4\">\n              <label\n                htmlFor=\"emailAddress\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                {t('account.emailAddress')}\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  type=\"email\"\n                  id=\"emailAddress\"\n                  name=\"emailAddress\"\n                  autoComplete=\"email\"\n                  defaultValue={customer?.emailAddress}\n                  className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                />\n              </div>\n              {error?.errorCode === 'EMAIL_ADDRESS_CONFLICT_ERROR' && (\n                <p className=\"mt-2 text-sm text-red-600\" id=\"email-error\">\n                  {error.message}\n                </p>\n              )}\n            </div>\n            <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4\">\n              <div>\n                <label\n                  htmlFor=\"firstName\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  {t('account.firstName')}\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    autoComplete=\"given-name\"\n                    defaultValue={customer?.firstName}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"lastName\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  {t('account.lastName')}\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    autoComplete=\"family-name\"\n                    defaultValue={customer?.lastName}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n            </div>\n          </Form>\n        )}\n      </div>\n\n      <Form\n        method=\"post\"\n        action=\"/api/active-order\"\n        onBlur={submitAddressForm}\n        onChange={() => setAddressFormChanged(true)}\n      >\n        <input type=\"hidden\" name=\"action\" value=\"setCheckoutShipping\" />\n        <div className=\"mt-10 border-t border-gray-200 pt-10\">\n          <h2 className=\"text-lg font-medium text-gray-900\">\n            {t('checkout.shippingTitle')}\n          </h2>\n        </div>\n        {isSignedIn && activeCustomer.addresses?.length ? (\n          <div>\n            <ShippingAddressSelector\n              addresses={activeCustomer.addresses}\n              selectedAddressIndex={selectedAddressIndex}\n              onChange={submitSelectedAddress}\n            />\n          </div>\n        ) : (\n          <AddressForm\n            availableCountries={activeOrder ? availableCountries : undefined}\n            address={shippingAddress}\n            defaultFullName={defaultFullName}\n          ></AddressForm>\n        )}\n      </Form>\n\n      <div className=\"mt-10 border-t border-gray-200 pt-10\">\n        <ShippingMethodSelector\n          eligibleShippingMethods={eligibleShippingMethods}\n          currencyCode={activeOrder?.currencyCode}\n          shippingMethodId={\n            activeOrder?.shippingLines[0]?.shippingMethod.id ?? ''\n          }\n          onChange={submitSelectedShippingMethod}\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        disabled={!canProceedToPayment}\n        onClick={navigateToPayment}\n        className={classNames(\n          canProceedToPayment\n            ? 'bg-primary-600 hover:bg-primary-700'\n            : 'bg-gray-400',\n          'flex w-full items-center justify-center space-x-2 mt-24 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500',\n        )}\n      >\n        <LockClosedIcon className=\"w-5 h-5\"></LockClosedIcon>\n        <span>{t('checkout.goToPayment')}</span>\n      </button>\n    </div>\n  );\n}\n", "import { AvailableCountriesQuery, OrderAddress } from '~/generated/graphql';\nimport { useTranslation } from 'react-i18next';\n\nexport function AddressForm({\n  address,\n  defaultFullName,\n  availableCountries,\n}: {\n  address?: OrderAddress | null;\n  defaultFullName?: string;\n  availableCountries?: AvailableCountriesQuery['availableCountries'];\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4\">\n      <div>\n        <label\n          htmlFor=\"fullName\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          {t('account.fullName')}\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            id=\"fullName\"\n            name=\"fullName\"\n            defaultValue={defaultFullName}\n            autoComplete=\"given-name\"\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div className=\"sm:col-span-2\">\n        <label\n          htmlFor=\"company\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          {t('address.company')}\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"company\"\n            id=\"company\"\n            defaultValue={address?.company ?? ''}\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div className=\"sm:col-span-2\">\n        <label\n          htmlFor=\"streetLine1\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          {t('address.streetLine1')}\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"streetLine1\"\n            id=\"streetLine1\"\n            defaultValue={address?.streetLine1 ?? ''}\n            autoComplete=\"street-address\"\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div className=\"sm:col-span-2\">\n        <label\n          htmlFor=\"streetLine2\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          {t('address.streetLine2')}\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"streetLine2\"\n            id=\"streetLine2\"\n            defaultValue={address?.streetLine2 ?? ''}\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"city\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          {t('address.city')}\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"city\"\n            id=\"city\"\n            autoComplete=\"address-level2\"\n            defaultValue={address?.city ?? ''}\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"countryCode\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          {t('address.country')}\n        </label>\n        <div className=\"mt-1\">\n          {availableCountries && (\n            <select\n              id=\"countryCode\"\n              name=\"countryCode\"\n              defaultValue={address?.countryCode ?? 'US'}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n            >\n              {availableCountries.map((item) => (\n                <option key={item.id} value={item.code}>\n                  {item.name}\n                </option>\n              ))}\n            </select>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"province\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          {t('address.province')}\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"province\"\n            id=\"province\"\n            defaultValue={address?.province ?? ''}\n            autoComplete=\"address-level1\"\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"postalCode\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          {t('address.postalCode')}\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"postalCode\"\n            id=\"postalCode\"\n            defaultValue={address?.postalCode ?? ''}\n            autoComplete=\"postal-code\"\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div className=\"sm:col-span-2\">\n        <label\n          htmlFor=\"phoneNumber\"\n          className=\"block text-sm font-medium text-gray-700\"\n        >\n          {t('address.phoneNumber')}\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"text\"\n            name=\"phoneNumber\"\n            id=\"phoneNumber\"\n            defaultValue={address?.phoneNumber ?? ''}\n            autoComplete=\"tel\"\n            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { RadioGroup } from '@headlessui/react';\nimport { classNames } from '~/utils/class-names';\nimport { Price } from '~/components/products/Price';\nimport { CheckCircleIcon } from '@heroicons/react/24/solid';\nimport {\n  CurrencyCode,\n  EligibleShippingMethodsQuery,\n} from '~/generated/graphql';\nimport { useTranslation } from 'react-i18next';\n\nexport function ShippingMethodSelector({\n  eligibleShippingMethods,\n  currencyCode,\n  shippingMethodId,\n  onChange,\n}: {\n  eligibleShippingMethods: EligibleShippingMethodsQuery['eligibleShippingMethods'];\n  shippingMethodId: string | undefined;\n  onChange: (value?: string) => void;\n  currencyCode?: CurrencyCode;\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <RadioGroup value={shippingMethodId} onChange={onChange}>\n      <RadioGroup.Label className=\"text-lg font-medium text-gray-900\">\n        {t('checkout.deliveryMethod')}\n      </RadioGroup.Label>\n\n      <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4\">\n        {eligibleShippingMethods.map((shippingMethod) => (\n          <RadioGroup.Option\n            key={shippingMethod.id}\n            value={shippingMethod.id}\n            className={({ checked, active }) =>\n              classNames(\n                checked ? 'border-transparent' : 'border-gray-300',\n                active ? 'ring-2 ring-primary-500' : '',\n                'relative bg-white border rounded-lg shadow-sm p-4 flex cursor-pointer focus:outline-none',\n              )\n            }\n          >\n            {({ checked, active }) => (\n              <>\n                <span className=\"flex-1 flex\">\n                  <span className=\"flex flex-col\">\n                    <RadioGroup.Label\n                      as=\"span\"\n                      className=\"block text-sm font-medium text-gray-900\"\n                    >\n                      {shippingMethod.name}\n                    </RadioGroup.Label>\n                    <RadioGroup.Description\n                      as=\"span\"\n                      className=\"mt-6 text-sm font-medium text-gray-900\"\n                    >\n                      <Price\n                        priceWithTax={shippingMethod.priceWithTax}\n                        currencyCode={currencyCode}\n                      ></Price>\n                    </RadioGroup.Description>\n                  </span>\n                </span>\n                {checked ? (\n                  <CheckCircleIcon\n                    className=\"h-5 w-5 text-primary-600\"\n                    aria-hidden=\"true\"\n                  />\n                ) : null}\n                <span\n                  className={classNames(\n                    active ? 'border' : 'border-2',\n                    checked ? 'border-primary-500' : 'border-transparent',\n                    'absolute -inset-px rounded-lg pointer-events-none',\n                  )}\n                  aria-hidden=\"true\"\n                />\n              </>\n            )}\n          </RadioGroup.Option>\n        ))}\n      </div>\n    </RadioGroup>\n  );\n}\n", "import { RadioGroup } from '@headlessui/react';\nimport { classNames } from '~/utils/class-names';\nimport { Price } from '~/components/products/Price';\nimport { CheckCircleIcon } from '@heroicons/react/24/solid';\nimport {\n  ActiveCustomerAddressesQuery,\n  CurrencyCode,\n  EligibleShippingMethodsQuery,\n} from '~/generated/graphql';\n\nexport type SelectedAddress = NonNullable<\n  NonNullable<ActiveCustomerAddressesQuery['activeCustomer']>['addresses']\n>[number];\n\nexport function ShippingAddressSelector({\n  addresses,\n  selectedAddressIndex,\n  onChange,\n}: {\n  addresses: SelectedAddress[];\n  selectedAddressIndex: number;\n  onChange: (value: number) => void;\n}) {\n  return (\n    <RadioGroup value={selectedAddressIndex} onChange={onChange}>\n      <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4\">\n        {(addresses || []).map((address, index) => (\n          <RadioGroup.Option\n            key={index}\n            value={index}\n            className={({ checked, active }) =>\n              classNames(\n                checked ? 'border-transparent' : 'border-gray-300',\n                active ? 'ring-2 ring-primary-500' : '',\n                'relative bg-white border rounded-lg shadow-sm p-4 flex cursor-pointer focus:outline-none',\n              )\n            }\n          >\n            {({ checked, active }) => (\n              <>\n                <span className=\"flex-1 flex\">\n                  <span className=\"flex flex-col\">\n                    <RadioGroup.Label\n                      as=\"span\"\n                      className=\"block text-sm font-medium text-gray-900\"\n                    >\n                      {address.streetLine1}, {address.postalCode}\n                    </RadioGroup.Label>\n                    <RadioGroup.Description\n                      as=\"span\"\n                      className=\"mt-6 text-sm text-gray-800\"\n                    >\n                      <ul>\n                        <li>{address.streetLine1}</li>\n                        <li>{address.streetLine2}</li>\n                        <li>{address.city}</li>\n                        <li>{address.province}</li>\n                        <li>{address.postalCode}</li>\n                        <li>{address.country.name}</li>\n                      </ul>\n                    </RadioGroup.Description>\n                  </span>\n                </span>\n                {checked ? (\n                  <CheckCircleIcon\n                    className=\"h-5 w-5 text-primary-600\"\n                    aria-hidden=\"true\"\n                  />\n                ) : null}\n                <span\n                  className={classNames(\n                    active ? 'border' : 'border-2',\n                    checked ? 'border-primary-500' : 'border-transparent',\n                    'absolute -inset-px rounded-lg pointer-events-none',\n                  )}\n                  aria-hidden=\"true\"\n                />\n              </>\n            )}\n          </RadioGroup.Option>\n        ))}\n      </div>\n    </RadioGroup>\n  );\n}\n", "import { CheckCircleIcon } from '@heroicons/react/24/outline';\nimport { Form } from '@remix-run/react';\nimport { redirect } from '@remix-run/server-runtime';\nimport { useTranslation } from 'react-i18next';\n\nexport async function action() {\n  return redirect('/');\n}\n\nexport default function SuccessPage() {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md border-2 rounded-md border-green-600\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <Form className=\"space-y-6\" method=\"post\">\n            <div>\n              <div className=\"flex justify-center\">\n                <div className=\"flex-grow\">\n                  <CheckCircleIcon\n                    className=\"h-20 w-20 m-auto mb-2 text-green-600\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              </div>\n              <p className=\"text-center mb-5\">{t('account.createdMessage')}</p>\n              <button\n                type=\"submit\"\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n              >\n                {t('account.goHome')}\n              </button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { CheckIcon, PencilIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { useActionData, useLoaderData, useNavigation } from '@remix-run/react';\nimport { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport { withZod } from '@remix-validated-form/with-zod';\nimport { useEffect, useRef, useState } from 'react';\nimport { ValidatedForm, validationError } from 'remix-validated-form';\nimport { z } from 'zod';\nimport { Button } from '~/components/Button';\nimport { ErrorMessage } from '~/components/ErrorMessage';\nimport { HighlightedButton } from '~/components/HighlightedButton';\nimport { Input } from '~/components/Input';\nimport Modal from '~/components/modal/Modal';\nimport {\n  requestUpdateCustomerEmailAddress,\n  updateCustomer,\n} from '~/providers/account/account';\nimport { getActiveCustomerDetails } from '~/providers/customer/customer';\nimport useToggleState from '~/utils/use-toggle-state';\nimport { replaceEmptyString } from '~/utils/validation';\nimport { useTranslation } from 'react-i18next';\n\nenum FormIntent {\n  UpdateEmail = 'updateEmail',\n  UpdateDetails = 'updateDetails',\n}\n\nexport const validator = withZod(\n  z.object({\n    title: z.string(),\n    firstName: z.string().min(1, { message: 'First name is required' }),\n    lastName: z.string().min(1, { message: 'Last name is required' }),\n    phoneNumber: z.string(),\n  }),\n);\n\nconst changeEmailValidator = withZod(\n  z.object({\n    email: z\n      .string()\n      .min(1, { message: 'Email is required' })\n      .email('Must be a valid email'),\n    password: z.string().min(1, { message: 'Password is required' }),\n  }),\n);\n\nexport async function loader({ request }: DataFunctionArgs) {\n  const { activeCustomer } = await getActiveCustomerDetails({ request });\n  if (!activeCustomer) {\n    return redirect('/sign-in');\n  }\n  return json({ activeCustomer });\n}\n\nfunction isFormError(err: unknown): err is FormError {\n  return (err as FormError).message !== undefined;\n}\n\nfunction isEmailSavedResponse(\n  response: unknown,\n): response is EmailSavedResponse {\n  return (response as EmailSavedResponse).newEmailAddress !== undefined;\n}\n\nfunction isCustomerUpdatedResponse(\n  response: unknown,\n): response is CustomerUpdatedResponse {\n  return (response as CustomerUpdatedResponse).customerUpdated !== undefined;\n}\n\ntype FormError = {\n  message: string;\n  intent?: string;\n};\n\ntype EmailSavedResponse = {\n  newEmailAddress: string;\n};\n\ntype CustomerUpdatedResponse = {\n  customerUpdated: true;\n};\n\nexport async function action({ request }: DataFunctionArgs) {\n  const body = await request.formData();\n  const intent = body.get('intent') as FormIntent | null;\n\n  const formError = (formError: FormError, init?: number | ResponseInit) => {\n    return json<FormError>(formError, init);\n  };\n\n  if (intent === FormIntent.UpdateEmail) {\n    const result = await changeEmailValidator.validate(body);\n\n    if (result.error) {\n      return validationError(result.error);\n    }\n\n    const { email, password } = result.data;\n\n    const updateResult = await requestUpdateCustomerEmailAddress(\n      password,\n      email,\n      { request },\n    );\n\n    if (updateResult.__typename !== 'Success') {\n      return formError(\n        { message: updateResult.message, intent: FormIntent.UpdateEmail },\n        {\n          status: 401,\n        },\n      );\n    }\n\n    return json<EmailSavedResponse>(\n      {\n        newEmailAddress: email,\n      },\n      { status: 200 },\n    );\n  }\n\n  if (intent === FormIntent.UpdateDetails) {\n    const result = await validator.validate(body);\n\n    if (result.error) {\n      return validationError(result.error);\n    }\n\n    const { title, firstName, lastName, phoneNumber } = result.data;\n    await updateCustomer(\n      { title, firstName, lastName, phoneNumber },\n      { request },\n    );\n\n    return json({\n      customerUpdated: true,\n    });\n  }\n\n  return formError({ message: 'No valid form intent' }, { status: 401 });\n}\n\nexport default function AccountDetails() {\n  const { activeCustomer } = useLoaderData<typeof loader>();\n  const actionDataHook = useActionData<typeof action>();\n  const { t } = useTranslation();\n\n  const { firstName, lastName, title, phoneNumber, emailAddress } =\n    activeCustomer;\n  const fullName = `${title ? title + ' ' : ''}${firstName} ${lastName}`;\n\n  const { state } = useNavigation();\n  const [formError, setFormError] = useState<FormError>();\n  const [emailSavedResponse, setEmailSavedResponse] =\n    useState<EmailSavedResponse>();\n  const [showChangeEmailModal, openChangeEmailModal, closeChangeEmailModal] =\n    useToggleState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const emailInputRef = useRef<HTMLInputElement>(null);\n  const formRef = useRef<HTMLFormElement>(null);\n\n  useEffect(() => {\n    if (!actionDataHook) {\n      return;\n    }\n\n    if (isEmailSavedResponse(actionDataHook)) {\n      setEmailSavedResponse(actionDataHook);\n      closeChangeEmailModal();\n      return;\n    }\n\n    if (isCustomerUpdatedResponse(actionDataHook)) {\n      setIsEditing(false);\n      setFormError(undefined);\n      return;\n    }\n\n    if (isFormError(actionDataHook)) {\n      setFormError(actionDataHook);\n      return;\n    }\n  }, [actionDataHook]);\n\n  useEffect(() => {\n    formRef.current?.reset();\n  }, [isEditing]);\n\n  return (\n    <>\n      <Modal\n        isOpen={showChangeEmailModal}\n        close={() => closeChangeEmailModal()}\n        afterOpen={() => emailInputRef.current?.focus()}\n        size=\"small\"\n      >\n        <ValidatedForm validator={changeEmailValidator} method=\"post\">\n          <Modal.Title>{t('account.changeEmailModal.title')}</Modal.Title>\n          <Modal.Body>\n            <div className=\"space-y-4 my-8\">\n              <p>{t('account.changeEmailModal.heading')}</p>\n              <p>\n                {t('account.changeEmailModal.currentEmail')}{' '}\n                <strong>{emailAddress}</strong>\n              </p>\n\n              <div className=\"space-y-1\">\n                <input\n                  type=\"hidden\"\n                  name=\"intent\"\n                  value={FormIntent.UpdateEmail}\n                />\n                <Input\n                  ref={emailInputRef}\n                  autoFocus\n                  label={t('account.changeEmailModal.new')}\n                  name=\"email\"\n                  required\n                />\n                <Input\n                  label={t('account.password')}\n                  type=\"password\"\n                  name=\"password\"\n                  required\n                />\n                <input type=\"submit\" hidden />\n              </div>\n              {formError && formError.intent === FormIntent.UpdateEmail && (\n                <ErrorMessage\n                  heading={t('account.changeEmailModal.errorMessage')}\n                  message={formError.message}\n                />\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button type=\"reset\" onClick={() => closeChangeEmailModal()}>\n              {t('common.cancel')}\n            </Button>\n            <HighlightedButton\n              type=\"submit\"\n              isSubmitting={state === 'submitting'}\n            >\n              {t('common.save')}\n            </HighlightedButton>\n          </Modal.Footer>\n        </ValidatedForm>\n      </Modal>\n\n      <div className=\"space-y-10 p-4 mt-5\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"col-span-2\">\n            <h3 className=\"text-sm text-gray-500\">{t('account.email')}</h3>\n            {emailSavedResponse ? (\n              <span>\n                <span className=\"italic text-gray-800\">\n                  {emailSavedResponse.newEmailAddress}\n                </span>\n                <span className=\"ml-2 bg-blue-100 text-blue-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300\">\n                  {t('account.changeEmailConfirmation')}\n                </span>\n              </span>\n            ) : (\n              <span>{emailAddress}</span>\n            )}\n          </div>\n          <div className=\"col-span-2\">\n            <HighlightedButton\n              type=\"button\"\n              onClick={() => openChangeEmailModal()}\n            >\n              <PencilIcon className=\"w-4 h-4\" />{' '}\n              {t('account.changeEmailButton')}\n            </HighlightedButton>\n          </div>\n        </div>\n        <div className=\"border-t border-gray-200 pt-10\">\n          <ValidatedForm\n            validator={validator}\n            formRef={formRef}\n            method=\"post\"\n            id=\"details\"\n            defaultValues={{\n              title: title ?? undefined,\n              firstName,\n              lastName,\n              phoneNumber: phoneNumber ?? undefined,\n            }}\n          >\n            <input\n              type=\"hidden\"\n              name=\"intent\"\n              value={FormIntent.UpdateDetails}\n            />\n            <div className=\"gap-4 grid sm:grid-cols-2\">\n              {isEditing && (\n                <div className=\"col-span-2\">\n                  <Input\n                    label={t('account.title')}\n                    name=\"title\"\n                    className=\"sm:w-1/4\"\n                  />\n                </div>\n              )}\n              {isEditing ? (\n                <>\n                  <div>\n                    <Input\n                      label={t('account.firstName')}\n                      name=\"firstName\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <Input\n                      label={t('account.lastName')}\n                      name=\"lastName\"\n                      required\n                    />\n                  </div>\n                </>\n              ) : (\n                <div>\n                  <h3 className=\"text-sm text-gray-500\">\n                    {t('account.fullName')}\n                  </h3>\n                  {replaceEmptyString(fullName)}\n                </div>\n              )}\n\n              <div>\n                {isEditing ? (\n                  <Input label={t('account.phoneNumber')} name=\"phoneNumber\" />\n                ) : (\n                  <div>\n                    <h3 className=\"text-sm text-gray-500\">\n                      {t('account.phoneNumber')}\n                    </h3>\n                    {replaceEmptyString(phoneNumber)}\n                  </div>\n                )}\n              </div>\n              <div className=\"col-span-2\">\n                {isEditing ? (\n                  <>\n                    {formError &&\n                      formError.intent === FormIntent.UpdateDetails && (\n                        <ErrorMessage\n                          heading={t('account.errorMessage')}\n                          message={formError.message}\n                        />\n                      )}\n\n                    <div className=\"flex gap-x-4\">\n                      <HighlightedButton\n                        type=\"submit\"\n                        isSubmitting={state === 'submitting'}\n                      >\n                        <CheckIcon className=\"w-4 h-4\" /> {t('common.save')}\n                      </HighlightedButton>\n\n                      <Button type=\"reset\" onClick={() => setIsEditing(false)}>\n                        <XMarkIcon className=\"w-4 h-4\" /> {t('common.cancel')}\n                      </Button>\n                    </div>\n                  </>\n                ) : (\n                  <HighlightedButton\n                    type=\"button\"\n                    onClick={() => setIsEditing(true)}\n                  >\n                    <PencilIcon className=\"w-4 h-4\" /> {t('common.edit')}\n                  </HighlightedButton>\n                )}\n              </div>\n            </div>\n          </ValidatedForm>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { DataFunctionArgs, json } from '@remix-run/server-runtime';\nimport { useState } from 'react';\nimport { Price } from '~/components/products/Price';\nimport { getProductBySlug } from '~/providers/products/products';\nimport {\n  FetcherWithComponents,\n  ShouldRevalidateFunction,\n  useLoaderData,\n  useOutletContext,\n  MetaFunction,\n} from '@remix-run/react';\nimport { CheckIcon, HeartIcon, PhotoIcon } from '@heroicons/react/24/solid';\nimport { Breadcrumbs } from '~/components/Breadcrumbs';\nimport { APP_META_TITLE } from '~/constants';\nimport { CartLoaderData } from '~/routes/api.active-order';\nimport { getSessionStorage } from '~/sessions';\nimport { ErrorCode, ErrorResult } from '~/generated/graphql';\nimport Alert from '~/components/Alert';\nimport { StockLevelLabel } from '~/components/products/StockLevelLabel';\nimport TopReviews from '~/components/products/TopReviews';\nimport { ScrollableContainer } from '~/components/products/ScrollableContainer';\nimport { useTranslation } from 'react-i18next';\n\nexport const meta: MetaFunction = ({ data }) => {\n  return [\n    {\n      title: data?.product?.name\n        ? `${data.product.name} - ${APP_META_TITLE}`\n        : APP_META_TITLE,\n    },\n  ];\n};\n\nexport async function loader({ params, request }: DataFunctionArgs) {\n  const { product } = await getProductBySlug(params.slug!, { request });\n  if (!product) {\n    throw new Response('Not Found', {\n      status: 404,\n    });\n  }\n  const sessionStorage = await getSessionStorage();\n  const session = await sessionStorage.getSession(\n    request?.headers.get('Cookie'),\n  );\n  const error = session.get('activeOrderError');\n  return json(\n    { product: product!, error },\n    {\n      headers: {\n        'Set-Cookie': await sessionStorage.commitSession(session),\n      },\n    },\n  );\n}\n\nexport const shouldRevalidate: ShouldRevalidateFunction = () => true;\n\nexport default function ProductSlug() {\n  const { product, error } = useLoaderData<typeof loader>();\n  const { activeOrderFetcher } = useOutletContext<{\n    activeOrderFetcher: FetcherWithComponents<CartLoaderData>;\n  }>();\n  const { activeOrder } = activeOrderFetcher.data ?? {};\n  const addItemToOrderError = getAddItemToOrderError(error);\n  const { t } = useTranslation();\n\n  if (!product) {\n    return <div>{t('product.notFound')}</div>;\n  }\n\n  const findVariantById = (id: string) =>\n    product.variants.find((v) => v.id === id);\n\n  const [selectedVariantId, setSelectedVariantId] = useState(\n    product.variants[0].id,\n  );\n  const selectedVariant = findVariantById(selectedVariantId);\n  if (!selectedVariant) {\n    setSelectedVariantId(product.variants[0].id);\n  }\n\n  const qtyInCart =\n    activeOrder?.lines.find((l) => l.productVariant.id === selectedVariantId)\n      ?.quantity ?? 0;\n\n  const asset = product.assets[0];\n  const brandName = product.facetValues.find(\n    (fv) => fv.facet.code === 'brand',\n  )?.name;\n\n  const [featuredAsset, setFeaturedAsset] = useState(\n    selectedVariant?.featuredAsset,\n  );\n\n  return (\n    <div>\n      <div className=\"max-w-6xl mx-auto px-4\">\n        <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          {product.name}\n        </h2>\n        <Breadcrumbs\n          items={\n            product.collections[product.collections.length - 1]?.breadcrumbs ??\n            []\n          }\n        ></Breadcrumbs>\n        <div className=\"lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-start mt-4 md:mt-12\">\n          {/* Image gallery */}\n          <div className=\"w-full max-w-2xl mx-auto sm:block lg:max-w-none\">\n            <span className=\"rounded-md overflow-hidden\">\n              <div className=\"w-full h-full object-center object-cover rounded-lg\">\n                <img\n                  src={\n                    (featuredAsset?.preview || product.featuredAsset?.preview) +\n                    '?w=800'\n                  }\n                  alt={product.name}\n                  className=\"w-full h-full object-center object-cover rounded-lg\"\n                />\n              </div>\n            </span>\n\n            {product.assets.length > 1 && (\n              <ScrollableContainer>\n                {product.assets.map((asset) => (\n                  <div\n                    className={`basis-1/3 md:basis-1/4 flex-shrink-0 select-none touch-pan-x rounded-lg ${\n                      featuredAsset?.id == asset.id\n                        ? 'outline outline-2 outline-primary outline-offset-[-2px]'\n                        : ''\n                    }`}\n                    onClick={() => {\n                      setFeaturedAsset(asset);\n                    }}\n                  >\n                    <img\n                      draggable=\"false\"\n                      className=\"rounded-lg select-none h-24 w-full object-cover\"\n                      src={\n                        asset.preview +\n                        '?preset=full' /* not ideal, but technically prevents loading 2 seperate images */\n                      }\n                    />\n                  </div>\n                ))}\n              </ScrollableContainer>\n            )}\n          </div>\n\n          {/* Product info */}\n          <div className=\"mt-10 px-4 sm:px-0 sm:mt-16 lg:mt-0\">\n            <div className=\"\">\n              <h3 className=\"sr-only\">{t('product.description')}</h3>\n\n              <div\n                className=\"text-base text-gray-700\"\n                dangerouslySetInnerHTML={{\n                  __html: product.description,\n                }}\n              />\n            </div>\n            <activeOrderFetcher.Form method=\"post\" action=\"/api/active-order\">\n              <input type=\"hidden\" name=\"action\" value=\"addItemToOrder\" />\n              {1 < product.variants.length ? (\n                <div className=\"mt-4\">\n                  <label\n                    htmlFor=\"option\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    {t('product.selectOption')}\n                  </label>\n                  <select\n                    className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n                    id=\"productVariant\"\n                    value={selectedVariantId}\n                    name=\"variantId\"\n                    onChange={(e) => {\n                      setSelectedVariantId(e.target.value);\n\n                      const variant = findVariantById(e.target.value);\n                      if (variant) {\n                        setFeaturedAsset(variant!.featuredAsset);\n                      }\n                    }}\n                  >\n                    {product.variants.map((variant) => (\n                      <option key={variant.id} value={variant.id}>\n                        {variant.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              ) : (\n                <input\n                  type=\"hidden\"\n                  name=\"variantId\"\n                  value={selectedVariantId}\n                ></input>\n              )}\n\n              <div className=\"mt-10 flex flex-col sm:flex-row sm:items-center\">\n                <p className=\"text-3xl text-gray-900 mr-4\">\n                  <Price\n                    priceWithTax={selectedVariant?.priceWithTax}\n                    currencyCode={selectedVariant?.currencyCode}\n                  ></Price>\n                </p>\n                <div className=\"flex sm:flex-col1 align-baseline\">\n                  <button\n                    type=\"submit\"\n                    className={`max-w-xs flex-1 ${\n                      activeOrderFetcher.state !== 'idle'\n                        ? 'bg-gray-400'\n                        : qtyInCart === 0\n                        ? 'bg-primary-600 hover:bg-primary-700'\n                        : 'bg-green-600 active:bg-green-700 hover:bg-green-700'\n                    }\n                                     transition-colors border border-transparent rounded-md py-3 px-8 flex items-center\n                                      justify-center text-base font-medium text-white focus:outline-none\n                                      focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-primary-500 sm:w-full`}\n                    disabled={activeOrderFetcher.state !== 'idle'}\n                  >\n                    {qtyInCart ? (\n                      <span className=\"flex items-center\">\n                        <CheckIcon className=\"w-5 h-5 mr-1\" /> {qtyInCart}{' '}\n                        {t('product.inCart')}\n                      </span>\n                    ) : (\n                      t('product.addToCart')\n                    )}\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"ml-4 py-3 px-3 rounded-md flex items-center justify-center text-gray-400 hover:bg-gray-100 hover:text-gray-500\"\n                  >\n                    <HeartIcon\n                      className=\"h-6 w-6 flex-shrink-0\"\n                      aria-hidden=\"true\"\n                    />\n                    <span className=\"sr-only\">\n                      {t('product.addToFavorites')}\n                    </span>\n                  </button>\n                </div>\n              </div>\n              <div className=\"mt-2 flex items-center space-x-2\">\n                <span className=\"text-gray-500\">{selectedVariant?.sku}</span>\n                <StockLevelLabel stockLevel={selectedVariant?.stockLevel} />\n              </div>\n              {addItemToOrderError && (\n                <div className=\"mt-4\">\n                  <Alert message={addItemToOrderError} />\n                </div>\n              )}\n\n              <section className=\"mt-12 pt-12 border-t text-xs\">\n                <h3 className=\"text-gray-600 font-bold mb-2\">\n                  {t('product.shippingAndReturns')}\n                </h3>\n                <div className=\"text-gray-500 space-y-1\">\n                  <p>{t('product.shippingInfo')}</p>\n                  <p>{t('product.shippingCostsInfo')}</p>\n                  <p>{t('product.returnsInfo')}</p>\n                </div>\n              </section>\n            </activeOrderFetcher.Form>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-24\">\n        <TopReviews></TopReviews>\n      </div>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"max-w-6xl mx-auto px-4\">\n      <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n        {t('product.notFound')}\n      </h2>\n      <div className=\"lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-start mt-4 md:mt-12\">\n        {/* Image gallery */}\n        <div className=\"w-full max-w-2xl mx-auto sm:block lg:max-w-none\">\n          <span className=\"rounded-md overflow-hidden\">\n            <div className=\"w-full h-96 bg-slate-200 rounded-lg flex content-center justify-center\">\n              <PhotoIcon className=\"w-48 text-white\"></PhotoIcon>\n            </div>\n          </span>\n        </div>\n\n        {/* Product info */}\n        <div className=\"mt-10 px-4 sm:px-0 sm:mt-16 lg:mt-0\">\n          <div className=\"\">{t('product.notFoundInfo')}</div>\n          <div className=\"flex-1 space-y-3 py-1\">\n            <div className=\"h-2 bg-slate-200 rounded\"></div>\n            <div className=\"space-y-3\">\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div className=\"h-2 bg-slate-200 rounded col-span-2\"></div>\n                <div className=\"h-2 bg-slate-200 rounded col-span-1\"></div>\n              </div>\n              <div className=\"h-2 bg-slate-200 rounded\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction getAddItemToOrderError(error?: ErrorResult): string | undefined {\n  if (!error || !error.errorCode) {\n    return undefined;\n  }\n  switch (error.errorCode) {\n    case ErrorCode.OrderModificationError:\n    case ErrorCode.OrderLimitError:\n    case ErrorCode.NegativeQuantityError:\n    case ErrorCode.InsufficientStockError:\n      return error.message;\n  }\n}\n", "import { XCircleIcon } from '@heroicons/react/24/solid';\n\nexport default function Alert({ message }: { message: string }) {\n  return (\n    <div className=\"rounded-md bg-red-50 p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800\">{message}</h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "export type StockLevel = 'IN_STOCK' | 'OUT_OF_STOCK' | 'LOW_STOCK';\nimport { useTranslation } from 'react-i18next';\n\nexport function StockLevelLabel({ stockLevel }: { stockLevel?: string }) {\n  const { t } = useTranslation();\n\n  let stockLevelLabel = '';\n  let badgeClasses = 'bg-gray-100 text-gray-800';\n  switch (stockLevel as StockLevel) {\n    case 'IN_STOCK':\n      stockLevelLabel = t('product.inStock');\n      badgeClasses = 'bg-green-100 text-green-800';\n      break;\n    case 'OUT_OF_STOCK':\n      stockLevelLabel = t('product.outOfStock');\n      badgeClasses = 'bg-red-100 text-red-800';\n      break;\n    case 'LOW_STOCK':\n      stockLevelLabel = t('product.lowStock');\n      badgeClasses = 'bg-yellow-100 text-yellow-800';\n      break;\n  }\n\n  return (\n    <span\n      className={\n        'inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ' +\n        badgeClasses\n      }\n    >\n      {stockLevelLabel}\n    </span>\n  );\n}\n", "/* This example requires Tailwind CSS v2.0+ */\nimport { StarIcon } from '@heroicons/react/24/solid';\nimport { classNames } from '~/utils/class-names';\nimport { useTranslation } from 'react-i18next';\n\ninterface Review {\n  id: number;\n  title: string;\n  rating: number;\n  content: string;\n  author: string;\n  date: string;\n  datetime: string;\n}\n\nconst reviews: Review[] = [\n  {\n    id: 1,\n    title: 'I love it!',\n    rating: 5,\n    content: `\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n            `,\n    author: 'Ryan F',\n    date: 'May 25, 2022',\n    datetime: '2022-05-25',\n  },\n  {\n    id: 2,\n    title: 'Awesome product',\n    rating: 5,\n    content: `\n              <p>Ornare quam viverra orci sagittis eu volutpat odio. Massa id neque aliquam vestibulum morbi blandit cursus risus at. Ultrices tincidunt arcu non sodales neque.</p> \n              <p>Mattis pellentesque id nibh tortor id aliquet lectus proin nibh. Pellentesque diam volutpat commodo sed egestas egestas fringilla. Sodales ut etiam sit amet nisl purus in mollis nunc. Turpis egestas integer eget aliquet nibh praesent tristique magna. Augue interdum velit euismod in pellentesque massa placerat duis ultricies. Justo laoreet sit amet cursus sit amet.</p>\n            `,\n    author: 'Kent D',\n    date: 'May 24, 2022',\n    datetime: '2022-05-24',\n  },\n  {\n    id: 3,\n    title: 'Really happy with this purchase',\n    rating: 5,\n    content: `\n              <p>Nisi est sit amet facilisis magna etiam tempor orci eu.</p> \n              <p>Elit duis tristique sollicitudin nibh sit amet commodo. Dolor sit amet consectetur adipiscing elit. Lorem dolor sed viverra ipsum nunc. Accumsan tortor posuere ac ut consequat semper. Augue mauris augue neque gravida in fermentum et sollicitudin ac.</p>\n            `,\n    author: 'Michael J',\n    date: 'May 24, 2022',\n    datetime: '2022-05-24',\n  },\n];\n\nexport default function TopReviews() {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"\">\n      <div className=\"max-w-2xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:max-w-6xl lg:px-8\">\n        <h2 className=\"text-lg font-medium text-gray-900\">\n          {t('product.recentReviews')}\n        </h2>\n        <div className=\"mt-6 pb-10 border-t border-gray-200 divide-y divide-gray-200 space-y-10\">\n          {reviews.map((review) => (\n            <div\n              key={review.id}\n              className=\"pt-10 lg:grid lg:grid-cols-12 lg:gap-x-8\"\n            >\n              <div className=\"lg:col-start-5 lg:col-span-8 xl:col-start-4 xl:col-span-9 xl:grid xl:grid-cols-3 xl:gap-x-8 xl:items-start\">\n                <div className=\"flex items-center xl:col-span-1\">\n                  <div className=\"flex items-center\">\n                    {[0, 1, 2, 3, 4].map((rating) => (\n                      <StarIcon\n                        key={rating}\n                        className={classNames(\n                          review.rating > rating\n                            ? 'text-yellow-400'\n                            : 'text-gray-200',\n                          'h-5 w-5 flex-shrink-0',\n                        )}\n                        aria-hidden=\"true\"\n                      />\n                    ))}\n                  </div>\n                  <p className=\"ml-3 text-sm text-gray-700\">\n                    {review.rating}\n                    <span className=\"sr-only\">\n                      {' '}\n                      {t('product.recentRating')}\n                    </span>\n                  </p>\n                </div>\n\n                <div className=\"mt-4 lg:mt-6 xl:mt-0 xl:col-span-2\">\n                  <h3 className=\"text-sm font-medium text-gray-900\">\n                    {review.title}\n                  </h3>\n\n                  <div\n                    className=\"mt-3 space-y-6 text-sm text-gray-500\"\n                    dangerouslySetInnerHTML={{\n                      __html: review.content,\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"mt-6 flex items-center text-sm lg:mt-0 lg:col-start-1 lg:col-span-4 lg:row-start-1 lg:flex-col lg:items-start xl:col-span-3\">\n                <p className=\"font-medium text-gray-900\">{review.author}</p>\n                <time\n                  dateTime={review.datetime}\n                  className=\"ml-4 border-l border-gray-200 pl-4 text-gray-500 lg:ml-0 lg:mt-2 lg:border-0 lg:pl-0\"\n                >\n                  {review.date}\n                </time>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import React, { ReactNode, useRef, RefObject, useEffect } from 'react';\n\nexport function ScrollableContainer({ children }: { children: ReactNode[] }) {\n  const spanRef: RefObject<HTMLSpanElement> | undefined = useRef(null);\n\n  // kindly inspired from https://htmldom.dev/drag-to-scroll/\n  let pos = {\n    top: 0,\n    left: 0,\n    x: 0,\n    y: 0,\n  };\n\n  const mouseDownHandler = (e: React.MouseEvent<HTMLSpanElement>) => {\n    const span = spanRef.current!;\n\n    pos = {\n      left: span.scrollLeft,\n      top: span.scrollTop,\n      x: e.clientX,\n      y: e.clientY,\n    };\n\n    span.style.cursor = 'grabbing';\n    span.style.userSelect = 'none';\n\n    document.addEventListener('mousemove', mouseMoveHandler);\n    document.addEventListener('mouseup', mouseUpHandler);\n  };\n\n  const mouseMoveHandler = (e: MouseEvent) => {\n    const span = spanRef.current!;\n\n    const dx = e.clientX - pos.x;\n    const dy = e.clientY - pos.y;\n\n    span.scrollTop = pos.top - dy;\n    span.scrollLeft = pos.left - dx;\n  };\n\n  const mouseUpHandler = () => {\n    const span = spanRef.current!;\n\n    document.removeEventListener('mousemove', mouseMoveHandler);\n    document.removeEventListener('mouseup', mouseUpHandler);\n\n    span.style.cursor = 'grab';\n    span.style.removeProperty('user-select');\n  };\n\n  const wheelHandler = (e: WheelEvent) => {\n    const diff = e.deltaY || e.deltaX;\n\n    spanRef.current!.scrollLeft += diff * 0.5;\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    spanRef.current!.addEventListener('wheel', wheelHandler, {\n      passive: false,\n    });\n  });\n\n  return (\n    <span\n      className=\"py-2 mt-2 flex flex-row flex-nowrap space-x-4 md:overflow-x-hidden overflow-x-auto cursor-grab touch-pan-x\"\n      ref={spanRef}\n      onMouseDown={mouseDownHandler}\n      onClickCapture={(e) => {\n        if (e.clientX != pos.x || e.clientY != pos.y) {\n          e.stopPropagation();\n        }\n      }}\n    >\n      {children}\n    </span>\n  );\n}\n", "import { Form, Link, useActionData, useSearchParams } from '@remix-run/react';\nimport { ActionFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport { registerCustomerAccount } from '~/providers/account/account';\nimport { XCircleIcon } from '@heroicons/react/24/solid';\nimport {\n  extractRegistrationFormValues,\n  RegisterValidationErrors,\n  validateRegistrationForm,\n} from '~/utils/registration-helper';\nimport { API_URL, DEMO_API_URL } from '~/constants';\nimport { useTranslation } from 'react-i18next';\nimport { getFixedT } from '~/i18next.server';\n\nexport async function action({ request }: ActionFunctionArgs) {\n  if (API_URL === DEMO_API_URL) {\n    const t = await getFixedT(request);\n\n    return {\n      form: t('vendure.registrationError'),\n    };\n  }\n\n  const body = await request.formData();\n  const fieldErrors = validateRegistrationForm(body);\n  if (Object.keys(fieldErrors).length !== 0) {\n    return fieldErrors;\n  }\n\n  const variables = extractRegistrationFormValues(body);\n  const result = await registerCustomerAccount({ request }, variables);\n  if (result.__typename === 'Success') {\n    return redirect('/sign-up/success');\n  } else {\n    const formError: RegisterValidationErrors = {\n      form: result.errorCode,\n    };\n    return json(formError, { status: 401 });\n  }\n}\n\nexport default function SignUpPage() {\n  const [searchParams] = useSearchParams();\n  const formErrors = useActionData<RegisterValidationErrors>();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 className=\"mt-6 text-center text-3xl text-gray-900\">\n            {t('account.create')}\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            {t('common.or')}{' '}\n            <Link\n              to=\"/sign-in\"\n              className=\"font-medium text-primary-600 hover:text-primary-500\"\n            >\n              {t('account.login')}\n            </Link>\n          </p>\n        </div>\n\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <div className=\"bg-yellow-50 border border-yellow-400 text-yellow-800 rounded p-4 text-center text-sm\">\n              <p>{t('vendure.registrationMessage')}</p>\n            </div>\n            <Form className=\"space-y-6\" method=\"post\">\n              <input\n                type=\"hidden\"\n                name=\"redirectTo\"\n                value={searchParams.get('redirectTo') ?? undefined}\n              />\n              <div>\n                <label\n                  htmlFor=\"email\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  {t('account.emailAddress')}\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                  {formErrors?.email && (\n                    <div className=\"text-xs text-red-700\">\n                      {formErrors.email}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"firstName\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  {t('account.firstName')}\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    autoComplete=\"given-name\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"lastName\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  {t('account.lastName')}\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    autoComplete=\"family-name\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"password\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  {t('account.password')}\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                  {formErrors?.password && (\n                    <div className=\"text-xs text-red-700\">\n                      {formErrors.password}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div>\n                <label\n                  htmlFor=\"repeatPassword\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  {t('account.repeatPassword')}\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"repeatPassword\"\n                    name=\"repeatPassword\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                  />\n                  {formErrors?.repeatPassword && (\n                    <div className=\"text-xs text-red-700\">\n                      {formErrors.repeatPassword}\n                    </div>\n                  )}\n                </div>\n              </div>\n              {formErrors?.form && (\n                <div className=\"rounded-md bg-red-50 p-4\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <XCircleIcon\n                        className=\"h-5 w-5 text-red-400\"\n                        aria-hidden=\"true\"\n                      />\n                    </div>\n                    <div className=\"ml-3\">\n                      <h3 className=\"text-sm font-medium text-red-800\">\n                        {t('account.createError')}\n                      </h3>\n                      <p className=\"text-sm text-red-700 mt-2\">\n                        {formErrors.form}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n                >\n                  {t('account.signUp')}\n                </button>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { RegisterCustomerAccountMutationVariables } from '~/generated/graphql';\n\nconst EMAIL_REGEX = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n\nexport type RegisterValidationErrors = {\n  form?: string;\n  email?: string;\n  password?: string;\n  repeatPassword?: string;\n};\n\nexport const validateRegistrationForm = (\n  formData: FormData,\n): RegisterValidationErrors => {\n  const errors: RegisterValidationErrors = {};\n  const email = formData.get('email');\n  const password = formData.get('password');\n  const repeatPassword = formData.get('repeatPassword');\n\n  if (!email || typeof email !== 'string' || !email.match(EMAIL_REGEX)) {\n    errors.email = 'A valid e-mail address is required.';\n  }\n  if (!password || typeof password !== 'string' || password.length < 4) {\n    errors.password = 'Minimum password length is 4 symbols.';\n  }\n  if (!repeatPassword || typeof repeatPassword !== 'string') {\n    errors.repeatPassword = 'Please repeat password!';\n  }\n  if (repeatPassword !== password) {\n    errors.repeatPassword = 'Passwords do not match!';\n  }\n\n  console.log(errors);\n  return errors;\n};\n\nexport const extractRegistrationFormValues = (\n  formData: FormData,\n): RegisterCustomerAccountMutationVariables => {\n  const input: RegisterCustomerAccountMutationVariables['input'] = {\n    emailAddress: formData.get('email') as string,\n    firstName: (formData.get('firstName') as string) || void 0,\n    lastName: (formData.get('lastName') as string) || void 0,\n    password: formData.get('password') as string,\n  };\n\n  return { input };\n};\n", "import { DataFunctionArgs, redirect } from '@remix-run/server-runtime';\nimport { logout } from '~/providers/account/account';\n\nexport async function action({ request }: DataFunctionArgs) {\n  const result = await logout({ request });\n  return redirect('/', { headers: result._headers });\n}\n\nexport async function loader() {\n  return redirect('/');\n}\n", "import { ChevronRightIcon } from '@heroicons/react/24/solid';\nimport { Outlet, useLocation, useOutletContext } from '@remix-run/react';\nimport { CartContents } from '~/components/cart/CartContents';\nimport { OutletContext } from '~/types';\nimport { classNames } from '~/utils/class-names';\nimport { CartTotals } from '~/components/cart/CartTotals';\nimport { useTranslation } from 'react-i18next';\n\nconst steps = ['shipping', 'payment', 'confirmation'];\n\nexport default function Checkout() {\n  const outletContext = useOutletContext<OutletContext>();\n  const { activeOrder, adjustOrderLine, removeItem } = outletContext;\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  let state = 'shipping';\n  if (location.pathname === '/checkout/payment') {\n    state = 'payment';\n  } else if (location.pathname.startsWith('/checkout/confirmation')) {\n    state = 'confirmation';\n  }\n  let isConfirmationPage = state === 'confirmation';\n\n  return (\n    <div className=\"bg-gray-50\">\n      <div\n        className={classNames(\n          isConfirmationPage ? 'lg:max-w-3xl mx-auto' : 'lg:max-w-7xl',\n          'max-w-2xl mx-auto pt-8 pb-24 px-4 sm:px-6 lg:px-8',\n        )}\n      >\n        <h2 className=\"sr-only\">{t('cart.checkout')}</h2>\n        <nav\n          aria-label={t('cart.progress')}\n          className=\"hidden sm:block pb-8 mb-8 border-b\"\n        >\n          <ol role=\"list\" className=\"flex space-x-4 justify-center\">\n            {steps.map((step, stepIdx) => (\n              <li key={step} className=\"flex items-center\">\n                {step === state ? (\n                  <span aria-current=\"page\" className=\"text-primary-600\">\n                    {t(`checkout.steps.${step}`)}\n                  </span>\n                ) : (\n                  <span>{t(`checkout.steps.${step}`)}</span>\n                )}\n\n                {stepIdx !== steps.length - 1 ? (\n                  <ChevronRightIcon\n                    className=\"w-5 h-5 text-gray-300 ml-4\"\n                    aria-hidden=\"true\"\n                  />\n                ) : null}\n              </li>\n            ))}\n          </ol>\n        </nav>\n        <div className=\"lg:grid lg:grid-cols-2 lg:gap-x-12 xl:gap-x-16\">\n          <div className={isConfirmationPage ? 'lg:col-span-2' : ''}>\n            <Outlet context={outletContext} />\n          </div>\n\n          {/* Order summary */}\n          {!isConfirmationPage && (\n            <div className=\"mt-10 lg:mt-0\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n                {t('order.summary')}\n              </h2>\n\n              <CartContents\n                orderLines={activeOrder?.lines ?? []}\n                currencyCode={activeOrder?.currencyCode!}\n                editable={state === 'shipping'}\n                removeItem={removeItem}\n                adjustOrderLine={adjustOrderLine}\n              ></CartContents>\n              <CartTotals order={activeOrder}></CartTotals>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import {\n  HashtagIcon,\n  MapPinIcon,\n  ShoppingBagIcon,\n  UserCircleIcon,\n} from '@heroicons/react/24/solid';\nimport { Form, Outlet, useLoaderData, useMatches } from '@remix-run/react';\nimport { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport { TabProps } from '~/components/tabs/Tab';\nimport { TabsContainer } from '~/components/tabs/TabsContainer';\nimport { getActiveCustomerDetails } from '~/providers/customer/customer';\nimport { useTranslation } from 'react-i18next';\n\nexport async function loader({ request }: DataFunctionArgs) {\n  const { activeCustomer } = await getActiveCustomerDetails({ request });\n  if (!activeCustomer) {\n    return redirect('/sign-in');\n  }\n  return json({ activeCustomer });\n}\n\nexport default function AccountDashboard() {\n  const { activeCustomer } = useLoaderData<typeof loader>();\n  const { firstName, lastName } = activeCustomer!;\n  const { t } = useTranslation();\n\n  const tabs: TabProps[] = [\n    {\n      Icon: UserCircleIcon,\n      text: t('account.details'),\n      to: './',\n    },\n    {\n      Icon: ShoppingBagIcon,\n      text: t('account.purchaseHistory'),\n      to: './history',\n    },\n    {\n      Icon: MapPinIcon,\n      text: t('account.addresses'),\n      to: './addresses',\n    },\n    {\n      Icon: HashtagIcon,\n      text: t('account.password'),\n      to: './password',\n    },\n  ];\n\n  return (\n    <div className=\"max-w-6xl xl:mx-auto px-4\">\n      <h2 className=\"text-3xl sm:text-5xl font-light text-gray-900 my-8\">\n        {t('account.myAccount')}\n      </h2>\n      <p className=\"text-gray-700 text-lg -mt-4\">\n        {t('account.welcomeBack')}, {firstName} {lastName}\n      </p>\n      <Form method=\"post\" action=\"/api/logout\">\n        <button\n          type=\"submit\"\n          className=\"underline text-primary-600 hover:text-primary-800\"\n        >\n          {t('account.signOut')}\n        </button>\n      </Form>\n      <TabsContainer tabs={tabs}>\n        <Outlet></Outlet>\n      </TabsContainer>\n    </div>\n  );\n}\n", "import { NavLink, useMatches, useResolvedPath } from '@remix-run/react';\nimport { To } from '@remix-run/router';\n\ntype IconElement = React.SVGProps<SVGSVGElement> & {\n  title?: string;\n  titleId?: string;\n};\n\nexport type TabProps = {\n  Icon: React.FC<IconElement>;\n  text: string;\n  to: To;\n};\n\nexport function Tab({ Icon, text, to }: TabProps) {\n  const resolved = useResolvedPath(to);\n  const matches = useMatches();\n  const isActive = matches.find((m) => m.pathname === resolved.pathname);\n\n  return (\n    <li className={isActive ? `cursor-default` : `cursor-pointer`}>\n      <NavLink\n        to={to}\n        className={`group w-full gap-x-2 max-w-[12rem] inline-flex items-center justify-around p-4 rounded-t-lg border-b-2 ${\n          isActive\n            ? 'text-primary-500 border-primary-500'\n            : 'border-transparent hover:text-gray-600 hover:border-gray-300'\n        }`}\n      >\n        <Icon\n          className={`w-5 h-5 ${\n            isActive\n              ? 'text-primary-500'\n              : 'text-gray-400 group-hover:text-gray-500'\n          }`}\n        />\n        <p className=\"flex-1\">{text}</p>\n      </NavLink>\n    </li>\n  );\n}\n", "import { ReactNode } from 'react';\nimport { Tab, TabProps } from './Tab';\n\nexport function TabsContainer({\n  tabs,\n  children,\n}: {\n  tabs: TabProps[];\n  children: ReactNode | string;\n}) {\n  return (\n    <>\n      <div className=\"border-b border-gray-200 mt-4\">\n        <ul className=\"gap-x-4 grid grid-cols-2 sm:grid-0 sm:flex sm:flex-wrap -mb-px text-sm font-medium text-center text-gray-500\">\n          {tabs.map((props) => (\n            <Tab\n              Icon={props.Icon}\n              text={props.text}\n              to={props.to}\n              key={props.text}\n            />\n          ))}\n        </ul>\n      </div>\n      {children}\n    </>\n  );\n}\n", "import { Link, useFetcher, useSearchParams } from '@remix-run/react';\nimport { DataFunctionArgs, json, redirect } from '@remix-run/server-runtime';\nimport { login } from '~/providers/account/account';\nimport { ErrorResult } from '~/generated/graphql';\nimport { XCircleIcon } from '@heroicons/react/24/solid';\nimport { Button } from '~/components/Button';\nimport { ArrowPathIcon } from '@heroicons/react/24/solid';\nimport { useTranslation } from 'react-i18next';\n\nexport async function action({ params, request }: DataFunctionArgs) {\n  const body = await request.formData();\n  const email = body.get('email');\n  const password = body.get('password');\n  if (typeof email === 'string' && typeof password === 'string') {\n    const rememberMe = !!body.get('rememberMe');\n    const redirectTo = (body.get('redirectTo') || '/account') as string;\n    const result = await login(email, password, rememberMe, { request });\n    if (result.__typename === 'CurrentUser') {\n      return redirect(redirectTo, { headers: result._headers });\n    } else {\n      return json(result, {\n        status: 401,\n      });\n    }\n  }\n}\n\nexport default function SignInPage() {\n  const [searchParams] = useSearchParams();\n  const login = useFetcher<ErrorResult>();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 className=\"mt-6 text-center text-3xl text-gray-900\">\n            {t('account.signInTitle')}\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            {t('common.or')}{' '}\n            <Link\n              to=\"/sign-up\"\n              className=\"font-medium text-primary-600 hover:text-primary-500\"\n            >\n              {t('account.register')}\n            </Link>\n          </p>\n        </div>\n\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <div className=\"bg-yellow-50 border border-yellow-400 text-yellow-800 rounded p-4 text-center text-sm\">\n              <p>{t('vendure.demoCredentials')}</p>\n              <p>\n                {t('account.emailAddress')}\n                {': '}\n                <span className=\"font-bold\">test@vendure.io</span>\n              </p>\n              <p>\n                {t('account.password')}: <span className=\"font-bold\">test</span>\n              </p>\n            </div>\n            <login.Form method=\"post\">\n              <fieldset disabled={login.state !== 'idle'} className=\"space-y-6\">\n                <input\n                  type=\"hidden\"\n                  name=\"redirectTo\"\n                  value={searchParams.get('redirectTo') ?? undefined}\n                />\n                <div>\n                  <label\n                    htmlFor=\"email\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    {t('account.emailAddress')}\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      autoComplete=\"email\"\n                      required\n                      defaultValue=\"test@vendure.io\"\n                      placeholder={t('account.emailAddress')}\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm disabled:text-gray-400 disabled:bg-gray-200 disabled:cursor-not-allowed\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"password\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    {t('account.password')}\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      autoComplete=\"current-password\"\n                      required\n                      placeholder={t('account.password')}\n                      defaultValue=\"test\"\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm disabled:text-gray-400 disabled:bg-gray-200 disabled:cursor-not-allowed\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <input\n                      id=\"rememberMe\"\n                      name=\"rememberMe\"\n                      type=\"checkbox\"\n                      className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded disabled:bg-gray-300 disabled:cursor-not-allowed\"\n                      defaultChecked\n                    />\n                    <label\n                      htmlFor=\"rememberMe\"\n                      className=\"ml-2 block text-sm text-gray-900\"\n                    >\n                      {t('account.rememberMe')}\n                    </label>\n                  </div>\n\n                  <div className=\"text-sm\">\n                    <a\n                      href=\"#\"\n                      className=\"font-medium text-primary-600 hover:text-primary-500\"\n                    >\n                      {t('account.forgotPassword')}\n                    </a>\n                  </div>\n                </div>\n\n                {login.data && login.state === 'idle' && (\n                  <div className=\"rounded-md bg-red-50 p-4\">\n                    <div className=\"flex\">\n                      <div className=\"flex-shrink-0\">\n                        <XCircleIcon\n                          className=\"h-5 w-5 text-red-400\"\n                          aria-hidden=\"true\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <h3 className=\"text-sm font-medium text-red-800\">\n                          {t('account.errorSignIn')}\n                        </h3>\n                        <p className=\"text-sm text-red-700 mt-2\">\n                          {login.data.message}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                <div>\n                  <Button\n                    type=\"submit\"\n                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n                  >\n                    <span className=\"flex gap-4 items-center\">\n                      {login.state !== 'idle' && (\n                        <ArrowPathIcon className=\"animate-spin h-5 w-5 text-gray-500\" />\n                      )}\n                      {t('account.signIn')}\n                    </span>\n                  </Button>\n                </div>\n              </fieldset>\n            </login.Form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { useLoaderData, useSubmit } from '@remix-run/react';\nimport { useRef, useState } from 'react';\nimport { FacetFilterTracker } from '~/components/facet-filter/facet-filter-tracker';\nimport { filteredSearchLoaderFromPagination } from '~/utils/filtered-search-loader';\nimport { FiltersButton } from '~/components/FiltersButton';\nimport { ValidatedForm } from 'remix-validated-form';\nimport { withZod } from '@remix-validated-form/with-zod';\nimport { paginationValidationSchema } from '~/utils/pagination';\nimport { FilterableProductGrid } from '~/components/products/FilterableProductGrid';\nimport { useTranslation } from 'react-i18next';\n\nconst paginationLimitMinimumDefault = 25;\nconst allowedPaginationLimits = new Set<number>([\n  paginationLimitMinimumDefault,\n  50,\n  100,\n]);\nconst validator = withZod(paginationValidationSchema(allowedPaginationLimits));\n\nexport const { filteredSearchLoader: loader } =\n  filteredSearchLoaderFromPagination(\n    allowedPaginationLimits,\n    paginationLimitMinimumDefault,\n  );\n\nexport default function Search() {\n  const loaderData = useLoaderData<Awaited<typeof loader>>();\n  const { result, resultWithoutFacetValueFilters, term, facetValueIds } =\n    loaderData;\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false);\n  const facetValuesTracker = useRef(new FacetFilterTracker());\n  facetValuesTracker.current.update(\n    result,\n    resultWithoutFacetValueFilters,\n    facetValueIds,\n  );\n  const submit = useSubmit();\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"max-w-6xl mx-auto px-4\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-3xl sm:text-5xl font-light tracking-tight text-gray-900 my-8\">\n          {term\n            ? `${t('common.resultsFor')} \"${term}\"`\n            : t('common.allResults')}\n        </h2>\n\n        <FiltersButton\n          filterCount={facetValueIds.length}\n          onClick={() => setMobileFiltersOpen(true)}\n        />\n      </div>\n\n      <ValidatedForm\n        validator={validator}\n        method=\"get\"\n        onChange={(e) => submit(e.currentTarget, { preventScrollReset: true })}\n      >\n        <FilterableProductGrid\n          allowedPaginationLimits={allowedPaginationLimits}\n          mobileFiltersOpen={mobileFiltersOpen}\n          setMobileFiltersOpen={setMobileFiltersOpen}\n          {...loaderData}\n        />\n      </ValidatedForm>\n    </div>\n  );\n}\n", "import { useEffect, useRef } from 'react';\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\nimport { ActionFunctionArgs, redirect } from '@remix-run/server-runtime';\nimport { CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { verifyCustomerAccount } from '~/providers/account/account';\nimport { useTranslation } from 'react-i18next';\nimport { getFixedT } from '~/i18next.server';\nimport { LoaderFunctionArgs } from '@remix-run/router';\n\ntype LoaderReturnType = {\n  success: boolean;\n  error?: string;\n  headersJson?: string;\n};\n\nexport async function loader({\n  request,\n}: LoaderFunctionArgs): Promise<LoaderReturnType> {\n  const url = new URL(request.url);\n  const token = url.searchParams.get('token');\n  if (!token) {\n    const t = await getFixedT(request);\n\n    return {\n      success: false,\n      error: t('common.tokenError'),\n    };\n  }\n\n  const result = await verifyCustomerAccount({ request }, token);\n  if (result.__typename !== 'CurrentUser') {\n    return { success: false, error: result.message };\n  }\n\n  const headersJson = JSON.stringify(Object.fromEntries(result._headers));\n  return { success: true, headersJson };\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const body = await request.formData();\n  const headersJson = body.get('headers') as string;\n  const redirectTarget = body.get('redirect') as string;\n\n  if (!headersJson) {\n    return null;\n  }\n\n  const headers = new Headers();\n  const headerData = JSON.parse(headersJson);\n  Object.keys(headerData).forEach((key) => {\n    headers.set(key, headerData[key]);\n  });\n\n  return redirect(redirectTarget, { headers });\n}\n\nexport default function VerifyTokenPage() {\n  const [searchParams] = useSearchParams();\n  const result = useLoaderData<LoaderReturnType>();\n  const btnRef = useRef<HTMLButtonElement>(null);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (!result.success || !btnRef.current) {\n      return;\n    }\n\n    const submitBtn = btnRef.current;\n    setTimeout(() => submitBtn.click(), 5000);\n  }, [result]);\n\n  return (\n    <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {result.success ? (\n            <div className=\"rounded-md bg-green-100 p-4\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0\">\n                  <CheckCircleIcon\n                    className=\"h-5 w-5 text-green-600\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-green-700\">\n                    {t('account.verifyMessage')}\n                  </p>\n                </div>\n                <form method=\"post\">\n                  <input\n                    type=\"hidden\"\n                    name=\"redirect\"\n                    value={searchParams.get('redirectTo') || '/'}\n                  />\n                  <input\n                    type=\"hidden\"\n                    name=\"headers\"\n                    value={result.headersJson}\n                  />\n                  <button\n                    ref={btnRef}\n                    type=\"submit\"\n                    style={{ display: 'none ' }}\n                  />\n                </form>\n              </div>\n            </div>\n          ) : (\n            <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <XCircleIcon\n                    className=\"h-5 w-5 text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-red-700\">{result.error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { useLoaderData } from '@remix-run/react';\nimport { getCollections } from '~/providers/collections/collections';\nimport { CollectionCard } from '~/components/collections/CollectionCard';\nimport { BookOpenIcon } from '@heroicons/react/24/solid';\nimport { LoaderArgs } from '@remix-run/server-runtime';\nimport { useTranslation } from 'react-i18next';\n\nexport async function loader({ request }: LoaderArgs) {\n  const collections = await getCollections(request, { take: 20 });\n  return {\n    collections,\n  };\n}\n\nexport default function Index() {\n  const { collections } = useLoaderData<typeof loader>();\n  const { t } = useTranslation();\n  const headerImage = collections[0]?.featuredAsset?.preview;\n\n  return (\n    <>\n      <div className=\"relative\">\n        {/* Decorative image and overlay */}\n        <div aria-hidden=\"true\" className=\"absolute inset-0 overflow-hidden\">\n          {headerImage && (\n            <img\n              className=\"absolute inset-0 w-full\"\n              src={headerImage + '?w=800'}\n              alt=\"header\"\n            />\n          )}\n          <div className=\"absolute inset-0 bg-gradient-to-br from-zinc-400 to-black mix-blend-darken\" />\n        </div>\n        <div\n          aria-hidden=\"true\"\n          className=\"absolute inset-0 bg-gray-900 opacity-50\"\n        />\n        <div className=\"relative max-w-3xl mx-auto py-32 px-6 flex flex-col items-center text-center sm:py-64 lg:px-0\">\n          <div className=\"relative bg-zinc-800 bg-opacity-0 rounded-lg p-0\">\n            <h1 className=\"text-6xl text-transparent bg-clip-text font-extrabold tracking-normal lg:text-6xl bg-gradient-to-r from-yellow-600 via-red-500 to-blue-600\">\n              {t('vendure.title')}\n            </h1>\n          </div>\n\n          <p className=\"mt-4 text-2xl text-white\">\n            {t('vendure.intro')}{' '}\n            <a\n              href=\"https://www.vendure.io\"\n              className=\"text-blue-300 hover:text-blue-500\"\n            >\n              Vendure\n            </a>{' '}\n            &{' '}\n            <a\n              href=\"~/routes/__cart/index\"\n              className=\"text-red-300 hover:text-red-500\"\n            >\n              Remix\n            </a>\n          </p>\n          <p className=\"mt-4 text-gray-300 space-x-1\">\n            <BookOpenIcon className=\"w-5 h-5 inline\" />\n            <span>{t('common.readMore')}</span>\n            <a\n              className=\"text-primary-200 hover:text-primary-400\"\n              href=\"https://www.vendure.io/blog/2022/05/lightning-fast-headless-commerce-with-vendure-and-remix\"\n            >\n              {t('vendure.link')}\n            </a>\n          </p>\n        </div>\n      </div>\n\n      <section\n        aria-labelledby=\"category-heading\"\n        className=\"pt-24 sm:pt-32 xl:max-w-7xl xl:mx-auto xl:px-8\"\n      >\n        <div className=\"px-4 sm:px-6 lg:px-8 xl:px-0\">\n          <h2\n            id=\"category-heading\"\n            className=\"text-2xl font-light tracking-tight text-gray-900\"\n          >\n            {t('common.shopByCategory')}\n          </h2>\n        </div>\n\n        <div className=\"mt-4 flow-root\">\n          <div className=\"-my-2\">\n            <div className=\"box-content py-2 px-2 relative overflow-x-auto xl:overflow-visible\">\n              <div className=\"grid justify-items-center grid-cols-2 md:grid-cols-3 gap-y-8 gap-x-8 sm:px-6 lg:px-8 xl:relative xl:px-0 xl:space-x-0 xl:gap-x-8\">\n                {collections.map((collection) => (\n                  <CollectionCard key={collection.id} collection={collection} />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-6 px-4 sm:hidden\">\n          <a\n            href=\"~/routes/__cart/index#\"\n            className=\"block text-sm font-semibold text-primary-600 hover:text-primary-500\"\n          >\n            {t('common.browseCategories')}\n            <span aria-hidden=\"true\"> &rarr;</span>\n          </a>\n        </div>\n      </section>\n    </>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-6S5FYOD2.js','imports':['/build/_shared/chunk-X3PXDGUE.js','/build/_shared/chunk-ATECKQIK.js','/build/_shared/chunk-F4KNNEUR.js','/build/_shared/chunk-E23D2VLJ.js','/build/_shared/chunk-2D5YPC6P.js','/build/_shared/chunk-JR22VO6P.js','/build/_shared/chunk-PLT55Z5M.js','/build/_shared/chunk-2Z2JGDFU.js','/build/_shared/chunk-PZDJHGND.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-KOAEOYDC.js','imports':['/build/_shared/chunk-RDUJMNM6.js','/build/_shared/chunk-FCMJCPO3.js','/build/_shared/chunk-QZYG7WHP.js','/build/_shared/chunk-AY65JH6E.js','/build/_shared/chunk-Y6RJRNBS.js','/build/_shared/chunk-3AWOV2WX.js','/build/_shared/chunk-V4DSXLWW.js','/build/_shared/chunk-SHJ2IKH5.js','/build/_shared/chunk-EW2ICRB6.js','/build/_shared/chunk-OJSGE3VW.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':true},'routes/account':{'id':'routes/account','parentId':'root','path':'account','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account-PXCO2JJF.js','imports':['/build/_shared/chunk-UAKY2I6L.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/account._index':{'id':'routes/account._index','parentId':'root','path':'account/_index','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account._index-MQIYQZQW.js','imports':['/build/_shared/chunk-VM4OMNRM.js','/build/_shared/chunk-2YOJOI5F.js','/build/_shared/chunk-LXWSNW2M.js','/build/_shared/chunk-JT2PNE6C.js','/build/_shared/chunk-KEVZUMNP.js','/build/_shared/chunk-ZU6OME4Y.js','/build/_shared/chunk-GVBBBZ4Y.js','/build/_shared/chunk-GORBEOCZ.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/account.addresses':{'id':'routes/account.addresses','parentId':'root','path':'account/addresses','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account.addresses-2Z7526CT.js','imports':['/build/_shared/chunk-JT2PNE6C.js','/build/_shared/chunk-KEVZUMNP.js','/build/_shared/chunk-ZU6OME4Y.js','/build/_shared/chunk-GORBEOCZ.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/account.addresses.$addressId':{'id':'routes/account.addresses.$addressId','parentId':'root','path':'account/addresses/:addressId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account.addresses.$addressId-6MTU6VUA.js','imports':['/build/_shared/chunk-DXBA5LMA.js','/build/_shared/chunk-G6LEXIC6.js','/build/_shared/chunk-2YOJOI5F.js','/build/_shared/chunk-LXWSNW2M.js','/build/_shared/chunk-KEVZUMNP.js','/build/_shared/chunk-ZU6OME4Y.js','/build/_shared/chunk-NAZUJGJB.js','/build/_shared/chunk-GVBBBZ4Y.js','/build/_shared/chunk-AYBHDJL7.js','/build/_shared/chunk-GORBEOCZ.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/account.addresses.new':{'id':'routes/account.addresses.new','parentId':'root','path':'account/addresses/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account.addresses.new-PVYF6NDO.js','imports':['/build/_shared/chunk-DXBA5LMA.js','/build/_shared/chunk-G6LEXIC6.js','/build/_shared/chunk-2YOJOI5F.js','/build/_shared/chunk-LXWSNW2M.js','/build/_shared/chunk-KEVZUMNP.js','/build/_shared/chunk-ZU6OME4Y.js','/build/_shared/chunk-NAZUJGJB.js','/build/_shared/chunk-GVBBBZ4Y.js','/build/_shared/chunk-AYBHDJL7.js','/build/_shared/chunk-GORBEOCZ.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/account.history':{'id':'routes/account.history','parentId':'root','path':'account/history','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account.history-KI32CCOP.js','imports':['/build/_shared/chunk-U43PVDFW.js','/build/_shared/chunk-NAZUJGJB.js','/build/_shared/chunk-GVBBBZ4Y.js','/build/_shared/chunk-GORBEOCZ.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/account.password':{'id':'routes/account.password','parentId':'root','path':'account/password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/account.password-W3QFXSXW.js','imports':['/build/_shared/chunk-LXWSNW2M.js','/build/_shared/chunk-JT2PNE6C.js','/build/_shared/chunk-ZU6OME4Y.js','/build/_shared/chunk-GVBBBZ4Y.js','/build/_shared/chunk-GORBEOCZ.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.active-order':{'id':'routes/api.active-order','parentId':'root','path':'api/active-order','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.active-order-VQJ67ND7.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.logout':{'id':'routes/api.logout','parentId':'root','path':'api/logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.logout-O22KF3EY.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/checkout':{'id':'routes/checkout','parentId':'root','path':'checkout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/checkout-NZOZRJSD.js','imports':['/build/_shared/chunk-BRACU5L4.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/checkout._index':{'id':'routes/checkout._index','parentId':'root','path':'checkout/_index','index':undefined,'caseSensitive':undefined,'module':'/build/routes/checkout._index-B6ETGDXX.js','imports':['/build/_shared/chunk-VM4OMNRM.js','/build/_shared/chunk-G6LEXIC6.js','/build/_shared/chunk-AYBHDJL7.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/checkout.confirmation.$orderCode':{'id':'routes/checkout.confirmation.$orderCode','parentId':'root','path':'checkout/confirmation/:orderCode','index':undefined,'caseSensitive':undefined,'module':'/build/routes/checkout.confirmation.$orderCode-CJDL3K46.js','imports':['/build/_shared/chunk-BRACU5L4.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/checkout.payment':{'id':'routes/checkout.payment','parentId':'root','path':'checkout/payment','index':undefined,'caseSensitive':undefined,'module':'/build/routes/checkout.payment-QO4GLZCZ.js','imports':['/build/_shared/chunk-G6LEXIC6.js','/build/_shared/chunk-AYBHDJL7.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/collections.$slug':{'id':'routes/collections.$slug','parentId':'root','path':'collections/:slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/collections.$slug-YTB7YBCX.js','imports':['/build/_shared/chunk-UMANJAHL.js','/build/_shared/chunk-OSQI5A54.js','/build/_shared/chunk-U43PVDFW.js','/build/_shared/chunk-NWAVXSEC.js','/build/_shared/chunk-QZXK2SVX.js','/build/_shared/chunk-NAZUJGJB.js','/build/_shared/chunk-GVBBBZ4Y.js','/build/_shared/chunk-AYBHDJL7.js','/build/_shared/chunk-GORBEOCZ.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-ATFGEVUA.js','imports':['/build/_shared/chunk-OSQI5A54.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/products.$slug':{'id':'routes/products.$slug','parentId':'root','path':'products/:slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/products.$slug-L35EML7V.js','imports':['/build/_shared/chunk-NWAVXSEC.js','/build/_shared/chunk-QZXK2SVX.js','/build/_shared/chunk-AYBHDJL7.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/search':{'id':'routes/search','parentId':'root','path':'search','index':undefined,'caseSensitive':undefined,'module':'/build/routes/search-HGX65DH7.js','imports':['/build/_shared/chunk-UMANJAHL.js','/build/_shared/chunk-U43PVDFW.js','/build/_shared/chunk-QZXK2SVX.js','/build/_shared/chunk-NAZUJGJB.js','/build/_shared/chunk-GVBBBZ4Y.js','/build/_shared/chunk-AYBHDJL7.js','/build/_shared/chunk-GORBEOCZ.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/sign-in':{'id':'routes/sign-in','parentId':'root','path':'sign-in','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in-JBIARJGW.js','imports':['/build/_shared/chunk-GORBEOCZ.js','/build/_shared/chunk-UAKY2I6L.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/sign-up.index':{'id':'routes/sign-up.index','parentId':'root','path':'sign-up','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up.index-7TWYM7ZO.js','imports':['/build/_shared/chunk-UAKY2I6L.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/sign-up.success':{'id':'routes/sign-up.success','parentId':'root','path':'sign-up/success','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up.success-45YJ4DZ5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/verify':{'id':'routes/verify','parentId':'root','path':'verify','index':undefined,'caseSensitive':undefined,'module':'/build/routes/verify-ZMFLS72W.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/verify-email-address-change':{'id':'routes/verify-email-address-change','parentId':'root','path':'verify-email-address-change','index':undefined,'caseSensitive':undefined,'module':'/build/routes/verify-email-address-change-BSRV26ET.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'6890ac58','hmr':{'runtime':'/build/_shared/chunk-2D5YPC6P.js','timestamp':1745511704335},'url':'/build/manifest-6890AC58.js'};", "\nimport * as entryServer from \"/Users/prabishdangi/Desktop/Personal/project/storefront-remix-starter/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/checkout.confirmation.$orderCode.tsx\";\nimport * as route2 from \"./routes/account.addresses.$addressId.tsx\";\nimport * as route3 from \"./routes/verify-email-address-change.tsx\";\nimport * as route4 from \"./routes/account.addresses.new.tsx\";\nimport * as route5 from \"./routes/account.addresses.tsx\";\nimport * as route6 from \"./routes/collections.$slug.tsx\";\nimport * as route7 from \"./routes/account.password.tsx\";\nimport * as route8 from \"./routes/api.active-order.tsx\";\nimport * as route9 from \"./routes/checkout.payment.tsx\";\nimport * as route10 from \"./routes/account.history.tsx\";\nimport * as route11 from \"./routes/checkout._index.tsx\";\nimport * as route12 from \"./routes/sign-up.success.tsx\";\nimport * as route13 from \"./routes/account._index.tsx\";\nimport * as route14 from \"./routes/products.$slug.tsx\";\nimport * as route15 from \"./routes/sign-up.index.tsx\";\nimport * as route16 from \"./routes/api.logout.ts\";\nimport * as route17 from \"./routes/checkout.tsx\";\nimport * as route18 from \"./routes/account.tsx\";\nimport * as route19 from \"./routes/sign-in.tsx\";\nimport * as route20 from \"./routes/search.tsx\";\nimport * as route21 from \"./routes/verify.tsx\";\nimport * as route22 from \"./routes/index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/checkout.confirmation.$orderCode\": {\n      id: \"routes/checkout.confirmation.$orderCode\",\n      parentId: \"root\",\n      path: \"checkout/confirmation/:orderCode\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/account.addresses.$addressId\": {\n      id: \"routes/account.addresses.$addressId\",\n      parentId: \"root\",\n      path: \"account/addresses/:addressId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/verify-email-address-change\": {\n      id: \"routes/verify-email-address-change\",\n      parentId: \"root\",\n      path: \"verify-email-address-change\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/account.addresses.new\": {\n      id: \"routes/account.addresses.new\",\n      parentId: \"root\",\n      path: \"account/addresses/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/account.addresses\": {\n      id: \"routes/account.addresses\",\n      parentId: \"root\",\n      path: \"account/addresses\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/collections.$slug\": {\n      id: \"routes/collections.$slug\",\n      parentId: \"root\",\n      path: \"collections/:slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/account.password\": {\n      id: \"routes/account.password\",\n      parentId: \"root\",\n      path: \"account/password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/api.active-order\": {\n      id: \"routes/api.active-order\",\n      parentId: \"root\",\n      path: \"api/active-order\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/checkout.payment\": {\n      id: \"routes/checkout.payment\",\n      parentId: \"root\",\n      path: \"checkout/payment\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/account.history\": {\n      id: \"routes/account.history\",\n      parentId: \"root\",\n      path: \"account/history\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/checkout._index\": {\n      id: \"routes/checkout._index\",\n      parentId: \"root\",\n      path: \"checkout/_index\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/sign-up.success\": {\n      id: \"routes/sign-up.success\",\n      parentId: \"root\",\n      path: \"sign-up/success\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/account._index\": {\n      id: \"routes/account._index\",\n      parentId: \"root\",\n      path: \"account/_index\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/products.$slug\": {\n      id: \"routes/products.$slug\",\n      parentId: \"root\",\n      path: \"products/:slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/sign-up.index\": {\n      id: \"routes/sign-up.index\",\n      parentId: \"root\",\n      path: \"sign-up\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/api.logout\": {\n      id: \"routes/api.logout\",\n      parentId: \"root\",\n      path: \"api/logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/checkout\": {\n      id: \"routes/checkout\",\n      parentId: \"root\",\n      path: \"checkout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/account\": {\n      id: \"routes/account\",\n      parentId: \"root\",\n      path: \"account\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/sign-in\": {\n      id: \"routes/sign-in\",\n      parentId: \"root\",\n      path: \"sign-in\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/search\": {\n      id: \"routes/search\",\n      parentId: \"root\",\n      path: \"search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/verify\": {\n      id: \"routes/verify\",\n      parentId: \"root\",\n      path: \"verify\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route22\n    }\n  };"],
  "mappings": "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",
  "names": ["createInstance", "createInstance", "Link", "useLoaderData", "useTranslation", "jsxDEV", "useMatches", "useEffect", "useTranslation", "jsxDEV", "gql", "requester", "sessionStorage", "gql", "gql", "activeChannel", "gql", "useEffect", "useState", "Fragment", "Form", "Link", "jsxDEV", "useTranslation", "jsxDEV", "adjustOrderLine", "Link", "Form", "Link", "useTranslation", "jsxDEV", "adjustOrderLine", "Fragment", "Link", "gql", "gql", "Link", "useTranslation", "jsxDEV", "useEffect", "useTranslation", "jsxDEV", "useState", "useLoaderData", "useTranslation", "adjustOrderLine", "useEffect", "Link", "loader", "gql", "gql", "useLoaderData", "useTranslation", "jsxDEV", "useEffect", "useState", "useTranslation", "jsxDEV", "loader", "useLoaderData", "loader", "useLoaderData", "json", "useEffect", "jsxDEV", "Dialog", "Transition", "XMarkIcon", "jsxDEV", "clsx", "Fragment", "jsxDEV", "Transition", "Dialog", "XMarkIcon", "Footer", "clsx", "jsxDEV", "useState", "state", "__commonJS", "Symbol", "Map", "entry", "isArray", "string", "get", "__toESM", "err", "clsx", "React", "useField", "clsx", "jsxDEV", "jsxDEV", "React", "useField", "clsx", "React", "useField", "useTranslation", "jsxDEV", "React", "useField", "useTranslation", "jsxDEV", "gql", "gql", "gql", "gql", "useTranslation", "jsxDEV", "loader", "address", "json", "useLoaderData", "navigation", "useEffect", "action", "loader", "useEffect", "useRef", "useLoaderData", "redirect", "CheckCircleIcon", "XCircleIcon", "useTranslation", "jsxDEV", "loader", "action", "redirect", "useLoaderData", "useRef", "useTranslation", "useEffect", "CheckCircleIcon", "XCircleIcon", "action", "loader", "useActionData", "useLoaderData", "useNavigate", "useNavigation", "useSubmit", "json", "useRef", "useEffect", "validationError", "useTranslation", "jsxDEV", "loader", "json", "action", "validationError", "useLoaderData", "navigation", "useNavigation", "useActionData", "useNavigate", "useRef", "useSubmit", "useEffect", "action", "loader", "Outlet", "useLoaderData", "json", "Link", "useTranslation", "Fragment", "jsxDEV", "ArrowPathIcon", "Link", "useFetcher", "clsx", "useState", "XCircleIcon", "jsxDEV", "useTranslation", "Fragment", "jsxDEV", "useFetcher", "useState", "clsx", "Link", "ArrowPathIcon", "Fragment", "jsxDEV", "loader", "json", "action", "useLoaderData", "Outlet", "CatchBoundary", "loader", "meta", "useLoaderData", "useSubmit", "useRef", "useState", "useTranslation", "ValidatedForm", "Link", "useTranslation", "jsxDEV", "Link", "jsxDEV", "useTranslation", "jsxDEV", "Fragment", "Dialog", "Transition", "XMarkIcon", "useSearchParams", "useTranslation", "jsxDEV", "Link", "jsxDEV", "Link", "z", "allowedPaginationLimits", "ArrowPathIcon", "useNavigation", "clsx", "useTranslation", "jsxDEV", "allowedPaginationLimits", "navigation", "ArrowPathIcon", "useTranslation", "jsxDEV", "useRef", "useTranslation", "jsxDEV", "allowedPaginationLimits", "useRef", "gql", "gql", "redirect", "allowedPaginationLimits", "paginationLimitMinimumDefault", "redirect", "jsxDEV", "meta", "validator", "loader", "useLoaderData", "useState", "useRef", "useSubmit", "useTranslation", "ValidatedForm", "CatchBoundary", "action", "validator", "PencilIcon", "useActionData", "useNavigation", "json", "useEffect", "useRef", "useState", "ValidatedForm", "validationError", "z", "jsxDEV", "useTranslation", "Fragment", "jsxDEV", "validator", "z", "action", "validationError", "json", "useState", "useActionData", "useNavigation", "useRef", "useEffect", "ValidatedForm", "PencilIcon", "action", "loader", "json", "loader", "action", "sessionStorage", "json", "action", "loader", "json", "redirect", "useLoaderData", "CreditCardIcon", "useTranslation", "jsxDEV", "jsxDEV", "CreditCardIcon", "XCircleIcon", "Form", "useTranslation", "jsxDEV", "useEffect", "useState", "useSubmit", "useTranslation", "jsxDEV", "useState", "useSubmit", "useEffect", "useTranslation", "jsxDEV", "loader", "sessionStorage", "redirect", "json", "action", "useLoaderData", "loader", "useLoaderData", "useNavigation", "useSubmit", "json", "redirect", "useState", "useTranslation", "jsxDEV", "Link", "useTranslation", "Fragment", "jsxDEV", "useState", "key", "t", "ValidatedForm", "useTranslation", "jsxDEV", "paginationLimitMinimumDefault", "allowedPaginationLimits", "loader", "redirect", "json", "useLoaderData", "useSubmit", "navigation", "useNavigation", "ValidatedForm", "loader", "useState", "Form", "useLoaderData", "useNavigate", "useOutletContext", "json", "redirect", "useTranslation", "jsxDEV", "CheckCircleIcon", "useTranslation", "Fragment", "jsxDEV", "RadioGroup", "CheckCircleIcon", "Fragment", "jsxDEV", "RadioGroup", "useTranslation", "jsxDEV", "loader", "sessionStorage", "redirect", "json", "useLoaderData", "useOutletContext", "useState", "useNavigate", "Form", "action", "CheckCircleIcon", "Form", "redirect", "useTranslation", "jsxDEV", "action", "loader", "validator", "CheckIcon", "PencilIcon", "XMarkIcon", "useActionData", "useLoaderData", "useNavigation", "json", "redirect", "useEffect", "useRef", "useState", "ValidatedForm", "validationError", "z", "useTranslation", "Fragment", "jsxDEV", "validator", "z", "loader", "json", "redirect", "action", "formError", "validationError", "useLoaderData", "useActionData", "useTranslation", "useNavigation", "useState", "useRef", "useEffect", "jsxDEV", "Fragment", "ValidatedForm", "PencilIcon", "CheckIcon", "XMarkIcon", "CatchBoundary", "loader", "meta", "shouldRevalidate", "json", "useState", "useLoaderData", "useOutletContext", "CheckIcon", "XCircleIcon", "jsxDEV", "useTranslation", "jsxDEV", "useTranslation", "jsxDEV", "useRef", "useEffect", "jsxDEV", "useTranslation", "jsxDEV", "meta", "loader", "sessionStorage", "json", "shouldRevalidate", "useLoaderData", "useOutletContext", "useState", "asset", "CheckIcon", "CatchBoundary", "action", "Form", "Link", "useActionData", "useSearchParams", "json", "redirect", "XCircleIcon", "useTranslation", "Fragment", "jsxDEV", "action", "redirect", "json", "useSearchParams", "useActionData", "useTranslation", "Link", "Form", "XCircleIcon", "action", "loader", "redirect", "action", "redirect", "loader", "ChevronRightIcon", "Outlet", "useLocation", "useOutletContext", "useTranslation", "jsxDEV", "useOutletContext", "adjustOrderLine", "location", "useLocation", "ChevronRightIcon", "Outlet", "loader", "ShoppingBagIcon", "Form", "Outlet", "useLoaderData", "json", "redirect", "useMatches", "jsxDEV", "Fragment", "jsxDEV", "useTranslation", "jsxDEV", "loader", "json", "redirect", "useLoaderData", "ShoppingBagIcon", "Form", "Outlet", "action", "Link", "useFetcher", "useSearchParams", "json", "redirect", "XCircleIcon", "ArrowPathIcon", "useTranslation", "Fragment", "jsxDEV", "action", "redirect", "json", "useSearchParams", "login", "useFetcher", "Link", "XCircleIcon", "loader", "useLoaderData", "useSubmit", "useRef", "useState", "ValidatedForm", "useTranslation", "jsxDEV", "paginationLimitMinimumDefault", "allowedPaginationLimits", "validator", "loader", "useLoaderData", "useState", "useRef", "useSubmit", "ValidatedForm", "action", "loader", "useEffect", "useRef", "useLoaderData", "useSearchParams", "redirect", "CheckCircleIcon", "XCircleIcon", "useTranslation", "jsxDEV", "loader", "action", "redirect", "useSearchParams", "useLoaderData", "useRef", "useTranslation", "useEffect", "CheckCircleIcon", "XCircleIcon", "loader", "useLoaderData", "useTranslation", "Fragment", "jsxDEV", "loader", "useLoaderData"]
}
