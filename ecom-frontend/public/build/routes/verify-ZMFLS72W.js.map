{
  "version": 3,
  "sources": ["../../../app/routes/verify.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/verify.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/verify.tsx\");\n  import.meta.hot.lastModified = \"1745508918463.1626\";\n}\n// REMIX HMR END\n\nimport { useEffect, useRef } from 'react';\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\nimport { redirect } from '@remix-run/server-runtime';\nimport { CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { verifyCustomerAccount } from '~/providers/account/account';\nimport { useTranslation } from 'react-i18next';\nimport { getFixedT } from '~/i18next.server';\nexport async function loader({\n  request\n}) {\n  const url = new URL(request.url);\n  const token = url.searchParams.get('token');\n  if (!token) {\n    const t = await getFixedT(request);\n    return {\n      success: false,\n      error: t('common.tokenError')\n    };\n  }\n  const result = await verifyCustomerAccount({\n    request\n  }, token);\n  if (result.__typename !== 'CurrentUser') {\n    return {\n      success: false,\n      error: result.message\n    };\n  }\n  const headersJson = JSON.stringify(Object.fromEntries(result._headers));\n  return {\n    success: true,\n    headersJson\n  };\n}\nexport async function action({\n  request\n}) {\n  const body = await request.formData();\n  const headersJson = body.get('headers');\n  const redirectTarget = body.get('redirect');\n  if (!headersJson) {\n    return null;\n  }\n  const headers = new Headers();\n  const headerData = JSON.parse(headersJson);\n  Object.keys(headerData).forEach(key => {\n    headers.set(key, headerData[key]);\n  });\n  return redirect(redirectTarget, {\n    headers\n  });\n}\nexport default function VerifyTokenPage() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const result = useLoaderData();\n  const btnRef = useRef(null);\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    if (!result.success || !btnRef.current) {\n      return;\n    }\n    const submitBtn = btnRef.current;\n    setTimeout(() => submitBtn.click(), 5000);\n  }, [result]);\n  return <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {result.success ? <div className=\"rounded-md bg-green-100 p-4\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0\">\n                  <CheckCircleIcon className=\"h-5 w-5 text-green-600\" aria-hidden=\"true\" />\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-green-700\">\n                    {t('account.verifyMessage')}\n                  </p>\n                </div>\n                <form method=\"post\">\n                  <input type=\"hidden\" name=\"redirect\" value={searchParams.get('redirectTo') || '/'} />\n                  <input type=\"hidden\" name=\"headers\" value={result.headersJson} />\n                  <button ref={btnRef} type=\"submit\" style={{\n                display: 'none '\n              }} />\n                </form>\n              </div>\n            </div> : <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-red-700\">{result.error}</p>\n                </div>\n              </div>\n            </div>}\n        </div>\n      </div>\n    </div>;\n}\n_s(VerifyTokenPage, \"7iyyRW4WwZ+a7DzejjTwDrj6J1E=\", false, function () {\n  return [useSearchParams, useLoaderData, useTranslation];\n});\n_c = VerifyTokenPage;\nvar _c;\n$RefreshReg$(_c, \"VerifyTokenPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
