{"version":3,"file":"use-consistent-value.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport fastDeepEqual from 'fast-deep-equal';\n\n// If running server-side we use useEffect, client-side we use useLayoutEffect\n// This is used to avoid the warning when doing SSR and using useLayoutEffect\nconst useSSRLayoutEffect =\n  typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n\n/**\n * Receives an object or array, after each it update it will check if the value\n * is equal to the last one, in case they are it will keep returning the same\n * reference to the old value, if they are different it will update the stored\n * reference and return the new one\n */\nexport default function useConsistentValue<Value>(\n  value: Value,\n  compare = fastDeepEqual\n): Value {\n  const [consistentValue, setState] = React.useState(value);\n  useSSRLayoutEffect(() => {\n    if (compare(value, consistentValue)) return;\n    setState(value);\n  }, [value]);\n  return consistentValue;\n}\n"],"names":["useSSRLayoutEffect","window","React","value","compare","fastDeepEqual","consistentValue","setState"],"mappings":"6KAKMA,EACc,oBAAXC,OAAyBC,YAAkBA,2CASlDC,EACAC,YAAAA,IAAAA,EAAUC,SAE0BH,WAAeC,GAA5CG,OAAiBC,cACxBP,GAAmB,WACbI,EAAQD,EAAOG,IACnBC,EAASJ,KACR,CAACA,IACGG"}