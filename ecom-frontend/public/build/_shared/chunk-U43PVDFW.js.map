{
  "version": 3,
  "sources": ["../../../app/utils/pagination.ts", "../../../app/components/Pagination.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/pagination.ts\"\n);\nimport.meta.hot.lastModified = \"1745508918463.8425\";\n}\n// REMIX HMR END\n\nimport { z } from 'zod';\n\nexport function paginationValidationSchema(\n  allowedPaginationLimits: Set<number>,\n) {\n  const paginationLimitsAsArray = Array.from(allowedPaginationLimits);\n  const paginationLimitDerivedMin = Math.min(...paginationLimitsAsArray);\n  const paginationLimitDerivedMax = Math.max(...paginationLimitsAsArray);\n\n  const paginationLimitSchema = z\n    .number({\n      required_error: 'Limit is required',\n      invalid_type_error: 'Limit must be a number',\n      coerce: true,\n    })\n    .int()\n    .min(paginationLimitDerivedMin, {\n      message: `Limit must be at least ${paginationLimitDerivedMin}`,\n    })\n    .max(paginationLimitDerivedMax, {\n      message: `Maximum limit is ${paginationLimitDerivedMax}`,\n    })\n    .refine((x) => allowedPaginationLimits.has(x));\n\n  const paginationPageSchema = z\n    .number({\n      required_error: 'Page is required',\n      invalid_type_error: 'Page must be a number',\n      coerce: true,\n    })\n    .int()\n    .min(1, { message: 'Page must be at least 1' })\n    .max(1000, { message: \"Page can't be over 1000\" });\n\n  return z.object({\n    limit: paginationLimitSchema,\n    page: paginationPageSchema,\n  });\n}\n\nexport function translatePaginationFrom(\n  appliedPaginationPage: number,\n  appliedPaginationLimit: number,\n) {\n  return (appliedPaginationPage - 1) * appliedPaginationLimit + 1;\n}\n\nexport function translatePaginationTo(\n  appliedPaginationPage: number,\n  appliedPaginationLimit: number,\n  totalItems: number,\n) {\n  return (\n    translatePaginationFrom(appliedPaginationPage, appliedPaginationLimit) +\n    totalItems -\n    1\n  );\n}\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/Pagination.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/Pagination.tsx\");\n  import.meta.hot.lastModified = \"1745508918455.0183\";\n}\n// REMIX HMR END\n\nimport { ArrowPathIcon } from '@heroicons/react/24/solid';\nimport { Select } from '~/components/Select';\nimport { Button } from '~/components/Button';\nimport { useNavigation } from '@remix-run/react';\nimport clsx from 'clsx';\nimport { useTranslation } from 'react-i18next';\nexport function Pagination({\n  appliedPaginationLimit,\n  allowedPaginationLimits,\n  totalItems,\n  appliedPaginationPage,\n  ...props\n}) {\n  _s();\n  const navigation = useNavigation();\n  const {\n    t\n  } = useTranslation();\n  return <div {...props} className={clsx('flex flex-col md:flex-row justify-center items-end md:items-center gap-4 lg:gap-6', props.className)}>\n      <span className=\"flex gap-4 items-center\">\n        {navigation.state !== 'idle' && <ArrowPathIcon className=\"animate-spin h-6 w-6 text-gray-500\" />}\n        <Select name=\"limit\" required noPlaceholder defaultValue={appliedPaginationLimit}>\n          {Array.from(allowedPaginationLimits).map(x => <option key={x} value={x}>\n              {x} {t('common.perPage')}\n            </option>)}\n        </Select>\n      </span>\n\n      <div className=\"flex\" role=\"group\">\n        <Button name=\"page\" type=\"submit\" value={appliedPaginationPage - 1} disabled={appliedPaginationPage <= 1 || navigation.state !== 'idle'} className=\"!text-sm rounded-r-none border-r-0\">\n          {t('common.prev')}\n        </Button>\n        <Button name=\"page\" type=\"submit\" value={appliedPaginationPage + 1} disabled={appliedPaginationPage * appliedPaginationLimit >= totalItems || navigation.state !== 'idle'} className=\"!text-sm rounded-l-none\">\n          {t('common.next')}\n        </Button>\n      </div>\n    </div>;\n}\n_s(Pagination, \"Jl2Mr1xTC58emDVtjb2ErKq/V+U=\", false, function () {\n  return [useNavigation, useTranslation];\n});\n_c = Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
