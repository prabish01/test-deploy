{"version":3,"file":"use-consistent-value.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport fastDeepEqual from 'fast-deep-equal';\n\n// If running server-side we use useEffect, client-side we use useLayoutEffect\n// This is used to avoid the warning when doing SSR and using useLayoutEffect\nconst useSSRLayoutEffect =\n  typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n\n/**\n * Receives an object or array, after each it update it will check if the value\n * is equal to the last one, in case they are it will keep returning the same\n * reference to the old value, if they are different it will update the stored\n * reference and return the new one\n */\nexport default function useConsistentValue<Value>(\n  value: Value,\n  compare = fastDeepEqual\n): Value {\n  const [consistentValue, setState] = React.useState(value);\n  useSSRLayoutEffect(() => {\n    if (compare(value, consistentValue)) return;\n    setState(value);\n  }, [value]);\n  return consistentValue;\n}\n"],"names":["useSSRLayoutEffect","window","React","useConsistentValue","value","compare","fastDeepEqual","consistentValue","setState"],"mappings":";;;AAIA;;AACA,IAAMA,kBAAkB,GACtB,OAAOC,MAAP,KAAkB,WAAlB,GAAgCC,SAAhC,GAAkDA,eADpD;AAGA;;;;;;;SAMwBC,mBACtBC,OACAC;MAAAA;AAAAA,IAAAA,UAAUC;;;wBAE0BJ,QAAA,CAAeE,KAAf;MAA7BG;MAAiBC;;AACxBR,EAAAA,kBAAkB,CAAC;AACjB,QAAIK,OAAO,CAACD,KAAD,EAAQG,eAAR,CAAX,EAAqC;AACrCC,IAAAA,QAAQ,CAACJ,KAAD,CAAR;AACD,GAHiB,EAGf,CAACA,KAAD,CAHe,CAAlB;AAIA,SAAOG,eAAP;AACD;;;;"}