{
  "version": 3,
  "sources": ["../../../app/routes/sign-in.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/sign-in.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/sign-in.tsx\");\n  import.meta.hot.lastModified = \"1745508918462.7764\";\n}\n// REMIX HMR END\n\nimport { Link, useFetcher, useSearchParams } from '@remix-run/react';\nimport { json, redirect } from '@remix-run/server-runtime';\nimport { login } from '~/providers/account/account';\nimport { XCircleIcon } from '@heroicons/react/24/solid';\nimport { Button } from '~/components/Button';\nimport { ArrowPathIcon } from '@heroicons/react/24/solid';\nimport { useTranslation } from 'react-i18next';\nexport async function action({\n  params,\n  request\n}) {\n  const body = await request.formData();\n  const email = body.get('email');\n  const password = body.get('password');\n  if (typeof email === 'string' && typeof password === 'string') {\n    const rememberMe = !!body.get('rememberMe');\n    const redirectTo = body.get('redirectTo') || '/account';\n    const result = await login(email, password, rememberMe, {\n      request\n    });\n    if (result.__typename === 'CurrentUser') {\n      return redirect(redirectTo, {\n        headers: result._headers\n      });\n    } else {\n      return json(result, {\n        status: 401\n      });\n    }\n  }\n}\nexport default function SignInPage() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const login = useFetcher();\n  const {\n    t\n  } = useTranslation();\n  return <>\n      <div className=\"flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 className=\"mt-6 text-center text-3xl text-gray-900\">\n            {t('account.signInTitle')}\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            {t('common.or')}{' '}\n            <Link to=\"/sign-up\" className=\"font-medium text-primary-600 hover:text-primary-500\">\n              {t('account.register')}\n            </Link>\n          </p>\n        </div>\n\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <div className=\"bg-yellow-50 border border-yellow-400 text-yellow-800 rounded p-4 text-center text-sm\">\n              <p>{t('vendure.demoCredentials')}</p>\n              <p>\n                {t('account.emailAddress')}\n                {': '}\n                <span className=\"font-bold\">test@vendure.io</span>\n              </p>\n              <p>\n                {t('account.password')}: <span className=\"font-bold\">test</span>\n              </p>\n            </div>\n            <login.Form method=\"post\">\n              <fieldset disabled={login.state !== 'idle'} className=\"space-y-6\">\n                <input type=\"hidden\" name=\"redirectTo\" value={searchParams.get('redirectTo') ?? undefined} />\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                    {t('account.emailAddress')}\n                  </label>\n                  <div className=\"mt-1\">\n                    <input id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" required defaultValue=\"test@vendure.io\" placeholder={t('account.emailAddress')} className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm disabled:text-gray-400 disabled:bg-gray-200 disabled:cursor-not-allowed\" />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                    {t('account.password')}\n                  </label>\n                  <div className=\"mt-1\">\n                    <input id=\"password\" name=\"password\" type=\"password\" autoComplete=\"current-password\" required placeholder={t('account.password')} defaultValue=\"test\" className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm disabled:text-gray-400 disabled:bg-gray-200 disabled:cursor-not-allowed\" />\n                  </div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <input id=\"rememberMe\" name=\"rememberMe\" type=\"checkbox\" className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded disabled:bg-gray-300 disabled:cursor-not-allowed\" defaultChecked />\n                    <label htmlFor=\"rememberMe\" className=\"ml-2 block text-sm text-gray-900\">\n                      {t('account.rememberMe')}\n                    </label>\n                  </div>\n\n                  <div className=\"text-sm\">\n                    <a href=\"#\" className=\"font-medium text-primary-600 hover:text-primary-500\">\n                      {t('account.forgotPassword')}\n                    </a>\n                  </div>\n                </div>\n\n                {login.data && login.state === 'idle' && <div className=\"rounded-md bg-red-50 p-4\">\n                    <div className=\"flex\">\n                      <div className=\"flex-shrink-0\">\n                        <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                      </div>\n                      <div className=\"ml-3\">\n                        <h3 className=\"text-sm font-medium text-red-800\">\n                          {t('account.errorSignIn')}\n                        </h3>\n                        <p className=\"text-sm text-red-700 mt-2\">\n                          {login.data.message}\n                        </p>\n                      </div>\n                    </div>\n                  </div>}\n\n                <div>\n                  <Button type=\"submit\" className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\">\n                    <span className=\"flex gap-4 items-center\">\n                      {login.state !== 'idle' && <ArrowPathIcon className=\"animate-spin h-5 w-5 text-gray-500\" />}\n                      {t('account.signIn')}\n                    </span>\n                  </Button>\n                </div>\n              </fieldset>\n            </login.Form>\n          </div>\n        </div>\n      </div>\n    </>;\n}\n_s(SignInPage, \"1IZYs5YoaHUUV7tWy4lqQt1lkVA=\", false, function () {\n  return [useSearchParams, useFetcher, useTranslation];\n});\n_c = SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
