import type { DataFunctionArgs } from "@remix-run/netlify/node_modules/@remix-run/node/node_modules/@remix-run/server-runtime/dist/routeModules";
import type { AssetsManifest, EntryContext, FutureConfig } from "@remix-run/netlify/node_modules/@remix-run/node/node_modules/@remix-run/server-runtime/dist/entry";
import type { ServerRouteManifest } from "@remix-run/netlify/node_modules/@remix-run/node/node_modules/@remix-run/server-runtime/dist/routes";
import type { AppLoadContext } from "@remix-run/netlify/node_modules/@remix-run/node/node_modules/@remix-run/server-runtime/dist/data";
/**
 * The output of the compiler for the server build.
 */
export interface ServerBuild {
    entry: {
        module: ServerEntryModule;
    };
    routes: ServerRouteManifest;
    assets: AssetsManifest;
    publicPath: string;
    assetsBuildDirectory: string;
    future: FutureConfig;
}
export interface HandleDocumentRequestFunction {
    (request: Request, responseStatusCode: number, responseHeaders: Headers, context: EntryContext, loadContext: AppLoadContext): Promise<Response> | Response;
}
export interface HandleDataRequestFunction {
    (response: Response, args: DataFunctionArgs): Promise<Response> | Response;
}
export interface HandleErrorFunction {
    (error: unknown, args: DataFunctionArgs): void;
}
/**
 * A module that serves as the entry point for a Remix app during server
 * rendering.
 */
export interface ServerEntryModule {
    default: HandleDocumentRequestFunction;
    handleDataRequest?: HandleDataRequestFunction;
    handleError?: HandleErrorFunction;
}
